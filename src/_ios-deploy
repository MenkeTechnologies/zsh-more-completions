#compdef ios-deploy

local arguments

arguments=(
  {-d,--debug}'[launch the app in lldb after installation]'
  {-i,--id}'[the id of the device to connect to]'
  {-c,--detect}'[only detect if the device is connected]'
  {-b,--bundle}'[.app> the path to the app bundle to be installed]'
  {-a,--args}'[command line arguments to pass to the app when launching it]'
  {-t,--timeout}'[number of seconds to wait for a device to be connected]'
  {-u,--unbuffered}'[dont buffer stdout]'
  {-n,--nostart}'[do not start the app when debugging]'
  {-N,--nolldb}'[start debugserver only. do not run lldb]'
  {-I,--noninteractive}'[start in non interactive mode (quit when app crashes or exits)]'
  {-L,--justlaunch}'[just launch the app and exit lldb]'
  {-v,--verbose}'[enable verbose output]'
  {-m,--noinstall}'[directly start debugging without app install (-d not required)]'
  {-p,--port}'[port used for device, default: dynamic]'
  {-r,--uninstall}'[uninstall the app before install (do not use with -m; app cache and data are cleared)]'
  {-9,--uninstall}'[_only uninstall the app ONLY. Use only with -1 <bundle_id>]'
  {-1,--bundle}'[_id <bundle id> specify bundle id for list and upload]'
  {-l,--list}'[list files]'
  {-o,--upload}'[upload file]'
  {-w,--download}'[download app tree]'
  {-2,--to}'[pathname> use together with up/download file/tree. specify target]'
  {-D,--mkdir}'[make directory on device]'
  {-R,--rm}'[remove file or directory on device (directories must be empty)]'
  {-V,--version}'[print the executable version]'
  {-e,--exists}'[check if the app with given bundle_id is installed or not]'
  {-B,--list}'[_bundle_id list bundle_id]'
  {-W,--no-wifi}'[ignore wifi devices]'
  '--detect[_deadlocks <sec> start printing backtraces for all threads periodically after specific amount of seconds]'
  '*:filename:_files'
)

_arguments -s $arguments
