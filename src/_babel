#compdef babel

local arguments

arguments=(
    {-f,--filename}'[filename to use when reading from stdin - this will be used in source-maps, errors etc]'
    '--retain-lines[retain line numbers - will result in really ugly code]'
    '--no-highlight-code[enable/disable ANSI syntax highlighting of code frames (on by default)]'
    '--presets[]'
    '--plugins[]'
    '--ignore[list of glob paths to **not** compile]'
    '--only[list of glob paths to **only** compile]'
    '--no-comments[write comments to generated output (true by default)]'
    '--compact[do not include superfluous whitespace characters and line terminators \[true|false|auto\]]'
    '--minified[save as much bytes when printing \[true|false\]]'
    {-s,--source-maps}'[\[true|false|inline\]]'
    '--source-map-target[set `file` on returned source map]'
    '--source-file-name[set `sources\[0\]` on returned source map]'
    '--source-root[the root from which all sources are relative]'
    '--no-babelrc[Whether or not to look up .babelrc and .babelignore files]'
    '--source-type[]'
    '--auxiliary-comment-before[print a comment before any injected non-user code]'
    '--auxiliary-comment-after[print a comment after any injected non-user code]'
    '--module-root[optional prefix for the AMD module formatter that will be prepend to the filename on module definitions]'
    {-M,--module-ids}'[insert an explicit id for modules]'
    '--module-id[specify a custom name for module ids]'
    '--parser-opts[Options to pass into the parser, or to change parsers (parserOpts.parser)]'
    '--generator-opts[Options to pass into the generator, or to change generators (generatorOpts.generator)]'
    {-x,--extensions}'[List of extensions to compile when a directory has been input \[.es6,.js,.es,.jsx\]]'
    {-w,--watch}'[Recompile files on changes]'
    '--skip-initial-build[Do not compile files before watching]'
    {-o,--out-file}'[Compile all input files into a single file]'
    {-d,--out-dir}'[Compile an input directory of modules into an output directory]'
    {-D,--copy-files}'[When compiling a directory copy over non-compilable files]'
    {-q,--quiet}'[Dont log anything]'
    {-V,--version}'[output the version number]'
    '(- * :)'{-h,--help}'[output usage information]'
    '*:filename:_files'
)

_arguments -s $arguments
