#compdef bwrap

local arguments

arguments=(
  '--help[print this help]'
  '--version[print version]'
  '--args[parse NUL-separated args from FD]'
  '--unshare-all[unshare every namespace we support by default]'
  '--share-net[retain the network namespace (can only combine with --unshare-all)]'
  '--unshare-user[create new user namespace (may be automatically implied if not setuid)]'
  '--unshare-user-try[create new user namespace if possible else continue by skipping it]'
  '--unshare-ipc[create new ipc namespace]'
  '--unshare-pid[create new pid namespace]'
  '--unshare-net[create new network namespace]'
  '--unshare-uts[create new uts namespace]'
  '--unshare-cgroup[create new cgroup namespace]'
  '--unshare-cgroup-try[create new cgroup namespace if possible else continue by skipping it]'
  '--uid[custom uid in the sandbox (requires --unshare-user)]'
  '--gid[custom gid in the sandbox (requires --unshare-user)]'
  '--hostname[custom hostname in the sandbox (requires --unshare-uts)]'
  '--chdir[change directory to DIR]'
  '--setenv[VALUE Set an environment variable]'
  '--unsetenv[unset an environment variable]'
  '--lock-file[take a lock on DEST while sandbox is running]'
  '--sync-fd[keep this fd open while sandbox is running]'
  '--bind[DEST Bind mount the host path SRC on DEST]'
  '--bind-try[DEST Equal to --bind but ignores non-existant SRC]'
  '--dev-bind[DEST Bind mount the host path SRC on DEST, allowing device access]'
  '--dev-bind-try[DEST Equal to --dev-bind but ignores non-existant SRC]'
  '--ro-bind[DEST Bind mount the host path SRC readonly on DEST]'
  '--ro-bind-try[DEST Equal to --ro-bind but ignores non-existant SRC]'
  '--remount-ro[remount DEST as readonly; does not recursively remount]'
  '--exec-label[exec label for the sandbox]'
  '--file-label[file label for temporary sandbox content]'
  '--proc[mount new procfs on DEST]'
  '--dev[mount new dev on DEST]'
  '--tmpfs[mount new tmpfs on DEST]'
  '--mqueue[mount new mqueue on DEST]'
  '--dir[create dir at DEST]'
  '--file[DEST Copy from FD to destination DEST]'
  '--bind-data[DEST Copy from FD to file which is bind-mounted on DEST]'
  '--ro-bind-data[DEST Copy from FD to file which is readonly bind-mounted on DEST]'
  '--symlink[DEST Create symlink at DEST with target SRC]'
  '--seccomp[load and use seccomp rules from FD]'
  '--block-fd[block on FD until some data to read is available]'
  '--userns-block-fd[block on FD until the user namespace is ready]'
  '--info-fd[write information about the running container to FD]'
  '--new-session[create a new terminal session]'
  '--die-with-parent[kills with SIGKILL child process (COMMAND) when bwrap or bwraps parent dies.]'
  '--as-pid-1[do not install a reaper process with PID=1]'
  '--cap-add[add cap CAP when running as privileged user]'
  '--cap-drop[drop cap CAP when running as privileged user]'
  '*:filename:_files'
)

_arguments -s $arguments
