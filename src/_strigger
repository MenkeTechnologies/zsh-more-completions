#compdef strigger

local arguments

arguments=(
  '--set[create a trigger]'
  '--get[get trigger information]'
  '--clear[delete a trigger]'
  '--block[_err trigger event on BlueGene block error]'
  '--burst[_buffer trigger event on burst buffer error]'
  '--front[_end trigger event on FrontEnd node state changes]'
  {-a,--primary}'[_slurmctld_failure]'
  {-A,--primary}'[_slurmctld_resumed_operation]'
  {-b,--primary}'[_slurmctld_resumed_control]'
  {-B,--backup}'[_slurmctld_failure]'
  {-c,--backup}'[_slurmctld_resumed_operation]'
  {-C,--backup}'[_slurmctld_assumed_control]'
  {-d,--down}'[trigger event when node goes DOWN]'
  {-D,--drained}'[trigger event when node becomes DRAINED]'
  {-e,--primary}'[_slurmctld_acct_buffer_full]'
  {-F,--fail}'[trigger event when node is expected to FAIL]'
  {-f,--fini}'[trigger event when job finishes]'
  '--flags[trigger event flag (perm = permanent)]'
  {-g,--primary}'[_slurmdbd_failure]'
  {-G,--primary}'[_slurmdbd_resumed_operation]'
  {-h,--primary}'[_database_failure]'
  {-H,--primary}'[_database_resumed_operation]'
  {-i,--id}'[a triggers ID number]'
  {-I,--idle}'[trigger event when node remains IDLE]'
  {-j,--jobid}'[trigger related to specific jobid]'
  {-M,--cluster}'[cluster to issue commands to. Default is]'
  {-n,--node}'[trigger related to specific node, all nodes by default]'
  {-N,--noheader}'[do not print the message header]'
  {-o,--offset}'[triggers offset time from event, negative to precede]'
  {-p,--program}'[pathname of program to execute when triggered]'
  {-Q,--quiet}'[quiet mode (suppress informational messages)]'
  {-r,--reconfig}'[trigger event on configuration changes]'
  {-t,--time}'[trigger event on jobs time limit]'
  {-u,--up}'[trigger event when node returned to service from DOWN]'
  '--user[a user name or ID to filter triggers by]'
  {-v,--verbose}'[print detailed event logging]'
  {-V,--version}'[print version information and exit]'
  '--help[show this help message]'
  '--usage[display brief usage message]'
  '*:filename:_files'
)

_arguments -s $arguments
