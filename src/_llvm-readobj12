#compdef llvm-readobj12

local arguments

arguments=(
  '--color[- Use colors in output (default=autodetect)]'
  '-A[- Alias for --arch-specific]'
  '-C[- Alias for --demangle]'
  '-S[- Alias for --section-headers]'
  '--aarch64-neon-syntax[- Choose style of NEON code to emit from AArch64 backend:]'
  '--abort-on-max-devirt-iterations-reached[- Abort when the max iterations for devirtualization CGSCC repeat pass is reached]'
  '--addrsig[- Display address-significance table]'
  '--all[- Equivalent to setting: --file-headers, --program-headers, --section-headers, --symbols, --relocations, --dynamic-table, --notes, --version-info, --unwind, --section-groups and --elf-hash-histogram.]'
  '--amdgpu-bypass-slow-div[- Skip 64-bit divide for dynamic 32-bit values]'
  '--amdgpu-disable-loop-alignment[- Do not align and prefetch loops]'
  '--amdgpu-disable-power-sched[- Disable scheduling to minimize mAI power bursts]'
  '--amdgpu-dpp-combine[- Enable DPP combiner]'
  '--amdgpu-dump-hsa-metadata[- Dump AMDGPU HSA Metadata]'
  '--amdgpu-enable-flat-scratch[- Use flat scratch instructions]'
  '--amdgpu-enable-merge-m0[- Merge and hoist M0 initializations]'
  '--amdgpu-promote-alloca-to-vector-limit[- Maximum byte size to consider promote alloca to vector]'
  '--amdgpu-reserve-vgpr-for-sgpr-spill[- Allocates one VGPR for future SGPR Spill]'
  '--amdgpu-sdwa-peephole[- Enable SDWA peepholer]'
  '--amdgpu-use-aa-in-codegen[- Enable the use of AA during codegen.]'
  '--amdgpu-verify-hsa-metadata[- Verify AMDGPU HSA Metadata]'
  '--amdgpu-vgpr-index-mode[- Use GPR indexing mode instead of movrel for vector indexing]'
  '--arch-specific[- Displays architecture-specific information, if there is any.]'
  '--arm-add-build-attributes[-]'
  '--arm-implicit-it[- Allow conditional instructions outdside of an IT block]'
  '--atomic-counter-update-promoted[- Do counter update using atomic fetch add  for promoted counters only]'
  '--atomic-first-counter[- Use atomic fetch add for first counter in a function (usually the entry counter)]'
  '--bounds-checking-single-trap[- Use one trap block per function]'
  '--cfg-hide-deoptimize-paths[-]'
  '--cfg-hide-unreachable-paths[-]'
  '--cg-profile[- Display callgraph profile section]'
  '--codeview[- Display CodeView debug information]'
  '--codeview-ghash[- Enable global hashing for CodeView type stream de-duplication]'
  '--codeview-merged-types[- Display the merged CodeView type stream]'
  '--codeview-subsection-bytes[- Dump raw contents of codeview debug sections and records]'
  '--coff-basereloc[- Display the PE/COFF .reloc section]'
  '--coff-debug-directory[- Display the PE/COFF debug directory]'
  '--coff-directives[- Display the PE/COFF .drectve section]'
  '--coff-exports[- Display the PE/COFF export table]'
  '--coff-imports[- Display the PE/COFF import table]'
  '--coff-load-config[- Display the PE/COFF load config]'
  '--coff-resources[- Display the PE/COFF .rsrc section]'
  '--coff-tls-directory[- Display the PE/COFF TLS directory]'
  '--cost-kind[- Target cost kind]'
  '--cvp-dont-add-nowrap-flags[-]'
  '-d[- Alias for --dynamic-table]'
  '--debugify-level[- Kind of debug info to add]'
  '--debugify-quiet[- Suppress verbose debugify output]'
  '--demangle[- Demangle symbol names in output]'
  '--dependent-libraries[- Display the dependent libraries section]'
  '--disable-promote-alloca-to-lds[- Disable promote alloca to LDS]'
  '--disable-promote-alloca-to-vector[- Disable promote alloca to vector]'
  '--do-counter-promotion[- Do counter register promotion]'
  '--dot-cfg-mssa[name for generated dot file>  - file name for generated dot file]'
  '--dyn-relocations[- Display the dynamic relocation entries in the file]'
  '--dyn-symbols[- Display the dynamic symbol table]'
  '--dynamic-table[- Display the ELF .dynamic section table]'
  '--elf-hash-histogram[- Display bucket list histogram for hash sections]'
  '--elf-linker-options[- Display the ELF .linker-options section]'
  '--elf-output-style[- Specify ELF dump style]'
  '--elf-section-groups[- Display ELF section group contents]'
  '--emscripten-cxx-exceptions-allowed[- The list of function names in which Emscripten-style exception handling is enabled (see emscripten EMSCRIPTEN_CATCHING_ALLOWED options)]'
  '--enable-cse-in-irtranslator[- Should enable CSE in irtranslator]'
  '--enable-cse-in-legalizer[- Should enable CSE in Legalizer]'
  '--enable-emscripten-cxx-exceptions[- WebAssembly Emscripten-style exception handling]'
  '--enable-emscripten-sjlj[- WebAssembly Emscripten-style setjmp/longjmp handling]'
  '--enable-gvn-hoist[- Enable the GVN hoisting pass (default = off)]'
  '--enable-gvn-memdep[-]'
  '--enable-gvn-sink[- Enable the GVN sinking pass (default = off)]'
  '--enable-load-in-loop-pre[-]'
  '--enable-load-pre[-]'
  '--enable-loop-simplifycfg-term-folding[-]'
  '--enable-name-compression[- Enable name/filename string compression]'
  '--enable-split-backedge-in-load-pre[-]'
  '--expand-relocs[- Expand each shown relocation to multiple lines]'
  '--file-headers[- Display file headers]'
  '--gnu-hash-table[- Display ELF .gnu.hash section]'
  '--gpsize[- Global Pointer Addressing Size.  The default size is 8.]'
  '-h[- Alias for --file-headers]'
  '--hash-based-counter-split[- Rename counter variable of a comdat function based on cfg hash]'
  '--hash-symbols[- Display the dynamic symbols derived from the hash section]'
  '--hash-table[- Display ELF hash table]'
  '--headers[- Equivalent to setting: --file-headers, --program-headers, --section-headers]'
  '--hex-dump[- Display the specified section(s) as hexadecimal bytes]'
  '--hot-cold-split[- Enable hot-cold splitting pass]'
  '--import-all-index[- Import all external functions in index.]'
  '--instcombine-code-sinking[- Enable code sinking]'
  '--instcombine-guard-widening-window[- How wide an instruction window to bypass looking for another guard]'
  '--instcombine-max-iterations[- Limit the maximum number of instruction combining iterations]'
  '--instcombine-max-num-phis[- Maximum number phis to handle in intptr/ptrint folding]'
  '--instcombine-maxarray-size[- Maximum array size considered when doing a combine]'
  '--instcombine-negator-enabled[- Should we attempt to sink negations?]'
  '--instcombine-negator-max-depth[- What is the maximal lookup depth when trying to check for viability of negation sinking.]'
  '--instcombine-unsafe-select-transform[- Enable poison-unsafe select to and/or transform]'
  '--instrprof-atomic-counter-update-all[- Make all profile counter updates atomic (for testing only)]'
  '--internalize-public-api-file[- A file containing list of symbol names to preserve]'
  '--internalize-public-api-list[- A list of symbol names to preserve]'
  '--iterative-counter-promotion[- Allow counter promotion across the whole loop nest.]'
  '-l[- Alias for --program-headers]'
  '--lto-embed-bitcode[- Embed LLVM bitcode in object files produced by LTO]'
  '--lto-pass-remarks-filter[- Only record optimization remarks from passes whose names match the given regular expression]'
  '--lto-pass-remarks-format[- The format used for serializing remarks (default: YAML)]'
  '--lto-pass-remarks-output[- Output filename for pass remarks]'
  '--macho-data-in-code[- Display MachO Data in Code command]'
  '--macho-dysymtab[- Display MachO Dysymtab command]'
  '--macho-indirect-symbols[- Display MachO indirect symbols]'
  '--macho-linker-options[- Display MachO linker options]'
  '--macho-segment[- Display MachO Segment command]'
  '--macho-version-min[- Display MachO version min command]'
  '--matrix-default-layout[- Sets the default matrix layout]'
  '--max-counter-promotions[- Max number of allowed counter promotions]'
  '--max-counter-promotions-per-loop[- Max number counter promotions per loop to avoid increasing register pressure too much]'
  '--merror-missing-parenthesis[- Error for missing parenthesis around predicate registers]'
  '--merror-noncontigious-register[- Error for register names that arent contigious]'
  '--mhvx[- Enable Hexagon Vector eXtensions]'
  '--mhvx[- Enable Hexagon Vector eXtensions]'
  '--mips-compact-branches[- MIPS Specific: Compact branch policy.]'
  '--mips16-constant-islands[- Enable mips16 constant islands.]'
  '--mips16-hard-float[- Enable mips16 hard float.]'
  '--mir-strip-debugify-only[- Should mir-strip-debug only strip debug info from debugified modules by default]'
  '--mno-compound[- Disable looking for compound instructions for Hexagon]'
  '--mno-fixup[- Disable fixing up resolved relocations for Hexagon]'
  '--mno-ldc1-sdc1[- Expand double precision loads and stores to their single precision counterparts]'
  '--mno-pairing[- Disable looking for duplex instructions for Hexagon]'
  '--mwarn-missing-parenthesis[- Warn for missing parenthesis around predicate registers]'
  '--mwarn-noncontigious-register[- Warn for register names that arent contigious]'
  '--mwarn-sign-mismatch[- Warn for mismatching a signed and unsigned value]'
  '--needed-libs[- Display the needed libraries]'
  '--no-discriminators[- Disable generation of discriminator information.]'
  '--notes[- Display the ELF notes in the file]'
  '--nvptx-sched4reg[- NVPTX Specific: schedule for register pressue]'
  '--poison-checking-function-local[- Check that returns are non-poison (for testing)]'
  '--program-headers[- Display ELF program headers]'
  '-r[- Alias for --relocations]'
  '--r600-ir-structurize[- Use StructurizeCFG IR pass]'
  '--raw-relr[- Do not decode relocations in SHT_RELR section, display raw contents]'
  '--rdf-dump[-]'
  '--rdf-limit[-]'
  '--relocations[- Display the relocation entries in the file]'
  '--runtime-counter-relocation[- Enable relocating counters at runtime.]'
  '-s[- Alias for --section-headers]'
  '--safepoint-ir-verifier-print-only[-]'
  '--sample-profile-check-record-coverage[- Emit a warning if less than N% of records in the input profile are matched to the IR.]'
  '--sample-profile-check-sample-coverage[- Emit a warning if less than N% of samples in the input profile are matched to the IR.]'
  '--sample-profile-max-propagate-iterations[- Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.]'
  '--section-data[- Display section data for each section shown.]'
  '--section-details[- Display the section details]'
  '--section-headers[- Display all section headers.]'
  '--section-mapping[- Display the section to segment mapping.]'
  '--section-relocations[- Display relocations for each section shown.]'
  '--section-symbols[- Display symbols for each section shown.]'
  '--sections[- Alias for --section-headers]'
  '--skip-ret-exit-block[- Suppress counter promotion if exit blocks contain ret.]'
  '--speculative-counter-promotion-max-exiting[- The max number of exiting blocks of a loop to allow  speculative counter promotion]'
  '--speculative-counter-promotion-to-loop[- When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.]'
  '--stack-sizes[- Display contents of all stack sizes sections]'
  '--stackmap[- Display contents of stackmap section]'
  '--string-dump[- Display the specified section(s) as a list of strings]'
  '--summary-file[- The summary file to use for function importing.]'
  '--symbols[- Display the symbol table. Also display the dynamic symbol table when using GNU output style for ELF]'
  '-t[- Alias for --symbols]'
  '--tail-predication[- MVE tail-predication pass options]'
  '--thinlto-assume-merged[- Assume the input has already undergone ThinLTO function importing and the other pre-optimization pipeline changes.]'
  '--threads[-]'
  '--unwind[- Display unwind information]'
  '--verify-region-info[- Verify region info (time consuming)]'
  '--version-info[- Display ELF version sections (if present)]'
  '--vp-counters-per-site[- The average number of profile counters allocated per value profiling site.]'
  '--vp-static-alloc[- Do static counter allocation for value profiler]'
  '--x86-align-branch[- Specify types of branches to align (plus separated list of types):]'
  '--x86-align-branch-boundary[- Control how the assembler should align branches with NOP. If the boundarys size is not 0, it should be a power of 2 and no less than 32. Branches will be aligned to prevent from being across or against the boundary of specified size. The default value 0 does not align branches.]'
  '--x86-branches-within-32B-boundaries[- Align selected instructions to mitigate negative performance impact of Intels micro code update for errata skx102.  May break assumptions about labels corresponding to particular instructions, and should be used with caution.]'
  '--x86-pad-max-prefix-size[- Maximum number of prefixes to use for padding]'
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '*:filename:_files'
)

_arguments -s $arguments
