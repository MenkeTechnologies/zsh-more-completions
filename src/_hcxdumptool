#compdef hcxdumptool

local arguments

arguments=(
  '-i[interface (monitor mode will be enabled by hcxdumptool)]'
  '-o[file> : output file in pcapngformat]'
  '-O[file> : output file in pcapngformat]'
  '-W[file> : output file in pcapngformat]'
  '-c[set scan list (1,2,3,...)]'
  '-t[stay time on channel before hopping to the next channel]'
  '-T[set maximum ERROR count (hcxdumptool terminates when the value is reached)]'
  '-E[EAPOL timeout]'
  '-D[deauthentication interval]'
  '-A[ap attack interval]'
  '-I[show wlan interfaces and quit]'
  '-C[show available channels and quit]'
  '-h[show this help]'
  '-v[show version]'
  '--filterlist[mac filter list]'
  '--filtermode[mode for filter list]'
  '--disable[_active_scan : do not transmit proberequests to BROADCAST using a BROADCAST ESSID]'
  '--disable[_deauthentications : disable transmitting deauthentications]'
  '--give[_up_deauthentications=<digit>: disable transmitting deauthentications after n tries]'
  '--disable[_disassociations : disable transmitting disassociations]'
  '--disable[_ap_attacks : disable attacks on single access points]'
  '--give[_up_ap_attacks=<digit> : disable transmitting directed proberequests after n tries]'
  '--disable[_client_attacks : disable attacks on single clients]'
  '--do[_rcascan : show radio channel assignment (scan for target access points)]'
  '--ap[_mac=<mac_addr> : use this MAC address for access point as start MAC]'
  '--station[_mac=<mac_addr> : use this MAC address for station]'
  '--station[_vendor=<digit> : use this VENDOR information for station]'
  '--use[_gpsd : use GPSD to retrieve position]'
  '--save[_rcascan=<file> : output rca scan list to file when hcxdumptool terminated]'
  '--save[_rcascan_raw=<file> : output file in pcapng format]'
  '--enable[_status=<digit> : enable status messages]'
  '--poweroff[once hcxdumptool terminated, power off system]'
  '--ignore[_warning : hcxdumptool will not terminate if other services take access on the device]'
  '--help[show this help]'
  '--version[show version]'
  '*:filename:_files'
)

_arguments -s $arguments
