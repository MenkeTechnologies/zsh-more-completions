#compdef tcpreplay

local arguments

arguments=(
  {-d,--dbug}'[enable debugging output]'
  {-q,--quiet}'[quiet mode]'
  {-T,--timer}'[select packet timing mode: select, ioport, gtod, nano]'
  '--maxsleep[sleep for no more then X milliseconds between packets]'
  {-v,--verbose}'[print decoded packets via tcpdump to STDOUT]'
  {-A,--decode}'[arguments passed to tcpdump decoder]'
  {-K,--preload-pcap}'[preloads packets into RAM before sending]'
  {-c,--cachefile}'[split traffic via a tcpprep cache file]'
  {-2,--dualfile}'[replay two files at a time from a network tap]'
  {-i,--intf1}'[client to server/RX/primary traffic output interface]'
  {-I,--intf2}'[server to client/TX/secondary traffic output interface]'
  '--listnics[list available network interfaces and exit]'
  {-l,--loop}'[loop through the capture file X times]'
  '--loopdelay-ms[delay between loops in milliseconds]'
  '--pktlen[override the snaplen and use the actual packet len]'
  {-L,--limit}'[limit the number of packets to send]'
  '--duration[limit the number of seconds to send]'
  {-x,--multiplier}'[modify replay speed to a given multiple]'
  {-p,--pps}'[replay packets at a given packets/sec]'
  {-M,--mbps}'[replay packets at a given Mbps]'
  {-t,--topspeed}'[replay packets as fast as possible]'
  {-o,--oneatatime}'[replay one packet at a time for each user input]'
  '--pps-multi[number of packets to send for each time interval]'
  '--unique-ip[modify IP addresses each loop iteration to generate unique flows]'
  '--unique-ip-loops[number of times to loop before assigning new unique ip]'
  '--no-flow-stats[suppress printing and tracking flow count, rates and expirations]'
  '--flow-expiry[number of inactive seconds before a flow is considered expired]'
  {-P,--pid}'[print the PID of tcpreplay at startup]'
  '--stats[print statistics every X seconds, or every loop if 0]'
  {-V,--version}'[print version information]'
  {-h,--less-help}'[display less usage information and exit]'
  {-H,--help}'[display extended usage information and exit]'
  '--save-opts[save the option state to a config file]'
  '--load-opts[load options from a config file]'
  '*:filename:_files'
)

_arguments -s $arguments
