#compdef rpmbuild

local arguments

arguments=(
  '-bp[build through %prep (unpack sources and apply]'
  '-bc[build through %build (%prep, then compile)]'
  '-bi[build through %install (%prep, %build, then]'
  '-bl[verify %files section from <specfile>]'
  '-ba[build source and binary packages from]'
  '-bb[build binary package only from <specfile>]'
  '-bs[build source package only from <specfile>]'
  '-rp[build through %prep (unpack sources and apply]'
  '-rc[build through %build (%prep, then compile)]'
  '-ri[build through %install (%prep, %build, then]'
  '-rl[verify %files section from <source package>]'
  '-ra[build source and binary packages from <source]'
  '-rb[build binary package only from <source]'
  '-rs[build source package only from <source]'
  '-tp[build through %prep (unpack sources and apply]'
  '-tc[build through %build (%prep, then compile)]'
  '-ti[build through %install (%prep, %build, then]'
  '-ta[build source and binary packages from]'
  '-tb[build binary package only from <tarball>]'
  '-ts[build source package only from <tarball>]'
  '--rebuild[build binary package from <source package>]'
  '--recompile[build through %install (%prep, %build, then]'
  '--buildroot[override build root]'
  '--build-in-place[run build in current directory]'
  '--clean[remove build tree when done]'
  '--nobuild[do not execute any stages of the build]'
  '--nodeps[do not verify build dependencies]'
  '--nodirtokens[generate package header(s) compatible with]'
  '--noclean[do not execute %clean stage of the build]'
  '--noprep[do not execute %prep stage of the build]'
  '--nocheck[do not execute %check stage of the build]'
  '--rmsource[remove sources when done]'
  '--rmspec[remove specfile when done]'
  '--short-circuit[skip straight to specified stage (only for]'
  '--target[override target platform]'
  {-D,--define}'[EXPR define MACRO with value EXPR]'
  '--undefine[undefine MACRO]'
  {-E,--eval}'[ print macro expansion of EXPR]'
  '--target[specify target platform]'
  '--macros[...> read <FILE:...> instead of default file(s)]'
  '--noplugins[dont enable any plugins]'
  '--nodigest[dont verify package digest(s)]'
  '--nosignature[dont verify package signature(s)]'
  '--rcfile[...> read <FILE:...> instead of default file(s)]'
  {-r,--root}'[use ROOT as top level directory (default: "/")]'
  '--dbpath[use database in DIRECTORY]'
  '--querytags[display known query tags]'
  '--showrc[display final rpmrc and macro configuration]'
  '--quiet[provide less detailed output]'
  {-v,--verbose}'[provide more detailed output]'
  '--version[print the version of rpm being used]'
  '--with[enable configure <option> for build]'
  '--without[disable configure <option> for build]'
  '--buildpolicy[set buildroot <policy> (e.g. compress man]'
  '--sign[generate GPG signature (deprecated, use]'
  '--usage[display brief usage message]'
  '*:filename:_files'
)

_arguments -s $arguments
