#compdef rollup

local arguments

arguments=(
  {-c,--config}'[use this config file (if argument is used but value]'
  {-d,--dir}'[directory for chunks (if absent, prints to stdout)]'
  {-e,--external}'[comma-separate list of module IDs to exclude]'
  {-f,--format}'[type of output (amd, cjs, esm, iife, umd)]'
  {-g,--globals}'[comma-separate list of `moduleID:Global` pairs]'
  '(- * :)'{-h,--help}'[show this help message]'
  {-i,--input}'[input (alternative to <entry file>)]'
  {-m,--sourcemap}'[generate sourcemap (`-m inline` for inline map)]'
  {-n,--name}'[name for UMD export]'
  {-o,--file}'[single output file (if absent, prints to stdout)]'
  {-v,--version}'[show version number]'
  {-w,--watch}'[watch files in bundle and rebuild on changes]'
  '--amd[.id <id> ID for AMD module (default is anonymous)]'
  '--amd[.define <name> Function to use in place of `define`]'
  '--assetFileNames[name pattern for emitted assets]'
  '--banner[code to insert at top of bundle (outside wrapper)]'
  '--chunkFileNames[name pattern for emitted secondary chunks]'
  '--compact[minify wrapper code]'
  '--context[specify top-level `this` value]'
  '--entryFileNames[name pattern for emitted entry chunks]'
  '--environment[settings passed to config file (see example)]'
  '--no-esModule[do not add __esModule property]'
  '--exports[specify export mode (auto, default, named, none)]'
  '--extend[extend global variable defined by --name]'
  '--footer[code to insert at end of bundle (outside wrapper)]'
  '--no-freeze[do not freeze namespace objects]'
  '--no-indent[dont indent result]'
  '--no-interop[do not include interop block]'
  '--inlineDynamicImports[create single bundle when using dynamic imports]'
  '--intro[code to insert at top of bundle (inside wrapper)]'
  '--namespaceToStringTag[create proper `.toString` methods for namespaces]'
  '--noConflict[generate a noConflict method for UMD globals]'
  '--no-strict[dont emit `"use strict";` in the generated modules]'
  '--outro[code to insert at end of bundle (inside wrapper)]'
  '--preferConst[use `const` instead of `var` for exports]'
  '--preserveModules[preserve module structure]'
  '--preserveSymlinks[do not follow symlinks when resolving files]'
  '--shimMissingExports[create shim variables for missing exports]'
  '--silent[dont print warnings]'
  '--sourcemapExcludeSources[do not include source code in source maps]'
  '--sourcemapFile[specify bundle position for source maps]'
  '--no-treeshake[disable tree-shaking optimisations]'
  '--no-treeshake[.propertyReadSideEffects Ignore property access side-effects]'
  '--treeshake[.pureExternalModules Assume side-effect free externals]'
  '-i[/app.js -o build/app.js -m build/app.js.map]'
  '*:filename:_files'
)

_arguments -s $arguments
