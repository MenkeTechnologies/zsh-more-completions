#compdef lp_solve

local arguments

arguments=(
  '-h[prints this message]'
  '-lp[read from LP file (default)]'
  '-mps[read from MPS file, default in fixed format]'
  '-mps[_free use free format]'
  '-mps[_ibm interprete integers accoring to ibm format]'
  '-mps[_negobjconst negate objective constant]'
  '-fmps[read from MPS file in free format]'
  '-rpar[read parameters from filename.]'
  '-rparopt[options for parameter file:]'
  '-H[header name for parameters. By default Default]'
  '-rxli[filename]'
  '-rxlidata[data file name for xli library.]'
  '-rxliopt[options for xli library.]'
  '-rbas[read basis from filename.]'
  '-gbas[guess basis with variables from filename.]'
  '-plp[print model.]'
  '-wlp[write to LP file]'
  '-wmps[write to MPS file in fixed format]'
  '-wfmps[write to MPS file in free format]'
  '-wxli[filename]'
  '-wxliopt[options for xli library.]'
  '-wxlisol[filename]'
  '-wxlisolopt[options for xli library.]'
  '-wbas[write basis to filename.]'
  '-wpar[write parameters to filename.]'
  '-wparopt[options for parameter file:]'
  '-H[header name for parameters. By default Default]'
  '-wafter[write model after solve (useful if presolve used).]'
  '-parse[_only parse input file but do not solve]'
  '-nonames[ignore variables and constraint names]'
  '-norownames[ignore constraint names]'
  '-nocolnames[ignore variable names]'
  '-min[minimize the lp problem (overrules setting in file)]'
  '-max[maximize the lp problem (overrules setting in file)]'
  '-r[specify max nbr of pivots between a re-inversion of the matrix]'
  '-piv[specify simplex pivot rule]'
  '-piv0[Select first]'
  '-piv1[Select according to Dantzig]'
  '-piv2[Select Devex pricing from Paula Harris (default)]'
  '-piv3[Select steepest edge]'
  '-pivf[in case of Steepest Edge, fall back to DEVEX in primal.]'
  '-pivm[multiple pricing.]'
  '-piva[temporarily use First Index if cycling is detected.]'
  '-pivr[adds a small randomization effect to the selected pricer.]'
  '-pivll[scan entering/leaving columns left rather than right.]'
  '-pivla[scan entering/leaving columns alternatingly left/right.]'
  '-pivh[use Harris primal pivot logic rather than the default.]'
  '-pivt[use true norms for Devex and Steepest Edge initializations.]'
  '-o0[dont put objective in basis.]'
  '-o1[put objective in basis (default).]'
  '-s[use automatic problem scaling.]:scaleloop:'
  '-s0[No scaling]'
  '-s1[Geometric scaling (default)]'
  '-s2[Curtis-reid scaling]'
  '-s3[Scale to convergence using largest absolute value]'
  '-s[:]'
  '-s4[Numerical range-based scaling]'
  '-s5[Scale to convergence using logarithmic mean of all values]'
  '-s6[Scale based on the simple numerical range]'
  '-s7[Scale quadratic]'
  '-sp[also do power scaling.]'
  '-si[also do Integer scaling (default).]'
  '-se[also do equilibration to scale to the -1..1 range (default).]'
  '-presolve[presolve problem before start optimizing (rows+columns)]'
  '-presolverow[presolve problem before start optimizing (rows only)]'
  '-presolvecol[presolve problem before start optimizing (columns only)]'
  '-presolvel[also eliminate linearly dependent rows]'
  '-presolves[also convert constraints to SOSes (only SOS1 handled)]'
  '-presolver[if the phase 1 solution process finds that a constraint is]'
  '-presolvek[simplification of knapsack-type constraints through]'
  '-presolveq[direct substitution of one variable in 2-element equality]'
  '-presolvem[merge rows]'
  '-presolvefd[COLFIXDUAL]'
  '-presolvebnd[presolve bounds]'
  '-presolved[presolve duals]'
  '-presolvef[identify implied free variables (releasing their expl. bounds)]'
  '-presolveslk[IMPLIEDSLK]'
  '-presolveg[reduce (tighten) coef. in integer models based on GCD argument]'
  '-presolveb[attempt to fix binary variables at one of their bounds]'
  '-presolvec[attempt to reduce coefficients in binary models]'
  '-presolverowd[idenfify and delete qualifying constraints that]'
  '-presolvecold[deletes variables (mainly binary), that are dominated]'
  '-C[basis crash mode]'
  '-C0[No crash basis]'
  '-C2[Most feasible basis]'
  '-C3[Least degenerate basis]'
  '-prim[prefer the primal simplex for both phases.]'
  '-dual[prefer the dual simplex for both phases.]'
  '-simplexpp[set Phase1 Primal, Phase2 Primal.]'
  '-simplexdp[set Phase1 Dual, Phase2 Primal.]'
  '-simplexpd[set Phase1 Primal, Phase2 Dual.]'
  '-simplexdd[set Phase1 Dual, Phase2 Dual.]'
  '-degen[use perturbations to reduce degeneracy]'
  '-degenc[use column check to reduce degeneracy]'
  '-degend[dynamic check to reduce degeneracy]'
  '-degenf[anti-degen fixedvars]'
  '-degens[anti-degen stalling]'
  '-degenn[anti-degen numfailure]'
  '-degenl[anti-degen lostfeas]'
  '-degeni[anti-degen infeasible]'
  '-degenb[anti-degen B&B]'
  '-degenr[anti-degen Perturbation of the working RHS at refactorization]'
  '-degenp[anti-degen Limit bound flips]'
  '-trej[set minimum pivot value]'
  '-epsd[set minimum tolerance for reduced costs]'
  '-epsb[set minimum tolerance for the RHS]'
  '-epsel[set tolerance for rounding values to zero]'
  '-epsp[set the value that is used as perturbation scalar for]'
  '-improve[iterative improvement level]'
  '-improve0[none]'
  '-improve1[Running accuracy measurement of solved equations on Bx=r]'
  '-improve2[Improve initial dual feasibility by bound flips (default)]'
  '-improve4[Low-cost accuracy monitoring in the dual]'
  '-improve8[check for primal/dual feasibility at the node level]'
  '-timeout[timeout after sec seconds when not solution found.]'
  '-bfp[set basis factorization package.]'
  '-noint[ignore integer restrictions]'
  '-e[specifies the tolerance which is used to determine whether a]'
  '-g[]'
  '-ga[specifies the absolute MIP gap for branch-and-bound.]'
  '-gr[specifies the relative MIP gap for branch-and-bound.]'
  '-f[specifies that branch-and-bound algorithm stops at first found]'
  '-b[specify a lower bound for the objective function]'
  '-o[specifies that branch-and-bound algorithm stops when objective]'
  '-c[]'
  '-cc[during branch-and-bound, take the ceiling branch first]'
  '-cf[during branch-and-bound, take the floor branch first]'
  '-ca[during branch-and-bound, the algorithm chooses branch]'
  '-depth[set branch-and-bound depth limit]'
  '-n[specify which solution number to return]'
  '-B[specify branch-and-bound rule]'
  '-B0[Select Lowest indexed non-integer column (default)]'
  '-B1[Selection based on distance from the current bounds]'
  '-B2[Selection based on the largest current bound]'
  '-B3[Selection based on largest fractional value]'
  '-B4[Simple, unweighted pseudo-cost of a variable]'
  '-B5[This is an extended pseudo-costing strategy based on minimizing]'
  '-B6[This is an extended pseudo-costing strategy based on maximizing]'
  '-Bw[weightReverse branch-and-bound]'
  '-Bb[branchReverse branch-and-bound]'
  '-Bg[greedy branch-and-bound]'
  '-Bp[pseudoCost branch-and-bound]'
  '-Bf[depthFirst branch-and-bound]'
  '-Br[randomize branch-and-bound]'
  '-BG[gubMode branch-and-bound]'
  '-Bd[dynamic branch-and-bound]'
  '-Bs[restartMode branch-and-bound]'
  '-BB[breadthFirst branch-and-bound]'
  '-Bo[order variables to improve branch-and-bound p]'
  '-Bc[do bound tightening during B&B based of reduced cost info]'
  '-Bi[initialize pseudo-costs by strong branching]'
  '-time[print CPU time to parse input and to calculate result.]'
  '-v[verbose mode, gives flow through the program.]'
  '-v0[NEUTRAL]'
  '-v1[CRITICAL]'
  '-v2[SEVERE]'
  '-v3[IMPORTANT (default)]'
  '-v4[NORMAL]'
  '-v5[DETAILED]'
  '-v6[FULL]'
  '-t[trace pivot selection]'
  '-d[debug mode, all intermediate results are printed]'
  '-R[report information while solving the model]'
  '-Db[do a generic readable data dump of key lp_solve model variables]'
  '-Da[do a generic readable data dump of key lp_solve model variables]'
  '-i[print all intermediate valid solutions.]'
  '-ia[print all intermediate (only non-zero values) valid solutions.]'
  '-stat[print model statistics]'
  '-S[print solution. If detail omitted, then -S2 is used.]'
  '-S0[Print nothing]'
  '-S1[Only objective value]'
  '-S2[Obj value+variables (default)]'
  '-S3[Obj value+variables+constraints]'
  '-S4[Obj value+variables+constraints+duals]'
  '-S5[Obj value+variables+constraints+duals+lp model]'
  '-S6[Obj value+variables+constraints+duals+lp model+scales]'
  '-S7[Obj value+variables+constraints+duals+lp model+scales+lp tableau]'
  '*:filename:_files'
)

_arguments -s $arguments
