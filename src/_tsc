#compdef tsc

local arguments

arguments=(
  '(- * :)'{-h,--help}'[print this message.]'
  {-w,--watch}'[watch input files.]'
  '--pretty[stylize errors and messages using color and context (experimental).]'
  '--all[show all compiler options.]'
  {-v,--version}'[print the compilers version.]'
  '--init[initializes a TypeScript project and creates a tsconfig.json file.]'
  '-p[OR DIRECTORY, --project FILE OR DIRECTORY Compile the project given the path to its configuration file, or to a folder with a tsconfig.json.]'
  {-b,--build}'[build one or more projects and their dependencies, if out of date]'
  {-t,--target}'[specify ECMAScript target version: ES3 (default), ES5, ES2015, ES2016, ES2017,ES2018 or ESNEXT.]'
  {-m,--module}'[specify module code generation: none, commonjs, amd, system, umd, es2015, or ESNext.]'
  '--lib[specify library files to be included in the compilation.]'
  '--allowJs[allow javascript files to be compiled.]'
  '--jsx[specify JSX code generation: preserve, react-native, or react.]'
  {-d,--declaration}'[generates corresponding .d.ts file.]'
  '--declarationMap[generates a sourcemap for each corresponding .d.ts file.]'
  '--sourceMap[generates corresponding .map file.]'
  '--outFile[concatenate and emit output to single file.]'
  '--outDir[redirect output structure to the directory.]'
  '--removeComments[do not emit comments to output.]'
  '--noEmit[do not emit outputs.]'
  '--strict[enable all strict type-checking options.]'
  '--noImplicitAny[raise error on expressions and declarations with an implied any type.]'
  '--strictNullChecks[enable strict null checks.]'
  '--strictFunctionTypes[enable strict checking of function types.]'
  '--strictBindCallApply[enable strict bind, call, and apply methods on functions.]'
  '--strictPropertyInitialization[enable strict checking of property initialization in classes.]'
  '--noImplicitThis[raise error on this expressions with an implied any type.]'
  '--alwaysStrict[parse in strict mode and emit "use strict" for each source file.]'
  '--noUnusedLocals[report errors on unused locals.]'
  '--noUnusedParameters[report errors on unused parameters.]'
  '--noImplicitReturns[report error when not all code paths in function return a value.]'
  '--noFallthroughCasesInSwitch[report errors for fallthrough cases in switch statement.]'
  '--types[type declaration files to be included in compilation.]'
  '--esModuleInterop[enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies allowSyntheticDefaultImports.]'
  '*:filename:_files'
)

_arguments -s $arguments
