#compdef jupyter-nbconvert

local arguments

arguments=(
  '--debug[set log level to logging.DEBUG (maximize logging output)]'
  '--generate-config[generate default config file]'
  '-y[answer yes to any questions instead of prompting.]'
  '--execute[execute the notebook prior to export.]'
  '--allow-errors[continue notebook execution even if one of the cells throws an error and include the error message in the cell output (the default behaviour is to abort conversion). This flag is only relevant if --execute was specified, too.]'
  '--stdin[read a single notebook file from stdin. Write the resulting notebook with default basename notebook.*]'
  '--stdout[write notebook output to stdout instead of files.]'
  '--inplace[run nbconvert in place, overwriting the existing notebook (only]'
  '--clear-output[clear output of current file and save in place]'
  '--no-prompt[exclude input and output prompts from converted document.]'
  '--no-input[exclude input cells and output prompts from converted document.]'
  '--log-level[(Application.log_level)]'
  '--config[(JupyterApp.config_file)]'
  '--to[(NbConvertApp.export_format)]'
  '--template[(TemplateExporter.template_file)]'
  '--writer[(NbConvertApp.writer_class)]'
  '--post[(NbConvertApp.postprocessor_class)]'
  '--output[(NbConvertApp.output_base)]'
  '--output-dir[(FilesWriter.build_directory)]'
  '--reveal-prefix[(SlidesExporter.reveal_url_prefix)]'
  '--nbformat[(NotebookExporter.nbformat_version)]'
  '*:filename:_files'
)

_arguments -s $arguments
