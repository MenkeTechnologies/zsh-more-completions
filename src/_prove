#compdef prove

local arguments

arguments=(
  {-v,--verbose}'[print all test lines.]'
  {-l,--lib}'[add lib to the path for your tests (-Ilib).]'
  {-b,--blib}'[add blib/lib and blib/arch to the path for]'
  {-s,--shuffle}'[run the tests in random order.]'
  {-c,--color}'[colored test output (default).]'
  '--nocolor[do not color test output.]'
  '--count[show the X/Y test count when not verbose]'
  '--nocount[disable the X/Y test count.]'
  {-D,--dry}'[dry run. Show test that would have run.]'
  {-f,--failures}'[show failed tests.]'
  {-o,--comments}'[show comments.]'
  '--ignore-exit[ignore exit status from test scripts.]'
  {-m,--merge}'[merge test scripts STDERR with their STDOUT.]'
  {-r,--recurse}'[recursively descend into directories.]'
  '--reverse[run the tests in reverse order.]'
  {-q,--quiet}'[suppress some test output while running tests.]'
  {-Q,--QUIET}'[only print summary results.]'
  {-p,--parse}'[show full list of TAP parse errors, if any.]'
  '--directives[only show results with TODO or SKIP directives.]'
  '--timer[print elapsed time after each test.]'
  '--trap[trap Ctrl-C and print summary on interrupt.]'
  '--normalize[normalize TAP output in verbose output]'
  '-T[enable tainting checks.]'
  '-t[enable tainting warnings.]'
  '-W[enable fatal warnings.]'
  '-w[enable warnings.]'
  '(- * :)'{-h,--help}'[display this help]'
  {-H,--man}'[longer manpage for prove]'
  '--norc[dont process default .proverc]'
  '-I[library paths to include.]'
  '-P[load plugin (searches App::Prove::Plugin::*.)]'
  '-M[load a module.]'
  {-e,--exec}'[interpreter to run the tests ( for compiled]'
  '--ext[set the extension for tests (default .t)]'
  '--harness[define test harness to use. See TAP::Harness.]'
  '--formatter[result formatter to use. See FORMATTERS.]'
  '--source[load and/or configure a SourceHandler. See]'
  {-a,--archive}'[.tgz Store the resulting TAP in an archive file.]'
  {-j,--jobs}'[run N test jobs in parallel (try 9.)]'
  '--state[control proves persistent state.]'
  '--rc[process options from rcfile]'
  '--rules[rules for parallel vs sequential processing.]'
  '*:filename:_files'
)

_arguments -s $arguments
