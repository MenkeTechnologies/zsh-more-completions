#compdef audit2why

local arguments

arguments=(
  '--version[show programs version number and exit]'
  '(- * :)'{-h,--help}'[show this help message and exit]'
  {-b,--boot}'[audit messages since last boot conflicts with -i]'
  {-a,--all}'[read input from audit log - conflicts with -i]'
  {-p,--policy}'[policy file to use for analysis]'
  {-d,--dmesg}'[read input from dmesg - conflicts with --all and]'
  '--input[]'
  {-i,--input}'[read input from <input> - conflicts with -a]'
  {-l,--lastreload}'[read input only after the last reload]'
  {-r,--requires}'[generate require statements for rules]'
  {-m,--module}'[set the module name - implies --requires]'
  {-M,--module-package}'[generate a module package - conflicts with -o and -m]'
  {-o,--output}'[append output to <filename>, conflicts with -M]'
  {-D,--dontaudit}'[generate policy with dontaudit rules]'
  {-R,--reference}'[generate refpolicy style output]'
  {-N,--noreference}'[do not generate refpolicy style output]'
  {-v,--verbose}'[explain generated output]'
  {-e,--explain}'[fully explain generated output]'
  {-t,--type}'[only process messages with a type that matches this]'
  '--perm-map[file name of perm map]'
  '--interface-info[file name of interface information]'
  '--debug[leave generated modules for -M]'
  {-w,--why}'[translates SELinux audit messages into a description]'
  '*:filename:_files'
)

_arguments -s $arguments
