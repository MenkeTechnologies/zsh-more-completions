#compdef soffice

local arguments

arguments=(
  {--help,-h}'[-\? Shows this help and quits.]'
  '--helpwriter[opens built-in or online Help on Writer.]'
  '--helpcalc[opens built-in or online Help on Calc.]'
  '--helpdraw[opens built-in or online Help on Draw.]'
  '--helpimpress[opens built-in or online Help on Impress.]'
  '--helpbase[opens built-in or online Help on Base.]'
  '--helpbasic[opens built-in or online Help on Basic scripting]'
  '--helpmath[opens built-in or online Help on Math.]'
  '--version[shows the version and quits.]'
  '--nstemporarydirectory[(MacOS X sandbox only) Returns path of the temporary]'
  '--quickstart[activates\[Deactivates\] the Quickstarter service.]'
  '--nolockcheck[disables check for remote instances using one]'
  '--infilter[} Force an input filter type if possible. For example:]'
  '--infilter[office Open XML"]'
  '--infilter[(encoded):UTF8,LF,,,"]'
  '--pidfile[} Store soffice.bin pid to {file}.]'
  '--display[} Sets the DISPLAY environment variable on UNIX-like]'
  '--nologo[disables the splash screen at program start.]'
  '--minimized[starts minimized. The splash screen is not displayed.]'
  '--nodefault[starts without displaying anything except the splash]'
  '--invisible[starts in invisible mode. Neither the start-up logo nor]'
  '--headless[starts in "headless mode" which allows using the]'
  '--norestore[disables restart and file recovery after a system crash.]'
  '--safe-mode[starts in a safe mode, i.e. starts temporarily with a]'
  '--accept[} Specifies an UNO-URL connect-string to create an UNO]'
  '--unaccept[} Closes an acceptor that was created with --accept. Use]'
  '--unaccept[to close all open acceptors.]'
  '--language[} Uses specified language, if language is not selected]'
  '--terminate[_after_init]'
  '--eventtesting[exit after loading documents.]'
  '--writer[creates an empty Writer document.]'
  '--calc[creates an empty Calc document.]'
  '--draw[creates an empty Draw document.]'
  '--impress[creates an empty Impress document.]'
  '--base[creates a new database.]'
  '--global[creates an empty Writer master (global) document.]'
  '--math[creates an empty Math document (formula).]'
  '--web[creates an empty HTML document.]'
  '-n[treats following files as templates for creation of new]'
  '-o[opens following files for editing, regardless whether]'
  '--pt[} Prints following files to the printer {Printername}]'
  '--pt[. Also, --printer-name argument of]'
  '--print-to-file[interferes with {Printername}.]'
  '-p[prints following files to the default printer, after]'
  '--view[opens following files in viewer mode (read-only).]'
  '--show[opens and starts the following presentation documents]'
  '--convert-to[\[--outdir output_dir\] \[--convert-images-to\]]'
  '--convert-to[*.odt]'
  '--convert-to[*.doc]'
  {--convert-to,--outdir}'[/user *.doc]'
  '--convert-to[writer File:UTF8" *.doc]'
  '--convert-to[(encoded):UTF8" *.doc]'
  '--print-to-file[printer_name\] \[--outdir output_dir\]]'
  '--pt[interferes with --printer-name.]'
  '--cat[dump text content of the following files to console]'
  '--script-cat[dump text content of any scripts embedded in the files to console]'
  '-env[:<VAR>\[=<VALUE>\] Set a bootstrap variable. For example: to set]'
  '-env[:UserInstallation=file:///tmp/test]'
  '-psn[ignored (MacOS X only).]'
  '-Embedding[ignored (COM+ related; Windows only).]'
  '--nofirststartwizard[nothing, accepted only for backward compatibility.]'
  '--protector[1} {arg2}]'
  '*:filename:_files'
)

_arguments -s $arguments
