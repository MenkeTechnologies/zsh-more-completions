#compdef dwarfdump

local arguments

arguments=(
  {-a,--all}'[dump disassembly of all DWARF sections -- by default only the]'
  '--arch[dump DWARF debug information for the specified CPU architecture.]'
  {-c,--show-children}'[show a DIEs children when using the --debug-info=OFFSET, --find]'
  '--eh-frame[dump exception handling frame information from the optional SECTION]'
  {-e,--english}'[print dwarf tags and attributes in a more readable format instead]'
  '--file-stats[show file composition statistics for any input files. Each files]'
  {-f,--find}'[search for the exact text PATTERN in the .debug_pubnames section]'
  {-F,--show-form}'[show DWARF form types after the DWARF attribute types.]'
  '-h[-\?, --help]'
  {-i,--ignore-case}'[ignore case distinctions in when finding by name using strings or]'
  {-n,--name}'[find and print all DIE entries whose name (DW_AT_name attribute)]'
  '--lookup[lookup ADDRESS in the debug information and print out any available]'
  {-o,--out-file}'[redirect output to a file specified by PATH.]'
  {-p,--show-parents}'[show a DIEs parents when using the --debug-info=OFFSET, --find]'
  {-r,--recurse-depth}'[only recurse to a child depth of N when displaying the DWARF]'
  {-u,--uuid}'[show the UUID for each architecture.]'
  {-x,--regex}'[treat any PATTERN strings as regular expressions when searching]'
  {-v,--verbose}'[display verbose information when dumping. This can help to debug]'
  '--verify[verify the structure of the DWARF information by verifying the]'
  '--version[display the current version and build date of the dwarfdump binary.]'
  '--debug-abbrev[]'
  '--debug-aranges[]'
  '--debug-frame[]'
  '--debug-info[]'
  '--debug-inlined[]'
  '--debug-line[]'
  '--debug-macinfo[]'
  '--debug-pubnames[]'
  '--debug-pubtypes[]'
  '--debug-str[]'
  '--apple-names[]'
  '--apple-types[]'
  '--apple-exttypes[]'
  '--apple-namespaces[]'
  '--apple-objc[dump the specified DWARF section by name. Only the .debug_info]'
  '--show-children[where applicable.]'
  '*:filename:_files'
)

_arguments -s $arguments
