#compdef js-beautify

local arguments

arguments=(
  {-i,--stdin}'[read input from stdin]'
  {-s,--indent-size}'[indentation size. (default 4).]'
  {-c,--indent-char}'[character to indent with. (default space).]'
  {-e,--eol}'[character(s) to use as line terminators.]'
  {-t,--indent-with-tabs}'[indent with tabs, overrides -s and -c]'
  {-d,--disable-preserve-newlines}'[do not preserve existing line breaks.]'
  {-P,--space-in-paren}'[add padding spaces within paren, ie. f( a, b )]'
  {-E,--space-in-empty-paren}'[add a single space inside empty paren, ie. f( )]'
  {-j,--jslint-happy}'[more jslint-compatible output]'
  {-a,--space-after-anon-function}'[add a space before an anonymous functions parens, ie. function ()]'
  '--space-after-named-function[add a space before a named functions parens, i.e. function example ()]'
  {-b,--brace-style}'[brace style (collapse, expand, end-expand, none)(,preserve-inline)]'
  {-k,--keep-array-indentation}'[keep array indentation.]'
  {-r,--replace}'[write output in-place, replacing input]'
  {-o,--outfile}'[specify a file to output to (default stdout)]'
  {-f,--keep-function-indentation}'[do not re-indent function bodies defined in var lines.]'
  {-x,--unescape-strings}'[decode printable chars encoded in \xNN notation.]'
  {-X,--e4x}'[pass E4X xml literals through untouched]'
  {-C,--comma-first}'[put commas at the beginning of new line instead of end.]'
  {-O,--operator-position}'[set operator position (before-newline, after-newline, preserve-newline)]'
  {-w,--wrap-line-length}'[attempt to wrap line when it exceeds this length.]'
  {-n,--end-with-newline}'[end output with newline]'
  '--editorconfig[enable setting configuration from EditorConfig]'
  '--eval-code[evaluate code if a JS interpreter is]'
  {-l,--indent-level}'[initial indentation level. (default 0).]'
  {-h,--help,--usage}'[prints this help statement.]'
  {-v,--version}'[show the version]'
  '*:filename:_files'
)

_arguments -s $arguments
