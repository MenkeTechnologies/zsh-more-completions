#compdef nghttpx

local arguments

arguments=(
  {-b,--backend}'[<PORT>|unix:<PATH>)\[;\[<PATTERN>\[:...\]\]\[\[;<PARAM>\]...\]]'
  '-b[127.0.0.1,8080;nghttp2.org:www.nghttp2.org has the]'
  '--backend-write-timeout[used.]'
  {-f,--frontend}'[<PORT>|unix:<PATH>)\[\[;<PARAM>\]...\]]'
  '--backend[about the pattern match.]'
  '--backlog[set listen backlog size.]'
  '--backend-address-family[4|IPv6)]'
  '--backend-http-proxy-uri[specify proxy URI in the form]'
  '--backend-write-timeout[.]'
  {-n,--workers}'[set the number of worker threads.]'
  '--single-thread[run everything in one thread inside the worker process.]'
  '--read-rate[set maximum average read rate on frontend connection.]'
  '--read-burst[set maximum read burst size on frontend connection.]'
  '--write-rate[set maximum average write rate on frontend connection.]'
  '--write-burst[set maximum write burst size on frontend connection.]'
  '--worker-read-rate[set maximum average read rate on frontend connection per]'
  '--worker-read-burst[set maximum read burst size on frontend connection per]'
  '--worker-write-rate[set maximum average write rate on frontend connection]'
  '--worker-write-burst[set maximum write burst size on frontend connection per]'
  '--worker-frontend-connections[set maximum number of simultaneous connections frontend]'
  '--backend-connections-per-host[set maximum number of backend concurrent connections]'
  '--backend-connections-per-frontend[.]'
  '--backend-connections-per-frontend[set maximum number of backend concurrent connections]'
  '--backend-connections-per-host[.]'
  '--rlimit-nofile[set maximum number of open files (RLIMIT_NOFILE) to <N>.]'
  '--backend-request-buffer[set buffer size used to store backend request.]'
  '--backend-response-buffer[set buffer size used to store backend response.]'
  '--fastopen[enables "TCP Fast Open" for the listening socket and]'
  '--no-kqueue[t use kqueue. This option is only applicable for]'
  '--frontend-http2-read-timeout[specify read timeout for HTTP/2 frontend connection.]'
  '--frontend-read-timeout[specify read timeout for HTTP/1.1 frontend connection.]'
  '--frontend-write-timeout[specify write timeout for all frontend connections.]'
  '--frontend-keep-alive-timeout[specify keep-alive timeout for frontend HTTP/1]'
  '--stream-read-timeout[specify read timeout for HTTP/2 streams. 0 means no]'
  '--stream-write-timeout[specify write timeout for HTTP/2 streams. 0 means no]'
  '--backend-read-timeout[specify read timeout for backend connection.]'
  '--backend-write-timeout[specify write timeout for backend connection.]'
  '--backend-connect-timeout[specify timeout before establishing TCP connection to]'
  '--backend-keep-alive-timeout[specify keep-alive timeout for backend HTTP/1]'
  '--listener-disable-timeout[after accepting connection failed, connection listener]'
  '--frontend-http2-setting-timeout[specify timeout before SETTINGS ACK is received from]'
  '--backend-http2-settings-timeout[specify timeout before SETTINGS ACK is received from]'
  '--backend-max-backoff[specify maximum backoff interval. This is used when]'
  '--ciphers[set allowed cipher list for frontend connection. The]'
  '--tls13-ciphers[set allowed cipher list for frontend connection. The]'
  '--ciphers[TLSv1.2 or earlier.]'
  '--client-ciphers[set allowed cipher list for backend connection. The]'
  '--tls13-client-ciphers[set allowed cipher list for backend connection. The]'
  '--tls13-client-ciphers[TLSv1.2 or earlier.]'
  '--ecdh-curves[set supported curve list for frontend connections.]'
  {-k,--insecure}'[dont verify backend servers certificate if TLS is]'
  '--cacert[set path to trusted CA certificate file. It is used in]'
  '--private-key-passwd-file[path to file that contains password for the servers]'
  '--subcert[;<PARAM>\]...\]]'
  '--tls-sct-dir[.]'
  '--dh-param-file[path to file that contains DH parameters in PEM format.]'
  '--npn-list[comma delimited list of ALPN protocol identifier sorted]'
  '--verify-client[require and verify client certificate.]'
  '--verify-client-cacert[path to file that contains CA certificates to verify]'
  '--verify-client-tolerate-expired[accept expired client certificate. Operator should]'
  '--client-private-key-file[path to file that contains client private key used in]'
  '--client-cert-file[path to file that contains client certificate used in]'
  '--tls-min-proto-version[specify minimum SSL/TLS protocol. The name matching is]'
  {--tls-min-proto-version,--tls-max-proto-version}'[enabled. If the protocol list advertised by client does]'
  '--tls-max-proto-version[specify maximum SSL/TLS protocol. The name matching is]'
  {--tls-min-proto-version,--tls-max-proto-version}'[enabled. If the protocol list advertised by client does]'
  '--tls-ticket-key-file[path to file that contains random data to construct TLS]'
  '--tls-ticket-key-cipher[the file must contain exactly]'
  '--tls-ticket-key-cipher[the file must contain exactly]'
  '--tls-ticket-key-memcached[<PORT>\[;tls\]]'
  '--tls-ticket-key-memcached-address-family[4|IPv6)]'
  '--tls-ticket-key-memcached-interval[set interval to get TLS ticket keys from memcached.]'
  '--tls-ticket-key-memcached-max-retry[set maximum number of consecutive retries before]'
  '--tls-ticket-key-memcached-max-fail[.]'
  '--tls-ticket-key-memcached-max-fail[set maximum number of consecutive failure before]'
  '--tls-ticket-key-cipher[specify cipher to encrypt TLS session ticket. Specify]'
  '--tls-ticket-key-memcached-cert-file[path to client certificate for memcached connections to]'
  '--tls-ticket-key-memcached-private-key-file[path to client private key for memcached connections to]'
  '--fetch-ocsp-response-file[path to fetch-ocsp-response script file. It should be]'
  '--ocsp-update-interval[set interval to update OCSP response cache.]'
  '--ocsp-startup[start accepting connections after initial attempts to]'
  '--no-verify-ocsp[nghttpx does not verify OCSP response.]'
  '--no-ocsp[disable OCSP stapling.]'
  '--tls-session-cache-memcached[<PORT>\[;tls\]]'
  '--tls-session-cache-memcached-address-family[4|IPv6)]'
  '--tls-session-cache-memcached-cert-file[path to client certificate for memcached connections to]'
  '--tls-session-cache-memcached-private-key-file[path to client private key for memcached connections to]'
  '--tls-dyn-rec-warmup-threshold[specify the threshold size for TLS dynamic record size]'
  '--tls-dyn-rec-idle-timeout[specify TLS dynamic record size behaviour timeout. See]'
  '--tls-dyn-rec-warmup-threshold[for more information.]'
  '--no-http2-cipher-black-list[allow black listed cipher suite on frontend HTTP/2]'
  '--client-no-http2-cipher-black-list[allow black listed cipher suite on backend HTTP/2]'
  '--tls-sct-dir[specifies the directory where *.sct files exist. All]'
  '--psk-secrets[read list of PSK identity and secrets from <PATH>. This]'
  '--client-psk-secrets[read PSK identity and secrets from <PATH>. This is used]'
  '--tls-no-postpone-early-data[by default, nghttpx postpones forwarding HTTP requests]'
  '--tls-max-early-data[sets the maximum amount of 0-RTT data that server]'
  {-c,--frontend-http2-max-concurrent-streams}'[set the maximum number of the concurrent streams in one]'
  '--backend-http2-max-concurrent-streams[set the maximum number of the concurrent streams in one]'
  '--frontend-http2-window-size[sets the per-stream initial window size of HTTP/2]'
  '--frontend-http2-connection-window-size[sets the per-connection window size of HTTP/2 frontend]'
  '--backend-http2-window-size[sets the initial window size of HTTP/2 backend]'
  '--backend-http2-connection-window-size[sets the per-connection window size of HTTP/2 backend]'
  '--http2-no-cookie-crumbling[dont crumble cookie header field.]'
  '--padding[add at most <N> bytes to a HTTP/2 frame payload as]'
  '--no-server-push[disable HTTP/2 server push. Server push is supported by]'
  '--frontend-http2-optimize-write-buffer-size[(Experimental) Enable write buffer size optimization in]'
  '--frontend-http2-optimize-window-size[(Experimental) Automatically tune connection level]'
  '--frontend-http2-connection-window-size[. Since the]'
  '--frontend-http2-encoder-dynamic-table-size[specify the maximum dynamic table size of HPACK encoder]'
  '--frontend-http2-decoder-dynamic-table-size[specify the maximum dynamic table size of HPACK decoder]'
  '--backend-http2-encoder-dynamic-table-size[specify the maximum dynamic table size of HPACK encoder]'
  '--backend-http2-decoder-dynamic-table-size[specify the maximum dynamic table size of HPACK decoder]'
  {-s,--http2-proxy}'[like default mode, but enable forward proxy. This is so]'
  {-L,--log-level}'[set the severity level of log output. <LEVEL> must be]'
  '--accesslog-file[set path to write access log. To reopen file, send USR1]'
  '--accesslog-syslog[send access log to syslog. If this option is used]'
  '--accesslog-file[is ignored.]'
  '--accesslog-format[specify format string for access log. The default]'
  '--accesslog-write-early[write access log when response header fields are]'
  '--errorlog-file[set path to write error log. To reopen file, send USR1]'
  '--errorlog-syslog[send error log to syslog. If this option is used]'
  '--errorlog-file[is ignored.]'
  '--syslog-facility[set syslog facility to <FACILITY>.]'
  '--add-x-forwarded-for[append X-Forwarded-For header field to the downstream]'
  '--strip-incoming-x-forwarded-for[strip X-Forwarded-For header field from inbound client]'
  '--no-add-x-forwarded-proto[dont append additional X-Forwarded-Proto header field]'
  '--no-strip-incoming-x-forwarded-proto[option is used]'
  '--no-strip-incoming-x-forwarded-proto[dont strip X-Forwarded-Proto header field from inbound]'
  '--add-forwarded[append RFC 7239 Forwarded header field with parameters]'
  '--forwarded-for[respectively. Note that nghttpx]'
  '--strip-incoming-forwarded[strip Forwarded header field from inbound client]'
  '--forwarded-by[)]'
  '--forwarded-for[)]'
  '--no-via[dont append to Via header field. If Via header field]'
  '--no-strip-incoming-early-data[dont strip Early-Data header field from inbound client]'
  '--no-location-rewrite[dont rewrite location header field in default mode.]'
  '--host-rewrite[rewrite host and :authority header fields in default]'
  '--altsvc[PORT\[,HOST,\[ORIGIN\]\]>]'
  '--add-request-header[specify additional header field to add to request header]'
  '--add-response-header[specify additional header field to add to response]'
  '--request-header-field-buffer[set maximum buffer size for incoming HTTP request header]'
  '--max-request-header-fields[set maximum number of incoming HTTP request header]'
  '--response-header-field-buffer[set maximum buffer size for incoming HTTP response]'
  '--max-response-header-fields[set maximum number of incoming HTTP response header]'
  '--error-page[*)=<PATH>]'
  '--server-name[change server response header field value to <NAME>.]'
  '--no-server-rewrite[dont rewrite server header field in default mode. When]'
  '--http2-proxy[used, these headers will not be altered]'
  '--redirect-https-port[specify the port number which appears in Location header]'
  '--api-max-request-body[set the maximum size of request body for API request.]'
  '--dns-cache-timeout[set duration that cached DNS results remain valid. Note]'
  '--dns-lookup-timeout[set timeout that DNS server is given to respond to the]'
  '--dns-max-try[set the number of DNS query before nghttpx gives up name]'
  '--frontend-max-requests[the number of requests that single frontend connection]'
  '--frontend-http2-dump-request-header[dumps request headers received by HTTP/2 frontend to the]'
  '--frontend-http2-dump-response-header[dumps response headers sent from HTTP/2 frontend to the]'
  {-o,--frontend-frame-debug}'[print HTTP/2 frames in frontend to stderr. This option]'
  '-n[where N >= 2.]'
  {-D,--daemon}'[run in a background. If -D is used, the current working]'
  '--pid-file[set path to save PID of this program.]'
  '--user[run this program as <USER>. This option is intended to]'
  '--single-process[run this program in a single process mode for debugging]'
  '--mruby-file[set mruby script file]'
  '--ignore-per-pattern-mruby-error[ignore mruby compile error for per-pattern mruby script]'
  '--conf[load configuration from <PATH>. Please note that]'
  '--include[load additional configurations from <PATH>. File <PATH>]'
  {-v,--version}'[print version and exit.]'
  '(- * :)'{-h,--help}'[print this help and exit.]'
  '*:filename:_files'
)

_arguments -s $arguments
