#compdef fpdoc

local arguments

arguments=(
  '--base-descr-dir[prefix all description files with this directory]'
  '--base-input-dir[prefix all input files with this directory]'
  '--content[create content file for package cross-references]'
  '--cputarget[set the target CPU for the scanner.]'
  '--descr[use file as description file, e.g.:]'
  '--descr[\WIP\myzipperdoc.xml]'
  '--descr-dir[add All XML files in Dir to list of description files]'
  '--format[select output format.]'
  '--help[show this help.]'
  '--hide-protected[do not show protected methods in overview]'
  '--import[import content file for package cross-references]'
  '--input[use cmd as input for the parser, e.g.:]'
  '--input[\fpc\packages\paszlib\src\zipper.pp]'
  '--input-dir[add All *.pp and *.pas files in Dir to list of input files]'
  '--lang[select output language.]'
  '--macro[value Define a macro to preprocess the project file with.]'
  '--ostarget[set the target OS for the scanner.]'
  '--output[use name as the output name.]'
  '--package[set the package name for which to create output]'
  '--project[use file as project file]'
  '--show-private[show private methods.]'
  '--warn-no-node[warn if no documentation node was found.]'
  '--mo-dir[set directory where language files reside to dir]'
  '--parse-impl[(Experimental) try to parse implementation too]'
  '--dont-trim[do not trim XML contents. Useful for preserving]'
  '--write-project[do not write documentation, create project file instead]'
  '--verbose[write more information on the screen]'
  '--dry-run[only parse sources and XML, do not create output]'
  '--write-project[write all command-line options to a project file]'
  '*:filename:_files'
)

_arguments -s $arguments
