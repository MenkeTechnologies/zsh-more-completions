#compdef gifsicle

local arguments

arguments=(
  {-m,--merge}'[merge mode: combine inputs, write stdout.]'
  {-b,--batch}'[batch mode: modify inputs, write back to]'
  {-e,--explode}'[explode mode: write N files for each input]'
  {-E,--explode-by-name}'[explode mode, but write input.name.]'
  {-I,--info}'[print info about input GIFs. Two -Is means]'
  {--color-info,--cinfo,--info}'[colormap details.]'
  {--extension-info,--xinfo,--info}'[extension details.]'
  {--size-info,--sinfo,--info}'[compression information.]'
  {-V,--verbose}'[prints progress information.]'
  '(- * :)'{-h,--help}'[print this message and exit.]'
  '--version[print version number and exit.]'
  {-o,--output}'[write output to FILE.]'
  {-w,--no-warnings}'[dont report warnings.]'
  '--no-ignore-errors[quit on very erroneous input GIFs.]'
  '--conserve-memory[conserve memory at the expense of speed.]'
  '--multifile[support concatenated GIF files.]'
  '--delete[delete FRAMES from input.]'
  '--insert-before[GIFS Insert GIFS before FRAMES in input.]'
  '--append[append GIFS to input.]'
  '--replace[GIFS Replace FRAMES with GIFS in input.]'
  '--done[done with frame changes.]'
  {-B,--background}'[make COL the background color.]'
  '--crop[Y+WxH, --crop X,Y-X2,Y2]'
  '--crop-transparency[crop transparent borders off the image.]'
  {--flip-horizontal,--flip-vertical}'[flip the image.]'
  {-i,--interlace}'[turn on interlacing.]'
  {-S,--logical-screen}'[set logical screen to WxH.]'
  {-p,--position}'[Y Set frame position to (X,Y).]'
  {--rotate-90,--rotate-180,--rotate-270,--no-rotate}'[rotate the image.]'
  {-t,--transparent}'[make COL transparent.]'
  '--app-extension[D Add an app extension named N with data D.]'
  {-c,--comment}'[add a comment before the next frame.]'
  '--extension[D Add an extension number N with data D.]'
  {-n,--name}'[set next frames name.]'
  {--no-comments,--no-names,--no-extensions}'[remove comments (names, extensions) from input.]'
  {-d,--delay}'[set frame delay to TIME (in 1/100sec).]'
  {-D,--disposal}'[set frame disposal to METHOD.]'
  {-l,--loopcount}'[set loop extension to N (default forever).]'
  {-O,--optimize}'[optimize output GIFs.]'
  {-U,--unoptimize}'[unoptimize input GIFs.]'
  {-j,--threads}'[use multiple threads to improve speed.]'
  '--careful[write larger GIFs that avoid bugs in other]'
  '--change-color[1 COL2 Change COL1 to COL2 throughout.]'
  {-k,--colors}'[reduce the number of colors to N.]'
  '--color-method[set method for choosing reduced colors.]'
  {-f,--dither}'[dither image after changing colormap.]'
  '--gamma[set gamma for color reduction \[2.2\].]'
  '--resize[resize the output GIF to WxH.]'
  '--resize-width[resize to width W and proportional height.]'
  '--resize-height[resize to height H and proportional width.]'
  '--resize-fit[resize if necessary to fit within WxH.]'
  '--scale[scale the output GIF by XFACTORxYFACTOR.]'
  '--resize-method[set resizing method.]'
  '--resize-colors[resize can add new colors up to N.]'
  '--transform-colormap[transform each output colormap by shell CMD.]'
  '--use-colormap[set output GIFs colormap to CMAP, which can]'
  '*:filename:_files'
)

_arguments -s $arguments
