#compdef pmrep

# Autogenerated from man page /usr/share/man/man1/pmrep.1.gz

local arguments

arguments=(
    '--daemonize[Daemonise on startup.]'
    '-h[option, pmrep will contact the Performance Metrics Collector Daemon (PMCD, se…]'
    '-a[option causes pmrep to use the specified set of archives rather than connecti…]'
    '-L[option causes pmrep to use a local context to collect metrics from DSO PMDAs …]'
    '-c[and pmrep. conf (5)), which may then consist of any number of metrics.]'
    '-i[An optional unit/scale is applicable for dimension-compatible, non-string met…]:).'
    '-y[and.]'
    '-Y[.]:).'
    {-0,--precision-force}'[Like.]'
    '-P[but this option will override per-metric specifications.]'
    {-1,--dynamic-header}'[Print a new dynamically adjusted header every time changes in the availabilit…]'
    '-4[.]'
    '-7[and.]'
    '-E[.]:.'
    {-2,--overall-rank}'[Perform overall ranking of instances in archive. By default ranking (see.]'
    '-J[and reporting happens on each interval.]:)'
    {-3,--overall-rank-alt}'[Like.]'
    '--names-change[Specify which action to take on receiving a metric names change event during …]'
    {-5,--ignore-unknown}'[Silently ignore any metric name that cannot be resolved.]'
    {-6,--sort-metric}'[Specify a sort reference metric to sort output by values with.]':sort-metric
    '-X[By default sorting order is descending, prepending the metric name with the m…]:.'
    '-N[.]:.'
    '--fixed-header[With -X print a fixed header once (unless using -E) including all metrics bei…]'
    {-8,--limit-filter}'[Limit results to instances with values above/below limit .]'
    {-9,--limit-filter-force}'[Like.]'
    '--archive[Performance metric values are retrieved from the set of Performance Co-Pilot …]'
    '-u[.]:.'
    {-A,--align}'[Force the initial sample to be aligned on the boundary of a natural time unit…]'
    '--archive-folio[Read metric source archives from the PCP archive folio created by tools like …]:folio'
    {-b,--space-scale}'[Unit/scale for space (byte) metrics, possible values include bytes , Kbytes ,…]'
    {-B,--space-scale-force}'[Like.]'
    '--config[Specify the config file or directory to use.]'
    '--container[Fetch performance metrics from the specified container , either local or remo…]:container'
    {-C,--check}'[Exit before reporting any values, but after parsing the configuration and met…]'
    {-d,--delay}'[When replaying from an archive, this option requests that the prevailing real…]'
    '-t[to effect a pause, rather than the default behaviour of replaying at full spe…]:)'
    {-e,--derived}'[Specify derived performance metrics.]'
    '--Dderive[to see additional debug information about parsing derived metrics.]'
    '--repeat-header[Repeat the header every lines of output.]'
    {-f,--timestamp-format}'[Use the format string for formatting the timestamp.]'
    {-F,--output-file}'[Specify the output file outfile . See.]'
    '-o[.]:.'
    {-g,--separate-header}'[Output the column number and complete metric information, one-per-line, befor…]'
    {-G,--no-globals}'[Do not include global metrics in reporting (see pmrep. conf (5)).]'
    '--host[Fetch performance metrics from pmcd (1) on host , rather than from the defaul…]'
    {-H,--no-header}'[Do not print any headers.]'
    '--instances[Retrieve and report only the specified metric instances .]'
    '-j[to change this.]'
    '-v[to change this.]'
    {-I,--ignore-incompat}'[Ignore incompatible metrics.]'
    '--include-texts[When writing a PCP archive, include PCP metric help texts in the created arch…]'
    '--live-filter[Perform instance live filtering.]'
    '-n[.]:.'
    '--rank[Limit results to highest/lowest rank ed instances of set-valued metrics.]'
    {-k,--extended-csv}'[Write extended CSV output, similar to sadf (1).]'
    {-K,--spec-local}'[When fetching metrics from a local context (see.]'
    {-l,--delimiter}'[Specify the delimiter that separates each column of csv or stdout output.]'
    '--local-PMDA[Use a local context to collect metrics from DSO PMDAs on the local host witho…]'
    {-m,--include-labels}'[Include PCP metric labels in the output.]'
    '--invert-filter[Perform ranking before live filtering.]'
    '--predicate[Specify a comma-separated list of predicate filter reference metrics.]'
    '--no-inst-info[Omit instance information from headers.]'
    '--output[Use output target for reporting. The default target is stdout .]'
    {-O,--origin}'[When reporting archived metrics, start reporting at origin within the time wi…]'
    '-S[and.]'
    '-T[Refer to PCPIntro (1) for a complete description of the syntax for origin .]:).'
    {-p,--timestamps}'[Print timestamps. By default no timestamps are printed.]'
    '--precision[Use precision for numeric non-integer output values.]'
    {-q,--count-scale}'[Unit/scale for count metrics, possible values include count x 10^-1 , count ,…]'
    {-Q,--count-scale-force}'[Like.]'
    {-r,--raw}'[Output raw metric values, do not convert cumulative counters to rates.]'
    {-R,--raw-prefer}'[Like.]'
    {-s,--samples}'[The samples argument defines the number of samples to be retrieved and report…]'
    '--start[When reporting archived metrics, the report will be restricted to those recor…]'
    '--interval[Set the reporting interval to something other than the default 1 second.]'
    '--finish[When reporting archived metrics, the report will be restricted to those recor…]'
    '--no-interpol[When reporting archived metrics, by default values are reported according to …]'
    {-U,--no-unit-info}'[Omit unit information from headers.]'
    '--omit-flat[Report only set-valued metrics with instances (e. g. disk. dev.]'
    {-V,--version}'[Display version number and exit.]'
    {-w,--width}'[Set the stdout output column width . Strings will be truncated to this width.]'
    {-W,--width-force}'[Like.]'
    {-x,--extended-header}'[Print extended header.]'
    '--colxrow[Swap columns and rows in stdout output, reporting one instance per line, usin…]'
    '--time-scale[Unit/scale for time metrics, possible values include nanosec , ns , microsec …]'
    '--time-scale-force[Like.]'
    {-z,--hostzone}'[Use the local timezone of the host that is the source of the performance metr…]'
    {-Z,--timezone}'[Use timezone for the date and time.]'
    {-?,--help}'[Display usage message and exit.]'
    '*:filename:_files'
)
_arguments -s $arguments
