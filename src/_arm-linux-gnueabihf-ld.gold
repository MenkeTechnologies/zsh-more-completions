#compdef arm-linux-gnueabihf-ld.gold

local arguments

arguments=(
  '--help[report usage information]'
  {-v,--version}'[report version information]'
  '-V[report version and target information]'
  '--add-needed[not supported]'
  '--no-add-needed[do not copy DT_NEEDED tags from shared libraries]'
  '--allow-multiple-definition[multiple definitions of symbols]'
  '--no-allow-multiple-definition[do not allow multiple definitions]'
  '--allow-shlib-undefined[allow unresolved references in shared libraries]'
  '--no-allow-shlib-undefined[do not allow unresolved references in shared libraries]'
  '--as-needed[only set DT_NEEDED for shared libraries if used]'
  '--no-as-needed[always DT_NEEDED for shared libraries]'
  '-assert[ignored]'
  '-b[binary\], --format \[elf,binary\]]'
  {-Bdynamic,-l}'[for shared libraries]'
  {-Bstatic,-l}'[not search for shared libraries]'
  '-dy[alias for -Bdynamic]'
  '-dn[alias for -Bstatic]'
  '-Bgroup[use group name lookup rules for shared library]'
  '-Bsymbolic[bind defined symbols locally]'
  '-Bsymbolic-functions[bind defined function symbols locally]'
  '--build-id[STYLE\]         Generate build ID note]'
  '--build-id-chunk-size-for-treehash[chunk size for --build-id=tree]'
  '--build-id-min-file-size-for-treehash[minimum output file size for --build-id=tree to work differently than --build-id=sha1]'
  '--check-sections[check segment addresses for overlaps (default)]'
  '--no-check-sections[do not check segment addresses for overlaps]'
  '--compress-debug-sections[zlib\]]'
  '--copy-dt-needed-entries[not supported]'
  '--no-copy-dt-needed-entries[not copy DT_NEEDED tags from shared libraries]'
  '--cref[output cross reference table]'
  '--no-cref[do not output cross reference table]'
  '--ctors-in-init-array[use DT_INIT_ARRAY for all constructors (default)]'
  '--no-ctors-in-init-array[handle constructors as directed by compiler]'
  {-d,--define-common}'[define common symbols]'
  '--no-define-common[do not define common symbols]'
  '-dc[alias for -d]'
  '-dp[alias for -d]'
  '--debug[files,script,task\]\[,...\]]'
  '--defsym[EXPRESSION  Define a symbol]'
  '--demangle[STYLE\]         Demangle C++ symbols in log messages]'
  '--no-demangle[do not demangle C++ symbols in log messages]'
  '--detect-odr-violations[look for violations of the C++ One Definition Rule]'
  '--no-detect-odr-violations[do not look for violations of the C++ One Definition Rule]'
  {-x,--discard-all}'[delete all local symbols]'
  {-X,--discard-locals}'[delete all temporary local symbols]'
  '--dynamic-list-data[add data symbols to dynamic symbols]'
  '--dynamic-list-cpp-new[add C++ operator new/delete to dynamic symbols]'
  '--dynamic-list-cpp-typeinfo[C++ typeinfo to dynamic symbols]'
  '--dynamic-list[read a list of dynamic symbols]'
  {-e,--entry}'[set program start address]'
  '--exclude-libs[lib ...  Exclude libraries from automatic export]'
  {-E,--export-dynamic}'[export all dynamic symbols]'
  '--no-export-dynamic[do not export all dynamic symbols (default)]'
  '--export-dynamic-symbol[export SYMBOL to dynamic symbol table]'
  '-EB[link big-endian objects.]'
  '-EL[link little-endian objects.]'
  '--eh-frame-hdr[create exception frame header]'
  '--no-enum-size-warning[(ARM only) Do not warn about objects with incompatible enum sizes]'
  {-f,--auxiliary}'[auxiliary filter for shared object symbol table]'
  {-F,--filter}'[filter for shared object symbol table]'
  '--fatal-warnings[treat warnings as errors]'
  '--no-fatal-warnings[do not treat warnings as errors]'
  '-fini[call SYMBOL at unload-time]'
  '--fix-cortex-a8[(ARM only) Fix binaries for Cortex-A8 erratum.]'
  '--no-fix-cortex-a8[(ARM only) Do not fix binaries for Cortex-A8 erratum.]'
  '--fix-arm1176[(ARM only) Fix binaries for ARM1176 erratum.]'
  '--no-fix-arm1176[(ARM only) Do not fix binaries for ARM1176 erratum.]'
  '--merge-exidx-entries[(ARM only) Merge exidx entries in debuginfo.]'
  '--no-merge-exidx-entries[(ARM only) Do not merge exidx entries in debuginfo.]'
  '--fix-v4bx[(ARM only) Rewrite BX rn as MOV pc, rn for ARMv4]'
  '--fix-v4bx-interworking[(ARM only) Rewrite BX rn branch to ARMv4 interworking veneer]'
  '-g[ignored]'
  '--gdb-index[generate .gdb_index section]'
  '--no-gdb-index[do not generate .gdb_index section]'
  '--gnu-unique[enable STB_GNU_UNIQUE symbol binding (default)]'
  '--no-gnu-unique[disable STB_GNU_UNIQUE symbol binding]'
  {-h,-soname}'[set shared library name]'
  '--hash-bucket-empty-fraction[min fraction of empty buckets in dynamic hash]'
  '--hash-style[gnu,both\]]'
  {-I,--dynamic-linker}'[set dynamic linker path]'
  '--incremental[do an incremental link if possible; otherwise, do a full link and prepare output for incremental linking]'
  '--no-incremental[do a full link (default)]'
  '--incremental-full[do a full link and prepare output for incremental linking]'
  '--incremental-update[do an incremental link; exit if not possible]'
  '--incremental-base[set base file for incremental linking (default is output file)]'
  '--incremental-changed[assume files changed]'
  '--incremental-unchanged[assume files didnt change]'
  '--incremental-unknown[use timestamps to check files (default)]'
  '--incremental-startup-unchanged[assume startup files unchanged (files preceding this option)]'
  '--incremental-patch[amount of extra space to allocate for patches]'
  '-init[call SYMBOL at load-time]'
  '--just-symbols[read only symbol values from FILE]'
  '--map-whole-files[map whole files to memory (default on 64-bit hosts)]'
  '--no-map-whole-files[map relevant file parts to memory (default on 32-bit hosts)]'
  '--keep-files-mapped[keep files mapped across passes (default)]'
  '--no-keep-files-mapped[release mapped files after each pass]'
  '--ld-generated-unwind-info[generate unwind information for PLT (default)]'
  '--no-ld-generated-unwind-info[do not generate unwind information for PLT]'
  {-l,--library}'[search for library LIBNAME]'
  {-L,--library-path}'[add directory to search path]'
  '--text-reorder[enable text section reordering for GCC section names (default)]'
  '--no-text-reorder[disable text section reordering for GCC section names]'
  '-nostdlib[only search directories specified on the command line.]'
  '--rosegment[put read-only non-executable sections in their own segment]'
  '--rosegment-gap[set offset between executable and read-only segments]'
  '-m[set GNU linker emulation; obsolete]'
  '--mmap-output-file[map the output file for writing (default).]'
  '--no-mmap-output-file[do not map the output file for writing.]'
  {-M,--print-map}'[write map file on standard output]'
  '-Map[write map file]'
  {-n,--nmagic}'[do not page align data]'
  {-N,--omagic}'[do not page align data, do not make text readonly]'
  '--no-omagic[page align data, make text readonly]'
  '--enable-new-dtags[enable use of DT_RUNPATH and DT_FLAGS]'
  '--disable-new-dtags[disable use of DT_RUNPATH and DT_FLAGS]'
  '--noinhibit-exec[create an output file even if errors occur]'
  '--no-undefined[report undefined symbols (even with --shared)]'
  {-o,--output}'[set output file name]'
  {-O,-optimize}'[optimize output file size]'
  '--oformat[set output format]'
  '-p[(ARM only) Ignore for backward compatibility]'
  '-pie[create a position independent executable]'
  '-no-pie[do not create a position independent executable]'
  '--pic-executable[create a position independent executable]'
  '--no-pic-executable[do not create a position independent executable]'
  '-no-pipeline-knowledge[(ARM only) Ignore for backward compatibility]'
  '--plt-align[P2ALIGN\]      (PowerPC64 only) Align PLT call stubs to fit cache lines]'
  '--plt-static-chain[(PowerPC64 only) PLT call stubs should load r11]'
  '--no-plt-static-chain[(PowerPC64 only) PLT call stubs should not load r11]'
  '--plt-thread-safe[(PowerPC64 only) PLT call stubs with load-load barrier]'
  '--no-plt-thread-safe[(PowerPC64 only) PLT call stubs without barrier]'
  '--plugin[load a plugin library]'
  '--plugin-opt[pass an option to the plugin]'
  '--posix-fallocate[use posix_fallocate to reserve space in the output file (default).]'
  '--no-posix-fallocate[use fallocate or ftruncate to reserve space.]'
  '--preread-archive-symbols[preread archive symbols when multi-threaded]'
  '--print-output-format[print default output format]'
  '--print-symbol-counts[print symbols defined and used for each input]'
  '-Qy[ignored for SVR4 compatibility]'
  {-q,--emit-relocs}'[generate relocations in output]'
  {-r,-relocatable}'[generate relocatable output]'
  '-i[synonym for -r]'
  '--relax[relax branches on certain targets]'
  '--retain-symbols-file[keep only symbols listed in this file]'
  '-R[add DIR to runtime search path]'
  '-rpath[add DIR to runtime search path]'
  '--rpath-link[add DIR to link time shared library search path]'
  '--section-ordering-file[layout sections in the order specified.]'
  '--section-start[ADDRESS]'
  '--sort-common[{ascending,descending}\]]'
  '--sort-section[name\]  Sort sections by name.  --no-text-reorder will override --sort-section=name for .text]'
  '--spare-dynamic-tags[dynamic tag slots to reserve (default 5)]'
  {-s,--strip-all}'[strip all symbols]'
  {-S,--strip-debug}'[strip debugging information]'
  '--strip-debug-non-line[emit only debug line number information]'
  '--strip-debug-gdb[strip debug symbols that are unused by gdb (at least versions <= 7.4)]'
  '--strip-lto-sections[strip LTO intermediate code sections]'
  '--stub-group-size[(ARM, PowerPC only) The maximum distance from instructions in a group of sections to their stubs.  Negative values mean stubs are always after (PowerPC before) the group.  1 means use default size.]'
  '--no-keep-memory[use less memory and more disk I/O (included only for compatibility with GNU ld)]'
  {-G,-shared}'[generate shared library]'
  '-Bshareable[generate shared library]'
  '--split-stack-adjust-size[stack size when -fsplit-stack function calls non-split]'
  '-static[do not link against shared libraries]'
  '--icf[all,safe\]       Identical Code Folding. --icf=safe Folds ctors, dtors and functions whose pointers are definitely not taken.]'
  '--icf-iterations[number of iterations of ICF (default 2)]'
  '--print-icf-sections[list folded identical sections on stderr]'
  '--no-print-icf-sections[do not list folded identical sections]'
  '--keep-unique[do not fold this symbol during ICF]'
  '--gc-sections[remove unused sections]'
  '--no-gc-sections[dont remove unused sections (default)]'
  '--print-gc-sections[list removed unused sections on stderr]'
  '--no-print-gc-sections[do not list removed unused sections]'
  '--stats[print resource usage statistics]'
  '--sysroot[set target system root directory]'
  {-t,--trace}'[print the name of each input file]'
  {-T,--script}'[read linker script]'
  '--threads[run the linker multi-threaded]'
  '--no-threads[do not run the linker multi-threaded]'
  '--thread-count[number of threads to use]'
  '--thread-count-initial[number of threads to use in initial pass]'
  '--thread-count-middle[number of threads to use in middle pass]'
  '--thread-count-final[number of threads to use in final pass]'
  '-Tbss[set the address of the bss segment]'
  '-Tdata[set the address of the data segment]'
  '-Ttext[set the address of the text segment]'
  '-Ttext-segment[set the address of the text segment]'
  '-Trodata-segment[set the address of the rodata segment]'
  '--toc-optimize[(PowerPC64 only) Optimize TOC code sequences]'
  '--no-toc-optimize[(PowerPC64 only) Dont optimize TOC code sequences]'
  '--toc-sort[(PowerPC64 only) Sort TOC and GOT sections]'
  '--no-toc-sort[(PowerPC64 only) Dont sort TOC and GOT sections]'
  {-u,--undefined}'[create undefined reference to SYMBOL]'
  '--unresolved-symbols[report-all,ignore-in-object-files,ignore-in-shared-libs]'
  '--verbose[synonym for --debug=files]'
  '--version-script[read version script]'
  '--warn-common[warn about duplicate common symbols]'
  '--no-warn-common[do not warn about duplicate common symbols (default)]'
  '--warn-constructors[ignored]'
  '--no-warn-constructors[ignored]'
  '--warn-execstack[warn if the stack is executable]'
  '--no-warn-execstack[do not warn if the stack is executable (default)]'
  '--no-warn-mismatch[dont warn about mismatched input files]'
  '--warn-multiple-gp[ignored]'
  '--warn-search-mismatch[warn when skipping an incompatible library]'
  '--no-warn-search-mismatch[dont warn when skipping an incompatible library]'
  '--warn-shared-textrel[warn if text segment is not shareable]'
  '--no-warn-shared-textrel[do not warn if text segment is not shareable (default)]'
  '--warn-unresolved-symbols[report unresolved symbols as warnings]'
  '--error-unresolved-symbols[report unresolved symbols as errors]'
  '--no-wchar-size-warning[(ARM only) Do not warn about objects with incompatible wchar_t sizes]'
  '--whole-archive[include all archive contents]'
  '--no-whole-archive[include only needed archive contents]'
  '--wrap[use wrapper functions for SYMBOL]'
  {-y,--trace-symbol}'[trace references to symbol]'
  '--undefined-version[allow unused version in script (default)]'
  '--no-undefined-version[do not allow unused version in script]'
  '-Y[default search path for Solaris compatibility]'
  '--start-lib[start a library]'
  '--end-lib[end a library]'
  '-fuse-ld[ignored for GCC linker option compatibility]'
  '-z[sort dynamic relocs]'
  '-z[do not sort dynamic relocs]'
  '-z[SIZE    Set common page size to SIZE]'
  '-z[report undefined symbols (even with --shared)]'
  '-z[mark output as requiring executable stack]'
  '-z[mark DSO to be initialized first at runtime]'
  '-z[mark object to interpose all DSOs but executable]'
  '-z[mark object for lazy runtime binding (default)]'
  '-z[mark object requiring immediate process]'
  '-z[SIZE       Set maximum page size to SIZE]'
  '-z[allow multiple definitions of symbols]'
  '-z[do not create copy relocs]'
  '-z[mark object not to use default search paths]'
  '-z[mark DSO non-deletable at runtime]'
  '-z[mark DSO not available to dlopen]'
  '-z[mark DSO not available to dldump]'
  '-z[mark output as not requiring executable stack]'
  '-z[mark object for immediate function binding]'
  '-z[mark DSO to indicate that needs immediate $ORIGIN processing at runtime]'
  '-z[where possible mark variables read-only after relocation]'
  '-z[dont mark variables read-only after relocation]'
  '-z[do not permit relocations in read-only segments]'
  '-z[permit relocations in read-only segments (default)]'
  '-z[permit relocations in read-only segments (default)]'
  '-z[dummy z option]'
  '*:filename:_files'
)

_arguments -s $arguments
