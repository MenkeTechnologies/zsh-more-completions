#compdef lspci

# zsh completions for 'lspci'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  '-mm[produce machine-readable output (single -m for an obsolete format)]'
  '-t[show bus tree]'
  '-v[be verbose (-vv for very verbose)]'
  '-k[show kernel drivers handling each device]'
  '-x[show hex-dump of the standard part of the config space]'
  '-xxx[show hex-dump of the whole config space (dangerous; root only)]'
  '-xxxx[show hex-dump of the 4096-byte extended config space (root only)]'
  '-b[bus-centric view (addresses and IRQs as seen by the bus)]'
  '-D[always show domain numbers]'
  '-P[display bridge path in addition to bus and device number]'
  '-PP[display bus path in addition to bus and device number]'
  '-n[show numeric IDs]'
  '-nn[show both textual and numeric IDs (names & numbers)]'
  '-q[query the PCI ID database for unknown IDs via DNS]'
  '-qq[as above, but re-query locally cached entries]'
  '-Q[query the PCI ID database for all IDs via DNS]'
  '-s[.\[<func>\]\] Show only devices in selected slots]'
  '-d[show only devices with specified IDs]'
  '-i[use specified ID database instead of /usr/share/pci.ids.gz]'
  '-p[look up kernel modules in a given file instead of default modules.pcimap]'
  '-M[enable `bus mapping mode (dangerous; root only)]'
  '-A[use the specified PCI access method (see `-A help for a list)]'
  '-O[Set PCI access parameter (see `-O help for a list)]:val:'
  '-G[enable PCI access debugging]'
  '-F[read PCI configuration dump from a given file]'
  '*:filename:_files'
)

_arguments -s $arguments
