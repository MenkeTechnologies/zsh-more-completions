#compdef llvm-readobj

local arguments

arguments=(
  '-color[- Use colors in output (default=autodetect)]'
  '-S[- Alias for --section-headers]'
  '-aarch64-neon-syntax[- Choose style of NEON code to emit from AArch64 backend:]'
  '-addrsig[- Display address-significance table]'
  '-all[- Equivalent to setting: --file-headers, --program-headers, --section-headers, --symbols, --relocations, --dynamic-table, --notes, --version-info, --unwind, --section-groups and --elf-hash-histogram.]'
  '-amdgpu-dpp-combine[- Enable DPP combiner]'
  '-amdgpu-dump-hsa-metadata[- Dump AMDGPU HSA Metadata]'
  '-amdgpu-enable-global-sgpr-addr[- Enable use of SGPR regs for GLOBAL LOAD/STORE instructions]'
  '-amdgpu-enable-merge-m0[- Merge and hoist M0 initializations]'
  '-amdgpu-sdwa-peephole[- Enable SDWA peepholer]'
  '-amdgpu-spill-sgpr-to-smem[- Use scalar stores to spill SGPRs if supported by subtarget]'
  '-amdgpu-verify-hsa-metadata[- Verify AMDGPU HSA Metadata]'
  '-amdgpu-vgpr-index-mode[- Use GPR indexing mode instead of movrel for vector indexing]'
  '-arm-add-build-attributes[-]'
  '-arm-attributes[- Display the ARM attributes section]'
  '-arm-implicit-it[- Allow conditional instructions outdside of an IT block]'
  '-atomic-counter-update-promoted[- Do counter update using atomic fetch add for promoted counters only]'
  '-bounds-checking-single-trap[- Use one trap block per function]'
  '-codeview[- Display CodeView debug information]'
  '-codeview-merged-types[- Display the merged CodeView type stream]'
  '-codeview-subsection-bytes[- Dump raw contents of codeview debug sections and records]'
  '-coff-basereloc[- Display the PE/COFF .reloc section]'
  '-coff-debug-directory[- Display the PE/COFF debug directory]'
  '-coff-directives[- Display the PE/COFF .drectve section]'
  '-coff-exports[- Display the PE/COFF export table]'
  '-coff-imports[- Display the PE/COFF import table]'
  '-coff-load-config[- Display the PE/COFF load config]'
  '-coff-resources[- Display the PE/COFF .rsrc section]'
  '-cost-kind[- Target cost kind]'
  '-cvp-dont-process-adds[-]'
  '-d[- Alias for --dynamic-table]'
  '-disable-promote-alloca-to-lds[- Disable promote alloca to LDS]'
  '-disable-promote-alloca-to-vector[- Disable promote alloca to vector]'
  '-do-counter-promotion[- Do counter register promotion]'
  '-dyn-relocations[- Display the dynamic relocation entries in the file]'
  '-dyn-symbols[- Display the dynamic symbol table]'
  '-dynamic-table[- Display the ELF .dynamic section table]'
  '-elf-cg-profile[- Display callgraph profile section]'
  '-elf-hash-histogram[- Display bucket list histogram for hash sections]'
  '-elf-linker-options[- Display the ELF .linker-options section]'
  '-elf-output-style[- Specify ELF dump style]'
  '-elf-section-groups[- Display ELF section group contents]'
  '-emscripten-cxx-exceptions-whitelist[- The list of function names in which Emscripten-style exception handling is enabled (see emscripten EMSCRIPTEN_CATCHING_WHITELIST options)]'
  '-enable-cse-in-irtranslator[- Should enable CSE in irtranslator]'
  '-enable-cse-in-legalizer[- Should enable CSE in Legalizer]'
  '-enable-emscripten-cxx-exceptions[- WebAssembly Emscripten-style exception handling]'
  '-enable-emscripten-sjlj[- WebAssembly Emscripten-style setjmp/longjmp handling]'
  '-enable-gvn-memdep[-]'
  '-enable-load-pre[-]'
  '-enable-loop-simplifycfg-term-folding[-]'
  '-enable-name-compression[- Enable name string compression]'
  '-expand-relocs[- Expand each shown relocation to multiple lines]'
  '-expensive-combines[- Enable expensive instruction combines]'
  '-file-headers[- Display file headers]'
  '-gnu-hash-table[- Display ELF .gnu.hash section]'
  '-gpsize[- Global Pointer Addressing Size. The default size is 8.]'
  '-h[- Alias for --file-headers]'
  '-hash-based-counter-split[- Rename counter variable of a comdat function based on cfg hash]'
  '-hash-table[- Display ELF hash table]'
  '-headers[- Equivalent to setting: --file-headers, --program-headers, --section-headers]'
  '-hex-dump[- <number|name>]'
  '-import-all-index[- Import all external functions in index.]'
  '-instcombine-code-sinking[- Enable code sinking]'
  '-instcombine-guard-widening-window[- How wide an instruction window to bypass looking for another guard]'
  '-instcombine-max-num-phis[- Maximum number phis to handle in intptr/ptrint folding]'
  '-instcombine-maxarray-size[- Maximum array size considered when doing a combine]'
  '-instrprof-atomic-counter-update-all[- Make all profile counter updates atomic (for testing only)]'
  '-internalize-public-api-file[- A file containing list of symbol names to preserve]'
  '-internalize-public-api-list[- A list of symbol names to preserve]'
  '-iterative-counter-promotion[- Allow counter promotion across the whole loop nest.]'
  '-l[- Alias for --program-headers]'
  '-lto-pass-remarks-output[- Output filename for pass remarks]'
  '-macho-data-in-code[- Display MachO Data in Code command]'
  '-macho-dysymtab[- Display MachO Dysymtab command]'
  '-macho-indirect-symbols[- Display MachO indirect symbols]'
  '-macho-linker-options[- Display MachO linker options]'
  '-macho-segment[- Display MachO Segment command]'
  '-macho-version-min[- Display MachO version min command]'
  '-max-counter-promotions[- Max number of allowed counter promotions]'
  '-max-counter-promotions-per-loop[- Max number counter promotions per loop to avoid increasing register pressure too much]'
  '-memop-size-large[- Set large value thresthold in memory intrinsic size profiling. Value of 0 disables the large value profiling.]'
  '-memop-size-range[- Set the range of size in memory intrinsic calls to be profiled precisely, in a format of <start_val>:<end_val>]'
  '-merror-missing-parenthesis[- Error for missing parenthesis around predicate registers]'
  '-merror-noncontigious-register[- Error for register names that arent contigious]'
  '-mhvx[- Enable Hexagon Vector eXtensions]'
  '-mips-abi-flags[- Display the MIPS.abiflags section]'
  '-mips-compact-branches[- MIPS Specific: Compact branch policy.]'
  '-mips-options[- Display the MIPS .MIPS.options section]'
  '-mips-plt-got[- Display the MIPS GOT and PLT GOT sections]'
  '-mips-reginfo[- Display the MIPS .reginfo section]'
  '-mips16-constant-islands[- Enable mips16 constant islands.]'
  '-mips16-hard-float[- Enable mips16 hard float.]'
  '-mno-compound[- Disable looking for compound instructions for Hexagon]'
  '-mno-fixup[- Disable fixing up resolved relocations for Hexagon]'
  '-mno-ldc1-sdc1[- Expand double precision loads and stores to their single precision counterparts]'
  '-mno-pairing[- Disable looking for duplex instructions for Hexagon]'
  '-mwarn-missing-parenthesis[- Warn for missing parenthesis around predicate registers]'
  '-mwarn-noncontigious-register[- Warn for register names that arent contigious]'
  '-mwarn-sign-mismatch[- Warn for mismatching a signed and unsigned value]'
  '-needed-libs[- Display the needed libraries]'
  '-no-discriminators[- Disable generation of discriminator information.]'
  '-notes[- Display the ELF notes in the file]'
  '-nvptx-sched4reg[- NVPTX Specific: schedule for register pressue]'
  '-program-headers[- Display ELF program headers]'
  '-r[- Alias for --relocations]'
  '-r600-ir-structurize[- Use StructurizeCFG IR pass]'
  '-raw-relr[- Do not decode relocations in SHT_RELR section, display raw contents]'
  '-rdf-dump[-]'
  '-rdf-limit[-]'
  '-relocations[- Display the relocation entries in the file]'
  '-s[- Alias for --section-headers]'
  '-safepoint-ir-verifier-print-only[-]'
  '-sample-profile-check-record-coverage[- Emit a warning if less than N% of records in the input profile are matched to the IR.]'
  '-sample-profile-check-sample-coverage[- Emit a warning if less than N% of samples in the input profile are matched to the IR.]'
  '-sample-profile-max-propagate-iterations[- Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.]'
  '-section-data[- Display section data for each section shown.]'
  '-section-headers[- Display all section headers.]'
  '-section-relocations[- Display relocations for each section shown.]'
  '-section-symbols[- Display symbols for each section shown.]'
  '-sections[- Alias for --section-headers]'
  '-speculative-counter-promotion-max-exiting[- The max number of exiting blocks of a loop to allow speculative counter promotion]'
  '-speculative-counter-promotion-to-loop[- When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter update can be further/iteratively promoted into an acyclic region.]'
  '-stackmap[- Display contents of stackmap section]'
  '-string-dump[- <number|name>]'
  '-summary-file[- The summary file to use for function importing.]'
  '-symbols[- Display the symbol table]'
  '-t[- Alias for --symbols]'
  '-threads[-]'
  '-unwind[- Display unwind information]'
  '-verify-region-info[- Verify region info (time consuming)]'
  '-version-info[- Display ELF version sections (if present)]'
  '-vp-counters-per-site[- The average number of profile counters allocated per value profiling site.]'
  '-vp-static-alloc[- Do static counter allocation for value profiler]'
  '-help[- Display available options (-help-hidden for more)]'
  '-help-list[- Display list of available options (-help-list-hidden for more)]'
  '-version[- Display the version of this program]'
  '*:filename:_files'
)

_arguments -s $arguments
