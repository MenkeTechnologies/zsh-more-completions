#compdef lsappinfo

local arguments

arguments=(
  {-v,--verbose}'[be more verbose about many operations]'
  {-q,--quiet}'[be less verbose about many operations]'
  '-defaultSession[use kLSDefaultSessionID as the session ID for all calls ( the default )]'
  '-currentSession[use kLSCurrentSessionID as the session ID for all calls]'
  '-allsessions[use kLSAllSessionID as the session ID for all calls ( generally must be root)]'
  '-debug[set the debugging level to LOG_DEBUG]'
  '-info[set the debugging level to LOG_INFO]'
  '-notice[set the debugging level to LOG_NOTICE]'
  '-warning[set the debugging level to LOG_WARNING]'
  '-err[set the debugging level to LOG_ERR]'
  '-critical[set the debugging level to LOG_CRIT]'
  '-alert[set the debugging level to LOG_ALERT]'
  '-emergency[set the debugging level to LOG_EMERG]'
  '-debugserver[instead of talking to the real LAS server, talk to a server named LSDEBUGSERVER]'
  '-useserver[} == instead of talking to the real LAS server, talk to a server with the given name]'
  '-all[show full process or meta information items instead of summary]'
  '-names[show application names in asn lists]'
  '-nonames[show application names in asn lists]'
  '-xml[show application information and meta information items as XML]'
  '-noxml[show application information and meta information items as text, not XML]'
  '-debuglogname[} == use the specified name in the LAS debug output log instead of the process name]'
  '--version[show version information and exit]'
  '-asn[and also an optional dataRef consisting of a dictionary with the specified key/values pairs, or]'
  '-name[becames _kLSDisplayNameKey=<displayNameAsCFString>]'
  '-bundlepath[becomes _kLSBundlePathKey=<bundlePathAsCFString>]'
  '-execpath[becomes _kLSExecutablePathKey=<execPathAsCFString>]'
  '-bundleid[becomes _kLSBundleIdentifierKey=<bundleIdentifierAsCFString>]'
  '-pid[becomes _kLSPIDKey=<pidAsCFNumber>]'
  '-foreground[becomes _kLSApplicationTypeKey=_kLSForegroundApplicationTypeKey]'
  '-background[becomes _kLSApplicationTypeKey=_kLSBackgroundApplicationTypeKey]'
  '-uielement[becomes _kLSApplicationTypeKey=_kLSUIElementApplicationTypeKey]'
  '*:filename:_files'
)

_arguments -s $arguments
