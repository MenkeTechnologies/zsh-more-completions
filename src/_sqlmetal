#compdef sqlmetal

local arguments

arguments=(
  {-c,--conn}'[STRING]'
  {-u,--user}'[login user NAME.]'
  {-p,--password}'[login PASSWORD.]'
  {-s,--server}'[database server NAME.]'
  {-d,--database}'[database catalog NAME on server.]'
  '--provider[specify PROVIDER. May be Ingres, MySql, Oracle]'
  '--with-schema-loader[ISchemaLoader implementation TYPE.]'
  '--with-dbconnection[IDbConnection implementation TYPE.]'
  '--with-sql-dialect[IVendor implementation TYPE.]'
  '--code[output as source code to FILE. Cannot be used]'
  '--dbml[output as dbml to FILE. Cannot be used with /map]'
  '--language[language NAME for source code: C#, C#2 or VB]'
  '--aliases[use mapping FILE.]'
  '--schema[generate schema in code files (default: enabled).]'
  '--namespace[namespace NAME of generated code (default: no]'
  '--entitybase[base TYPE of entity classes in the generated]'
  '--member-attribute[ATTRIBUTE for entity members in the generated]'
  '--generate-type[generate only the TYPE selected, can be]'
  '--generate-equals-hash[overrides for Equals() and]'
  '--sprocs[extract stored procedures.]'
  '--pluralize[automatically pluralize or singularize class and]'
  '--culture[specify CULTURE for word recognition and]'
  '--case[transform names with the indicated STYLE]'
  '--generate-timestamps[generate timestampes in the generated code]'
  '--readline[wait for a key to be pressed after processing.]'
  '--debug[enables additional information to help with]'
  '-h[-\?, --help Show this help]'
  '*:filename:_files'
)

_arguments -s $arguments
