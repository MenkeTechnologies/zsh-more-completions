#compdef dune

local arguments

arguments=(
  '--inline-tests[\]]'
  '--action-stderr-on-success[same as --action-stdout-on-success but for the standard output for]'
  '--action-stdout-on-success[]'
  '--action-stderr-on-success[. This ensures that a]'
  '--action-stdout-on-success[specify how to deal with the standard output of actions when they]'
  '--build-info[show build information.]'
  '--error-reporting[(absent=early)]'
  {-f,--force}'[force actions associated to aliases to be re-executed even if]'
  '--file-watcher[(absent=automatic)]'
  '--help[(default=auto)]'
  '--passive-watch-mode[similar to \[--watch\], but only start a build when instructed]'
  '--sandbox[(absent DUNE_SANDBOX env)]'
  '--version[show version information.]'
  {-w,--watch}'[instead of terminating build after completion, wait continuously]'
  '--wait-for-filesystem-clock[dune digest file contents for better incrementally. These digests]'
  '--always-show-command-line[always show the full command lines of programs executed by dune]'
  '--auto-promote[automatically promote files. This is similar to running dune]'
  '--build-dir[(absent DUNE_BUILD_DIR env)]'
  '--cache[(absent DUNE_CACHE env)]'
  '--cache-check-probability[(absent DUNE_CACHE_CHECK_PROBABILITY]'
  '--cache-storage-mode[(absent DUNE_CACHE_STORAGE_MODE env)]'
  '--config-file[load this configuration file instead of the default one.]'
  '--debug-artifact-substitution[print debugging info about artifact substitution]'
  '--debug-backtraces[always print exception backtraces.]'
  '--debug-cache[show debug messages on cache misses for the given cache layers.]'
  '--debug-dependency-path[in case of error, print the dependency path from the targets on]'
  '--debug-digests[explain why Dune decides to re-digest some files]'
  '--debug-findlib[debug the findlib sub-system.]'
  '--debug-store-digest-preimage[store digest preimage for all computed digests, so that its]'
  '--default-target[(absent=@@default)]'
  '--diff-command[(absent DUNE_DIFF_COMMAND env)]'
  '--disable-promotion[DUNE_DISABLE_PROMOTION env)]'
  '--display[control the display mode of Dune. See dune-config(5) for more]'
  '--dump-memo-graph[dumps the dependency graph to a file after the build is complete]'
  '--dump-memo-graph-format[(absent=gexf)]'
  '--dump-memo-graph-with-timing[with --dump-memo-graph, will re-run each cached node in the Memo]'
  '--ignore-promoted-rules[ignore rules with (mode promote), except ones with (only ...). The]'
  '--instrument-with[(absent DUNE_INSTRUMENT_WITH env)]'
  '-j[run no more than JOBS commands simultaneously.]'
  '--no-buffer[do not buffer the output of commands executed by dune. By default]'
  '--no-config[do not load the configuration file]'
  '--no-print-directory[suppress "Entering directory" messages]'
  '--only-packages[ignore stanzas referring to a package that is not in PACKAGES.]'
  {-p,--for-release-of-packages}'[(required)]'
  '--print-metrics[print out various performance metrics after every build]'
  '--profile[(absent DUNE_PROFILE env)]'
  '--promote-install-files[(default=true)]'
  '--release[put dune into a reproducible release mode. This is in fact a]'
  {--profile,--always-show-command-line}'[]'
  {--promote-install-files,--default-target}'[]'
  '--require-dune-project-file[. You should use this option for]'
  '--require-dune-project-file[(default=true)]'
  '--root[use this directory as workspace root instead of guessing it. Note]'
  '--store-orig-source-dir[DUNE_STORE_ORIG_SOURCE_DIR env)]'
  '--terminal-persistence[changes how the log of build results are displayed to the console]'
  '--trace-file[output trace data in catapult format (compatible with]'
  '--verbose[same as --display verbose]'
  '--workspace[(absent DUNE_WORKSPACE env)]'
  '-x[cross-compile using this toolchain.]'
  '*:filename:_files'
)

_arguments -s $arguments
