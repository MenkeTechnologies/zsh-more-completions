#compdef cd-paranoia

local arguments

arguments=(
  {-v,--verbose}'[extra verbose operation]'
  {-q,--quiet}'[quiet operation]'
  {-e,--stderr-progress}'[force output of progress information to]'
  {-l,--log-summary}'[save result summary to file]:file:'
  {-V,--version}'[print version info and quit]'
  {-Q,--query}'[autosense drive, query disc and quit]'
  {-B,--batch}'[batch mode (saves each track to a]'
  {-s,--search-for-drive}'[do an exhaustive search for drive]'
  '(- * :)'{-h,--help}'[print help]'
  {-p,--output-raw}'[output raw 16 bit PCM in host byte]'
  {-r,--output-raw-little-endian}'[output raw 16 bit little-endian PCM]'
  {-R,--output-raw-big-endian}'[output raw 16 bit big-endian PCM]'
  {-w,--output-wav}'[output as WAV file (default)]'
  {-f,--output-aiff}'[output as AIFF file]'
  {-a,--output-aifc}'[output as AIFF-C file]'
  {-c,--force-cdrom-little-endian}'[force treating drive as little endian]'
  {-C,--force-cdrom-big-endian}'[force treating drive as big endian]'
  {-n,--force-default-sectors}'[force default number of sectors in read]'
  {-o,--force-search-overlap}'[force minimum overlap search during]:n:'
  {-d,--force-cdrom-device}'[use specified device; disallow]:dev:'
  {-g,--force-generic-device}'[really an alias for -d. Kept for]'
  {-S,--force-read-speed}'[read from device at specified speed]'
  {-t,--toc-offset}'[Add <n> sectors to the values reported]'
  {-T,--toc-bias}'[Assume that the beginning offset of]'
  {-m,--mmc-timeout}'[Set SCSI-MMC timeout to <n> seconds.]'
  {-O,--sample-offset}'[Add <n> samples to the offset when]'
  {-z,--never-skip}'[never accept any less than perfect]'
  {-Z,--disable-paranoia}'[disable all paranoia checking]'
  {-Y,--disable-extra-paranoia}'[only do cdda2wav-style overlap checking]'
  {-X,--abort-on-skip}'[abort on imperfect reads/skips]'
  {-x,--test-flags}'[simulate CD-reading errors of ilk-mask n]'
  '-2[specifies ripping from the beginning of the disc up to]'
  '-2[Specifies ripping from the beginning of the disc up to]:\[30.35\]:'
  '*:filename:_files'
)

_arguments -s $arguments
