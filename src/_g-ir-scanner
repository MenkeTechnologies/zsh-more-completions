#compdef g-ir-scanner

local arguments

arguments=(
  '(- * :)'{-h,--help}'[show this help message and exit]'
  '--quiet[if passed, do not print details of normal operation]'
  '--format[format to use, one of gidl, gir]'
  {-i,--include}'[add specified gir file as dependency]'
  '--include-uninstalled[A file path to a dependency; only use this "]'
  '--add-include-path[include paths for other GIR files]'
  '--program[program to execute]'
  '--program-arg[extra arguments to program]'
  '--libtool[full path to libtool]'
  '--no-libtool[do not use libtool]'
  '--external-library[if true, the library is located on the system,not in]'
  {-l,--library}'[libraries of this unit]'
  '--extra-library[extra libraries to link the binary against]'
  {-L,--library-path}'[directories to search for libraries]'
  '--header-only[if specified, just generate a GIR for the given header]'
  {-n,--namespace}'[name of namespace for this unit, also used to compute]'
  {--identifier-prefix,--symbol-prefix}'[]'
  '--nsversion[version of namespace for this unit]'
  '--strip-prefix[option --strip-prefix is deprecated, please see]'
  {--identifier-prefix,--symbol-prefix}'[.]'
  '--identifier-prefix[remove this prefix from C identifiers (structure]'
  '--identifier-filter-cmd[filter identifiers (struct and union typedefs) through]'
  '--symbol-prefix[remove this prefix from C symbols (function names)]'
  '--symbol-filter-cmd[filter symbols (function names) through the given]'
  '--accept-unprefixed[if specified, accept symbols and identifiers that do]'
  '--add-init-section[add extra initialization code in the introspection]'
  {-o,--output}'[output filename to write to, defaults to - (stdout)]'
  '--pkg[pkg-config packages to get cflags from]'
  '--pkg-export[associated pkg-config packages for this library]'
  '--warn-all[if true, enable all warnings for introspection]'
  '--warn-error[turn warnings into fatal errors]'
  {-v,--verbose}'[be verbose]'
  '--c-include[headers which should be included in C programs]'
  '--filelist[file containing headers and sources to be scanned]'
  '--function-decoration[macro to decorate functions in generated code]'
  '--include-first-in-header[header to include first in generated header]'
  '--include-last-in-header[header to include after the other headers in generated]'
  '--include-first-in-src[header to include first in generated sources]'
  '--include-last-in-src[header to include after the other headers in generated]'
  '--cflags-begin[start preprocessor/compiler flags]'
  '--cflags-end[end preprocessor/compiler flags]'
  '-I[pre-processor include file]'
  '-D[pre-processor define]'
  '-U[pre-processor undefine]'
  '-p[ignored]'
  '*:filename:_files'
)

_arguments -s $arguments
