#compdef grcov

local arguments

arguments=(
  '--branch[enables parsing branch coverage information]'
  '--guess-directory-when-missing[]'
  '(- * :)'{-h,--help}'[prints help information]'
  '--ignore-not-existing[ignore source files that cant be found on the disk]'
  '--llvm[speeds-up parsing, when the code coverage information is exclusively coming from a llvm build]'
  '--no-demangle[no symbol demangling]'
  '--parallel[sets the build type to be parallel for coveralls and coveralls+ formats]'
  {-V,--version}'[prints version information]'
  {-b,--binary-path}'[sets the path to the compiled binary to be used]'
  '--commit-sha[HASH>]'
  '--excl-br-line[lines in covered files containing this marker will be excluded from branch coverage.]'
  '--excl-br-start[marks the beginning of a section excluded from branch coverage. The current line is part of this section.]'
  '--excl-br-stop[marks the end of a section excluded from branch coverage. The current line is part of this section.]'
  '--excl-line[lines in covered files containing this marker will be excluded.]'
  '--excl-start[marks the beginning of an excluded section. The current line is part of this section.]'
  '--excl-stop[marks the end of an excluded section. The current line is part of this section.]'
  '--filter[filters out covered/uncovered files. Use covered to only return covered files, uncovered to only return]'
  '--ignore[...]'
  '--keep-only[...]'
  '--log[set the file where to log (or stderr or stdout). Defaults to stderr \[default: stderr\]]'
  {-o,--output-path}'[specifies the output path]'
  {-t,--output-type}'[TYPE>]'
  '--path-mapping[...]'
  {-p,--prefix-dir}'[specifies a prefix to remove from the paths (e.g. if grcov is run on a different machine than the one that]'
  '--service-job-id[JOB ID>]'
  '--service-name[NAME>]'
  '--service-number[NUMBER>]'
  '--service-pull-request[PULL REQUEST>]'
  {-s,--source-dir}'[specifies the root directory of the source files]'
  '--threads[\[default: 11\]]'
  '--token[sets the repository token from Coveralls, required for the coveralls and coveralls+ formats]'
  '--vcs-branch[BRANCH>]'
  '*:filename:_files'
)

_arguments -s $arguments
