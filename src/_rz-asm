#compdef rz-asm

# Autogenerated from man page /usr/share/man/man1/rz-asm.1.gz

local arguments

arguments=(
    '-a[Set architecture plugin.]'
    '-A[Show analysis information of given hexpair string.]'
    '-b[Set architecture bits.]'
    '-B[Binary input/output (\\-l is mandatory for binary input).]'
    '-c[Select specific CPU (depends on \\-a arch).]'
    '-C[Output in C format.]'
    '-d[Disassemble hexpair bytes. rz-asm \\-d 9090.]'
    '-D[Disassemble showing hexpair and opcode.]'
    '-e[Use big endian (or swap endianness if used more than once).]'
    '-E[Output disassembled instructions in ESIL format.]'
    '-f[Read data from file instead of ARG.]'
    '-F[Specify input and/or output filters (att2intel, x86. pseudo, . ).]'
    '-h[Show usage help message.]'
    '--hh[Show long help message including supported assembler directives.]'
    '-l[Input/Output length.]'
    '-i[Ignore/skip N bytes from the beginning of the input buffer.]'
    '-L[List supported asm plugins.]'
    '-o[Offset of the opcode to assemble (default is 0).]'
    '-@[Alias for -o.]'
    '-O[output to file, for example \rz-asm \\-BF a a. asm\.]'
    '-r[Show output in rizin script.]'
    '-s[Select syntax output (intel, att).]'
    '-w[Describe opcode (whats op).]'
    '-x[Use hex dwords instead of hexpairs in the assembler output.]'
    '-q[Quiet output (handy for -L, -v, .]'
    '--.intel_syntax[Use intel syntax rather than att:w.]'
    '--.att_syntax[Use ATT syntax rather than flu :w dentify the region fof aslerrger.]'
    '--string[dentify the region fof aslerrger.]'
    '--.align[.]'
    '--.arch[.]'
    '--.arm[.]'
    '--.ascii[.]'
    '--.bits[.]'
    '--.data[.]'
    '--.equ[.]'
    '--.fill[.]'
    '--.glob[.]'
    '--.hex[.]'
    '--.int16[.]'
    '--.int32[.]'
    '--.int64[.]'
    '--.kernel[.]'
    '--.offset[.]'
    '--.org[.]'
    '--.os[.]'
    '--.short[.]'
    '--.text[.]'
    '--.thumb[El EXAMPLES Pp Assemble opcode: Pp $ rz-asm \\-a x86 \\-b 32 \mov eax, 33\ Pp Dâ€¦]'
    '*:filename:_files'
)
_arguments -s $arguments
