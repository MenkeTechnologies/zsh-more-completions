#compdef html-minifier

local arguments

arguments=(
  {-V,--version}'[output the version number]'
  '--case-sensitive[treat attributes in case sensitive manner (useful for SVG; e.g. viewBox)]'
  '--collapse-boolean-attributes[omit attribute values from boolean attributes]'
  '--collapse-inline-tag-whitespace[collapse white space around inline tag]'
  '--collapse-whitespace[collapse white space that contributes to text nodes in a document tree.]'
  '--conservative-collapse[always collapse to 1 space (never remove it entirely)]'
  '--continue-on-parse-error[handle parse errors instead of aborting]'
  '--custom-attr-assign[arrays of regexes that allow to support custom attribute assign expressions (e.g. <div flex?="{{mode != cover}}"></div>)]'
  '--custom-attr-collapse[regex that specifies custom attribute to strip newlines from (e.g. /ng-class/)]'
  '--custom-attr-surround[arrays of regexes that allow to support custom attribute surround expressions (e.g. <input {{#if value}}checked="checked"{{/if}}>)]'
  '--custom-event-attributes[arrays of regexes that allow to support custom event attributes for minifyJS (e.g. ng-click)]'
  '--decode-entities[use direct Unicode characters whenever possible]'
  '--no-html5[parse input according to HTML5 specifications]'
  '--ignore-custom-comments[array of regexes that allow to ignore certain comments, when matched]'
  '--ignore-custom-fragments[array of regexes that allow to ignore certain fragments, when matched (e.g. <?php ... ?>, {{ ... }})]'
  '--no-include-auto-generated-tags[insert tags generated by HTML parser]'
  '--keep-closing-slash[keep the trailing slash on singleton elements]'
  '--max-line-length[max line length]'
  '--minify-css[minify CSS in style elements and style attributes (uses clean-css)]'
  '--minify-js[minify Javascript in script elements and on* attributes (uses uglify-js)]'
  '--minify-urls[minify URLs in various attributes (uses relateurl)]'
  '--preserve-line-breaks[always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break.]'
  '--prevent-attributes-escaping[prevents the escaping of the values of attributes.]'
  '--process-conditional-comments[process contents of conditional comments through minifier]'
  '--process-scripts[array of strings corresponding to types of script elements to process through minifier (e.g. "text/ng-template", "text/x-handlebars-template", etc.)]'
  '--quote-character[type of quote to use for attribute values ( or ")]'
  '--remove-attribute-quotes[remove quotes around attributes when possible.]'
  '--remove-comments[strip HTML comments]'
  '--remove-empty-attributes[remove all attributes with whitespace-only values]'
  '--remove-empty-elements[remove all elements with empty contents]'
  '--remove-optional-tags[remove unrequired tags]'
  '--remove-redundant-attributes[remove attributes when value matches default.]'
  '--remove-script-type-attributes[remove type="text/javascript" from script tags. Other type attribute values are left intact.]'
  '--remove-style-link-type-attributes[remove type="text/css" from style and link tags. Other type attribute values are left intact.]'
  '--remove-tag-whitespace[remove space between attributes whenever possible]'
  '--sort-attributes[sort attributes by frequency]'
  '--sort-class-name[sort style classes by frequency]'
  '--trim-custom-fragments[trim white space around ignoreCustomFragments.]'
  '--use-short-doctype[replaces the doctype with the short (HTML5) doctype]'
  {-o,--output}'[specify output file (if not specified STDOUT will be used for output)]'
  {-c,--config-file}'[use config file]'
  '--input-dir[specify an input directory]'
  '--output-dir[specify an output directory]'
  '--file-ext[specify an extension to be read, ex: html]'
  '(- * :)'{-h,--help}'[output usage information]'
  '*:filename:_files'
)

_arguments -s $arguments
