#compdef rootlesskit

local arguments

arguments=(
  '--debug[debug mode (default: false)]'
  '--state-dir[state directory]'
  '--net[network driver \[host, slirp4netns, vpnkit, lxc-user-nic(experimental)\] (default: "host")]'
  '--slirp4netns-binary[path of slirp4netns binary for --net=slirp4netns (default: "slirp4netns")]'
  '--slirp4netns-sandbox[enable slirp4netns sandbox (experimental) \[auto, true, false\] (the default is planned to be "auto" in future) (default: "false")]'
  '--slirp4netns-seccomp[enable slirp4netns seccomp (experimental) \[auto, true, false\] (the default is planned to be "auto" in future) (default: "false")]'
  '--vpnkit-binary[path of VPNKit binary for --net=vpnkit (default: "vpnkit")]'
  '--lxc-user-nic-binary[path of lxc-user-nic binary for --net=lxc-user-nic]'
  '--lxc-user-nic-bridge[lxc-user-nic bridge name (default: "lxcbr0")]'
  '--mtu[MTU for non-host network (default: 65520 for slirp4netns, 1500 for others) (default: 0)]'
  '--cidr[CIDR for slirp4netns network (default: 10.0.2.0/24)]'
  '--ifname[network interface name (default: tap0 for slirp4netns and vpnkit, eth0 for lxc-user-nic)]'
  '--disable-host-loopback[prohibit connecting to 127.0.0.1:* on the host namespace (default: false)]'
  '--copy-up[mount a filesystem and copy-up the contents. e.g. "--copy-up=/etc" (typically required for non-host network)]'
  '--copy-up-mode[copy-up mode \[tmpfs+symlink\] (default: "tmpfs+symlink")]'
  '--port-driver[port driver for non-host network. \[none, builtin, slirp4netns, socat(deprecated)\] (default: "none")]'
  {--publish,-p}'[publish ports. e.g. "127.0.0.1:8080:80/tcp"]'
  '--pidns[create a PID namespace (default: false)]'
  '--cgroupns[create a cgroup namespace (default: false)]'
  '--utsns[create a UTS namespace (default: false)]'
  '--ipcns[create an IPC namespace (default: false)]'
  '--propagation[mount propagation \[rprivate, rslave\] (default: "rprivate")]'
  '--reaper[enable process reaper. Requires --pidns. \[auto,true,false\] (default: "auto")]'
  '--evacuate-cgroup2[evacuate processes into the specified subgroup. Requires --pidns and --cgroupns]'
  {--help,-h}'[show help (default: false)]'
  {--version,-v}'[print the version (default: false)]'
  '*:filename:_files'
)

_arguments -s $arguments
