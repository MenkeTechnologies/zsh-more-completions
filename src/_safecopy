#compdef safecopy

local arguments

arguments=(
  '--stage1[preset to rescue most of the data fast]'
  '-o[1.badblocks]'
  '--stage2[preset to rescue more data, using no retries]'
  '-I[1.badblocks]'
  '-o[2.badblocks]'
  '--stage3[preset to rescue everything that can be rescued]'
  '-I[2.badblocks]'
  '-o[3.badblocks]'
  '-b[Blocksize for default read operations.]'
  '-f[Blocksize when skipping over badblocks.]'
  '-r[Resolution in bytes when searching for the exact]'
  '-R[At least that many read attempts are made on the first]'
  '-Z[On each error, force seek the read head from start to]'
  '-L[Use low level device calls as specified:]'
  '--sync[use synchronized read calls (disable driver buffering).]'
  '--forceopen[keep trying to reopen the source after a read errer]'
  '-s[Start position where to start reading.]'
  '-l[Maximum length of data to be read.]'
  '-I[Incremental mode. Assume the target file already]'
  '-i[Blocksize to interpret the badblockfile given with -I.]'
  '-c[Continue copying at this position.]'
  '-c[will continue at the current destination size.]'
  '-X[Exclusion mode. If used together with -I]'
  '-x[Blocksize to interpret the badblockfile given with -X.]'
  '-o[Write a badblocks/e2fsck compatible bad block file.]'
  '-S[Use external script for seeking in input file.]'
  '-M[Mark unrecovered data with this string instead of]'
  '--debug[Enable debug output. Level is a bit field]'
  '-T[Write sector read timing information into]'
  '(- * :)'{-h,--help}'[show this text]'
  '*:filename:_files'
)

_arguments -s $arguments
