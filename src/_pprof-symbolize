#compdef pprof-symbolize

local arguments

arguments=(
  '--cum[sort by cumulative data]'
  '--base[subtract <base> from <profile> before display]'
  '--interactive[run in interactive mode (interactive "help" gives help) \[default\]]'
  '--seconds[length of time for dynamic profiles \[default=30 secs\]]'
  '--add[_lib=<file>    Read additional symbols and line info from the given library]'
  '--lib[_prefix=<dir>  Comma separated list of library path prefixes]'
  '--no[_strip_temp     Do not strip template arguments from function names]'
  '--addresses[report at address level]'
  '--lines[report at source line level]'
  '--functions[report at function level \[default\]]'
  '--files[report at source file level]'
  '--text[generate text report]'
  '--stacks[generate stack traces similar to the heap profiler (requires --text)]'
  '--callgrind[generate callgrind format to stdout]'
  '--gv[generate Postscript and display]'
  '--evince[generate PDF and display]'
  '--web[generate SVG and display]'
  '--list[generate source listing of matching routines]'
  '--disasm[generate disassembly of matching routines]'
  '--symbols[print demangled symbol names found at given addresses]'
  '--dot[generate DOT file to stdout]'
  '--ps[generate Postscript to stdout]'
  '--pdf[generate PDF to stdout]'
  '--svg[generate SVG to stdout]'
  '--gif[generate GIF to stdout]'
  '--raw[generate symbolized pprof data (useful with remote fetch)]'
  '--collapsed[generate collapsed stacks for building flame graphs]'
  '--inuse[_space       Display in-use (mega)bytes \[default\]]'
  '--inuse[_objects     Display in-use objects]'
  '--alloc[_space       Display allocated (mega)bytes]'
  '--alloc[_objects     Display allocated objects]'
  '--show[_bytes        Display space in bytes]'
  '--drop[_negative     Ignore negative differences]'
  '--total[_delay       Display total delay at each region \[default\]]'
  '--contentions[display number of delays at each region]'
  '--mean[_delay        Display mean delay at each region]'
  '--nodecount[show at most so many nodes \[default=80\]]'
  '--nodefraction[hide nodes below <f>*total \[default=.005\]]'
  '--edgefraction[hide edges below <f>*total \[default=.001\]]'
  '--maxdegree[max incoming/outgoing edges per node \[default=8\]]'
  '--focus[focus on nodes matching <regexp>]'
  '--ignore[ignore nodes matching <regexp>]'
  '--scale[set GV scaling \[default=0\]]'
  '--heapcheck[make nodes with non-0 object counts]'
  '--no-auto-signal-frm[drop 2nd frame that is always same (cpu-only)]'
  '--show[_addresses    Always show addresses when applicable]'
  '--tools[or binary:fullpath>\[,...\]   $PATH for object tool pathnames]'
  '--test[run unit tests]'
  '--help[this message]'
  '--version[version information]'
  '*:filename:_files'
)

_arguments -s $arguments
