#compdef msfvenom

local arguments

arguments=(
  {-l,--list}'[List all modules for \[type\]. Types are: payloads, encoders, nops, platforms, archs, formats, all]:type:'
  {-p,--payload}'[Payload to use (--list payloads to list, --list-options for arguments). Specify - or STDIN for custom]:payload:'
  '--list-options[list --payload <value>s standard, advanced and evasion options]'
  {-f,--format}'[Output format (use --list formats to list)]:format:'
  {-e,--encoder}'[The encoder to use (use --list encoders to list)]:encoder:'
  '--smallest[generate the smallest possible payload using all available encoders]'
  {-a,--arch}'[The architecture to use for --payload and --encoders (use --list archs to list)]:arch:'
  '--platform[The platform for --payload (use --list platforms to list)]:platform:'
  {-o,--out}'[Save the payload to a file]:path:'
  {-b,--bad-chars}'[Characters to avoid example: \x00\xff]:list:'
  {-n,--nopsled}'[Prepend a nopsled of \[length\] size on to the payload]:length:'
  {-s,--space}'[The maximum size of the resulting payload]:length:'
  '--encoder-space[The maximum size of the encoded payload (defaults to the -s value)]:length:'
  {-i,--iterations}'[The number of times to encode the payload]:count:'
  {-c,--add-code}'[Specify an additional win32 shellcode file to include]:path:'
  {-x,--template}'[Specify a custom executable file to use as a template]:path:'
  {-k,--keep}'[preserve the --template behaviour and inject the payload as a new thread]'
  {-v,--var-name}'[Specify a custom variable name to use for certain output formats]:value:'
  {-t,--timeout}'[The number of seconds to wait when reading the payload from STDIN (default 30, 0 to disable)]:second:'
  '(- * :)'{-h,--help}'[show this message]'
  '*:filename:_files'
)

_arguments -s $arguments
