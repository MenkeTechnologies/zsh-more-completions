#compdef msfvenom

local arguments

arguments=(
  {-l,--list}'[<type>     List all modules for \[type\]. Types are: payloads, encoders, nops, platforms, archs, formats, all]'
  {-p,--payload}'[<payload>  Payload to use (--list payloads to list, --list-options for arguments). Specify - or STDIN for custom]'
  '--list-options[list --payload <value>s standard, advanced and evasion options]'
  {-f,--format}'[<format>   Output format (use --list formats to list)]'
  {-e,--encoder}'[<encoder>  The encoder to use (use --list encoders to list)]'
  '--smallest[generate the smallest possible payload using all available encoders]'
  {-a,--arch}'[<arch>     The architecture to use for --payload and --encoders (use --list archs to list)]'
  '--platform[<platform> The platform for --payload (use --list platforms to list)]'
  {-o,--out}'[<path>     Save the payload to a file]'
  {-b,--bad-chars}'[<list>     Characters to avoid example: \x00\xff]'
  {-n,--nopsled}'[<length>   Prepend a nopsled of \[length\] size on to the payload]'
  {-s,--space}'[<length>   The maximum size of the resulting payload]'
  '--encoder-space[<length>   The maximum size of the encoded payload (defaults to the -s value)]'
  {-i,--iterations}'[<count>    The number of times to encode the payload]'
  {-c,--add-code}'[<path>     Specify an additional win32 shellcode file to include]'
  {-x,--template}'[<path>     Specify a custom executable file to use as a template]'
  {-k,--keep}'[preserve the --template behaviour and inject the payload as a new thread]'
  {-v,--var-name}'[<value>    Specify a custom variable name to use for certain output formats]'
  {-t,--timeout}'[<second>   The number of seconds to wait when reading the payload from STDIN (default 30, 0 to disable)]'
  {-h,--help}'[show this message]'
  '*:filename:_files'
)

_arguments -s $arguments
