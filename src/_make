#compdef make

local arguments

arguments=(
  {-b,-m}'[ignored for compatibility.]'
  {-B,--always-make}'[unconditionally make all targets.]'
  {-C,--directory}'[change to DIRECTORY before doing anything.]'
  '-d[print lots of debugging information.]'
  '--debug[print various types of debugging information.]'
  {-e,--environment-overrides}'[environment variables override makefiles.]'
  '--eval[evaluate STRING as a makefile statement.]'
  {-f,--file,--makefile}'[read FILE as a makefile.]'
  '(- * :)'{-h,--help}'[print this message and exit.]'
  {-i,--ignore-errors}'[ignore errors from recipes.]'
  {-I,--include-dir}'[search DIRECTORY for included makefiles.]'
  {-j,--jobs}'[allow N jobs at once; infinite jobs with no arg.]'
  {-k,--keep-going}'[keep going when some targets cant be made.]'
  {-l,--load-average,--max-load}'[dont start multiple jobs unless load is below N.]'
  {-L,--check-symlink-times}'[use the latest mtime between symlinks and target.]'
  {-n,--just-print,--dry-run,--recon}'[dont actually run any recipe; just print them.]'
  {-o,--old-file,--assume-old}'[consider FILE to be very old and dont remake it.]'
  {-O,--output-sync}'[synchronize output of parallel jobs by TYPE.]'
  {-p,--print-data-base}'[print makes internal database.]'
  {-q,--question}'[run no recipe; exit status says if up to date.]'
  {-r,--no-builtin-rules}'[disable the built-in implicit rules.]'
  {-R,--no-builtin-variables}'[disable the built-in variable settings.]'
  {-s,--silent,--quiet}'[dont echo recipes.]'
  {-S,--no-keep-going,--stop}'[turns off -k.]'
  {-t,--touch}'[touch targets instead of remaking them.]'
  '--trace[print tracing information.]'
  {-v,--version}'[print the version number of make and exit.]'
  {-w,--print-directory}'[print the current directory.]'
  '--no-print-directory[turn off -w, even if it was turned on implicitly.]'
  {-W,--what-if,--new-file,--assume-new}'[consider FILE to be infinitely new.]'
  '--warn-undefined-variables[warn when an undefined variable is referenced.]'
  '*:filename:_files'
)

_arguments -s $arguments
