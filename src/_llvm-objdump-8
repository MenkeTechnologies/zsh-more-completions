#compdef llvm-objdump-8

local arguments

arguments=(
  '-color[- Use colors in output (default=autodetect)]'
  '-aarch64-neon-syntax[- Choose style of NEON code to emit from AArch64 backend:]'
  '-all-headers[- Display all available header information]'
  '-amdgpu-dpp-combine[- Enable DPP combiner]'
  '-amdgpu-dump-hsa-metadata[- Dump AMDGPU HSA Metadata]'
  '-amdgpu-enable-global-sgpr-addr[- Enable use of SGPR regs for GLOBAL LOAD/STORE instructions]'
  '-amdgpu-enable-merge-m0[- Merge and hoist M0 initializations]'
  '-amdgpu-sdwa-peephole[- Enable SDWA peepholer]'
  '-amdgpu-spill-sgpr-to-smem[- Use scalar stores to spill SGPRs if supported by subtarget]'
  '-amdgpu-verify-hsa-metadata[- Verify AMDGPU HSA Metadata]'
  '-amdgpu-vgpr-index-mode[- Use GPR indexing mode instead of movrel for vector indexing]'
  '-arch[- architecture(s) from a Mach-O file to dump]'
  '-arch-name[- Target arch to disassemble for, see -version for available targets]'
  '-archive-headers[- Display archive header information]'
  '-archive-member-offsets[- Print the offset to each archive member for Mach-O archives (requires -macho and -archive-headers)]'
  '-arm-add-build-attributes[-]'
  '-arm-implicit-it[- Allow conditional instructions outdside of an IT block]'
  '-atomic-counter-update-promoted[- Do counter update using atomic fetch add for promoted counters only]'
  '-bind[- Display mach-o binding info]'
  '-bounds-checking-single-trap[- Use one trap block per function]'
  '-cost-kind[- Target cost kind]'
  '-cvp-dont-process-adds[-]'
  '-data-in-code[- Print the data in code table for Mach-O objects (requires -macho)]'
  '-demangle[- Demangle symbols names]'
  '-df[- List of functions to disassemble]'
  '-dis-symname[- disassemble just this symbols instructions (requires -macho)]'
  '-disable-promote-alloca-to-lds[- Disable promote alloca to LDS]'
  '-disable-promote-alloca-to-vector[- Disable promote alloca to vector]'
  '-disassemble[- Display assembler mnemonics for the machine instructions]'
  '-disassemble-all[- Display assembler mnemonics for the machine instructions]'
  '-disassemble-zeroes[- Do not skip blocks of zeroes when disassembling]'
  '-do-counter-promotion[- Do counter register promotion]'
  '-dsym[- Use .dSYM file for debug info]'
  '-dwarf[- Dump of dwarf debug sections:]'
  '-dylib-id[- Print the shared librarys id for the dylib Mach-O file (requires -macho)]'
  '-dylibs-used[- Print the shared libraries used for linked Mach-O files (requires -macho)]'
  '-dynamic-reloc[- Display the dynamic relocation entries in the file]'
  '-emscripten-cxx-exceptions-whitelist[- The list of function names in which Emscripten-style exception handling is enabled (see emscripten EMSCRIPTEN_CATCHING_WHITELIST options)]'
  '-enable-cse-in-irtranslator[- Should enable CSE in irtranslator]'
  '-enable-cse-in-legalizer[- Should enable CSE in Legalizer]'
  '-enable-emscripten-cxx-exceptions[- WebAssembly Emscripten-style exception handling]'
  '-enable-emscripten-sjlj[- WebAssembly Emscripten-style setjmp/longjmp handling]'
  '-enable-gvn-memdep[-]'
  '-enable-load-pre[-]'
  '-enable-loop-simplifycfg-term-folding[-]'
  '-enable-name-compression[- Enable name string compression]'
  '-expensive-combines[- Enable expensive instruction combines]'
  '-exports-trie[- Display mach-o exported symbols]'
  '-fault-map-section[- Display contents of faultmap section]'
  '-file-headers[- Display the contents of the overall file header]'
  '-full-contents[- Display the content of each section]'
  '-full-leading-addr[- Print full leading address]'
  '-g[- Print line information from debug info if available]'
  '-gpsize[- Global Pointer Addressing Size. The default size is 8.]'
  '-hash-based-counter-split[- Rename counter variable of a comdat function based on cfg hash]'
  '-import-all-index[- Import all external functions in index.]'
  '-indirect-symbols[- Print indirect symbol table for Mach-O objects (requires -macho)]'
  '-info-plist[- Print the info plist section as strings for Mach-O objects (requires -macho)]'
  '-instcombine-code-sinking[- Enable code sinking]'
  '-instcombine-guard-widening-window[- How wide an instruction window to bypass looking for another guard]'
  '-instcombine-max-num-phis[- Maximum number phis to handle in intptr/ptrint folding]'
  '-instcombine-maxarray-size[- Maximum array size considered when doing a combine]'
  '-instrprof-atomic-counter-update-all[- Make all profile counter updates atomic (for testing only)]'
  '-internalize-public-api-file[- A file containing list of symbol names to preserve]'
  '-internalize-public-api-list[- A list of symbol names to preserve]'
  '-iterative-counter-promotion[- Allow counter promotion across the whole loop nest.]'
  '-lazy-bind[- Display mach-o lazy binding info]'
  '-line-numbers[- Display source line numbers with disassembly. Implies disassemble object]'
  '-link-opt-hints[- Print the linker optimization hints for Mach-O objects (requires -macho)]'
  '-lto-pass-remarks-output[- Output filename for pass remarks]'
  '-macho[- Use MachO specific object file parser]'
  '-mattr[1,+a2,-a3,...> - Target specific attributes]'
  '-max-counter-promotions[- Max number of allowed counter promotions]'
  '-max-counter-promotions-per-loop[- Max number counter promotions per loop to avoid increasing register pressure too much]'
  '-mcpu[- Target a specific cpu type (-mcpu=help for details)]'
  '-memop-size-large[- Set large value thresthold in memory intrinsic size profiling. Value of 0 disables the large value profiling.]'
  '-memop-size-range[- Set the range of size in memory intrinsic calls to be profiled precisely, in a format of <start_val>:<end_val>]'
  '-merror-missing-parenthesis[- Error for missing parenthesis around predicate registers]'
  '-merror-noncontigious-register[- Error for register names that arent contigious]'
  '-mhvx[- Enable Hexagon Vector eXtensions]'
  '-mips-compact-branches[- MIPS Specific: Compact branch policy.]'
  '-mips16-constant-islands[- Enable mips16 constant islands.]'
  '-mips16-hard-float[- Enable mips16 hard float.]'
  '-mno-compound[- Disable looking for compound instructions for Hexagon]'
  '-mno-fixup[- Disable fixing up resolved relocations for Hexagon]'
  '-mno-ldc1-sdc1[- Expand double precision loads and stores to their single precision counterparts]'
  '-mno-pairing[- Disable looking for duplex instructions for Hexagon]'
  '-mwarn-missing-parenthesis[- Warn for missing parenthesis around predicate registers]'
  '-mwarn-noncontigious-register[- Warn for register names that arent contigious]'
  '-mwarn-sign-mismatch[- Warn for mismatching a signed and unsigned value]'
  '-no-discriminators[- Disable generation of discriminator information.]'
  '-no-leading-addr[- Print no leading address]'
  '-no-leading-headers[- Print no leading headers]'
  '-no-show-raw-insn[- When disassembling instructions, do not print the instruction bytes.]'
  '-no-symbolic-operands[- do not symbolic operands when disassembling (requires -macho)]'
  '-non-verbose[- Print the info for Mach-O objects in non-verbose or numeric form (requires -macho)]'
  '-nvptx-sched4reg[- NVPTX Specific: schedule for register pressue]'
  '-objc-meta-data[- Print the Objective-C runtime meta data for Mach-O files (requires -macho)]'
  '-print-imm-hex[- Use hex format for immediate values]'
  '-private-header[- Display only the first format specific file header]'
  '-private-headers[- Display format specific file headers]'
  '-r[- Alias for --reloc]'
  '-r600-ir-structurize[- Use StructurizeCFG IR pass]'
  '-raw-clang-ast[- Dump the raw binary contents of the clang AST section]'
  '-rdf-dump[-]'
  '-rdf-limit[-]'
  '-rebase[- Display mach-o rebasing info]'
  '-reloc[- Display the relocation entries in the file]'
  '-safepoint-ir-verifier-print-only[-]'
  '-sample-profile-check-record-coverage[- Emit a warning if less than N% of records in the input profile are matched to the IR.]'
  '-sample-profile-check-sample-coverage[- Emit a warning if less than N% of samples in the input profile are matched to the IR.]'
  '-sample-profile-max-propagate-iterations[- Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.]'
  '-section[- Operate on the specified sections only. With -macho dump segment,section]'
  '-section-headers[- Display summaries of the headers for each section.]'
  '-source[- Display source inlined with disassembly. Implies disassemble object]'
  '-speculative-counter-promotion-max-exiting[- The max number of exiting blocks of a loop to allow speculative counter promotion]'
  '-speculative-counter-promotion-to-loop[- When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter update can be further/iteratively promoted into an acyclic region.]'
  '-start-address[- Disassemble beginning at address]'
  '-stop-address[- Stop disassembly at address]'
  '-summary-file[- The summary file to use for function importing.]'
  '-syms[- Display the symbol table]'
  '-t[- Alias for --syms]'
  '-threads[-]'
  '-triple[- Target triple to disassemble for, see -version for available targets]'
  '-universal-headers[- Print Mach-O universal headers (requires -macho)]'
  '-unwind-info[- Display unwind information]'
  '-verify-region-info[- Verify region info (time consuming)]'
  '-vp-counters-per-site[- The average number of profile counters allocated per value profiling site.]'
  '-vp-static-alloc[- Do static counter allocation for value profiler]'
  '-weak-bind[- Display mach-o weak binding info]'
  '-help[- Display available options (-help-hidden for more)]'
  '-help-list[- Display list of available options (-help-list-hidden for more)]'
  '-version[- Display the version of this program]'
  '*:filename:_files'
)

_arguments -s $arguments
