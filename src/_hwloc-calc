#compdef hwloc-calc

local arguments

arguments=(
  '--number-of[]'
  '-N[report the number of objects intersecting the CPU set]'
  '--intersect[]'
  '-I[report the indexes of object intersecting the CPU set]'
  '--hierarchical[1>.<type2>...]'
  '-H[1>.<type2>... Find the list of objects intersecting the CPU set and]'
  '--largest[report the list of largest objects in the CPU set]'
  {-l,--logical}'[use logical object indexes (default)]'
  {-p,--physical}'[use physical object indexes]'
  {--li,--logical-input}'[use logical indexes for input (default)]'
  {--lo,--logical-output}'[use logical indexes for output (default)]'
  {--pi,--physical-input}'[use physical indexes for input]'
  {--po,--physical-output}'[use physical indexes for output]'
  '--sep[use separator <sep> in the output]'
  '--taskset[use taskset-specific format when displaying cpuset strings]'
  '--single[singlify the output to a single CPU]'
  '--restrict[restrict the topology to processors listed in <cpuset>]'
  '--whole-system[do not consider administration limitations]'
  '--input[file>]'
  '-i[file> Read topology from XML file <path>]'
  '--input[]'
  '-i[read topology from chroot containing the /proc and /sys]'
  '--input[2 2"]'
  '-i[2 2" Simulate a fake hierarchy, here with 2 NUMA nodes of 2]'
  '--input-format[]'
  '--if[enforce input format among xml, fsroot, synthetic]'
  {-q,--quiet}'[hide non-fatal error messages]'
  {-v,--verbose}'[show verbose messages]'
  '--version[report version and exit]'
  '*:filename:_files'
)

_arguments -s $arguments
