#compdef srun

local arguments

arguments=(
  {-A,--account}'[charge job to specified account]'
  '--acctg-freq[accounting and profiling sampling]:interval:'
  '--bb[burst buffer specifications]'
  '--bbf[burst buffer specification file]'
  '--bcast[copy executable file to compute nodes]'
  '--begin[defer job until HH:MM MM/DD/YY]'
  {-c,--cpus-per-task}'[number of cpus required per task]'
  '--checkpoint[job step checkpoint interval]'
  '--checkpoint-dir[directory to store job step checkpoint image]'
  '--comment[arbitrary comment]'
  '--compress[data compression library used with --bcast]'
  '--cpu-freq[requested cpu frequency (and governor)]'
  {-d,--dependency}'[defer job until condition on jobid is satisfied]'
  '--deadline[remove the job if no ending possible before]'
  '--delay-boot[delay boot for desired node features]'
  {-D,--chdir}'[change remote current working directory]'
  '--export[environment variables passed to launcher with]'
  {-e,--error}'[location of stderr redirection]'
  '--epilog[run "program" after launching job step]'
  {-E,--preserve-env}'[env vars for node and task counts override]'
  '--get-user-env[used by Moab. See srun man page.]'
  '--gres[required generic resources]'
  '--gres-flags[flags related to GRES management]'
  {-H,--hold}'[submit job in held state]'
  {-i,--input}'[location of stdin redirection]'
  {-I,--immediate}'[exit if resources not available in "secs"]'
  '--jobid[run under already allocated job]'
  {-J,--job-name}'[name of job]'
  {-k,--no-kill}'[do not kill job on node failure]'
  {-K,--kill-on-bad-exit}'[kill the job if any task terminates with a]'
  {-l,--label}'[prepend task number to lines of stdout/err]'
  '--launch-cmd[print external launcher command line if not SLURM]'
  '--launcher-opts[options for the external launcher command if not]'
  {-L,--licenses}'[required license, comma separated]'
  {-M,--clusters}'[comma separated list of clusters to issue]'
  {-m,--distribution}'[distribution method for processes to nodes]'
  '--mail-type[notify on state change: BEGIN, END, FAIL or ALL]'
  '--mail-user[who to send email notification for job state]'
  '--mcs-label[mcs label if mcs plugin mcs/group is used]'
  '--mpi[type of MPI being used]'
  '--multi-prog[if set the program name specified is the]'
  {-n,--ntasks}'[number of tasks to run]'
  '--nice[decrease scheduling priority by value]'
  '--ntasks-per-node[number of tasks to invoke on each node]'
  {-N,--nodes}'[number of nodes on which to run (N = min\[-max\])]'
  {-o,--output}'[location of stdout redirection]'
  {-O,--overcommit}'[overcommit resources]'
  '--pack-group[pack job allocation(s) in which to launch]'
  {-p,--partition}'[partition requested]'
  '--power[power management options]'
  '--priority[set the priority of the job to value]'
  '--prolog[run "program" before launching job step]'
  '--profile[enable acct_gather_profile for detailed data]'
  '--propagate[propagate all \[or specific list of\] rlimits]'
  '--pty[run task zero in pseudo terminal]'
  '--quit-on-interrupt[quit on single Ctrl-C]'
  {-q,--qos}'[quality of service]'
  {-Q,--quiet}'[quiet mode (suppress informational messages)]'
  '--reboot[reboot block before starting job]'
  {-r,--relative}'[run job step relative to node n of allocation]'
  '--restart-dir[directory of checkpoint image files to restart]'
  {-s,--oversubscribe}'[over-subscribe resources with other jobs]'
  {-S,--core-spec}'[count of reserved cores]'
  '--signal[@time\] send signal when time limit within time seconds]'
  '--slurmd-debug[slurmd debug level]'
  '--spread-job[spread job across as many nodes as possible]'
  '--switches[{@max-time-to-wait}]'
  '--task-epilog[run "program" after launching task]'
  '--task-prolog[run "program" before launching task]'
  '--thread-spec[count of reserved threads]'
  {-T,--threads}'[set srun launch fanout]'
  {-t,--time}'[time limit]'
  '--time-min[minimum time limit (if distinct)]'
  {-u,--unbuffered}'[do not line-buffer stdout/err]'
  '--use-min-nodes[if a range of node counts is given, prefer the]'
  {-v,--verbose}'[verbose mode (multiple -vs increase verbosity)]'
  {-W,--wait}'[seconds to wait after first task exits]'
  '--wckey[wckey to run job under]'
  {-X,--disable-status}'[disable Ctrl-C status feature]'
  '--cluster-constraint[specify a list of cluster-constraints]'
  '--contiguous[demand a contiguous range of nodes]'
  {-C,--constraint}'[specify a list of constraints]'
  '--mem[minimum amount of real memory]'
  '--mincpus[minimum number of logical processors (threads)]'
  '--reservation[allocate resources from named reservation]'
  '--tmp[minimum amount of temporary disk]'
  {-w,--nodelist}'[... request a specific list of hosts]'
  {-x,--exclude}'[... exclude a specific list of hosts]'
  {-Z,--no-allocate}'[dont allocate nodes (must supply -w)]'
  '--exclusive[allocate nodes in exclusive mode when]'
  '--exclusive[allocate nodes in exclusive mode when]'
  '--mem-per-cpu[maximum amount of real memory per allocated]'
  {--mem,--mem-per-cpu,--mem}'[specified.]'
  '--resv-ports[reserve communication ports]'
  {-B,--extra-node-info}'[expands to:]'
  '--sockets-per-node[number of sockets per node to allocate]'
  '--cores-per-socket[number of cores per socket to allocate]'
  '--threads-per-core[number of threads per core to allocate]'
  '--ntasks-per-core[number of tasks to invoke on each core]'
  '--ntasks-per-socket[number of tasks to invoke on each socket]'
  '(- * :)'{-h,--help}'[show this help message]'
  '--usage[display brief usage message]'
  {-V,--version}'[output version information and exit]'
  '*:filename:_files'
)

_arguments -s $arguments
