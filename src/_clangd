#compdef clangd

local arguments

arguments=(
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '--compile-commands-dir[- Specify a path to look for compile_commands.json. If path is invalid, clangd will look in the current directory and parent paths of each source file]'
  '--query-driver[- Comma separated list of globs for white-listing gcc-compatible drivers that are safe to execute. Drivers matching any of these globs will be used to extract system includes. e.g. /usr/bin/**/clang-*,/path/to/repo/**/g++-*]'
  '--all-scopes-completion[- If set to true, code completion will include index symbols that are not defined in the scopes (e.g. namespaces) visible from the code completion point. Such completions can insert scope qualifiers]'
  '--background-index[- Index project code in the background and persist index on disk.]'
  '--clang-tidy[- Enable clang-tidy diagnostics]'
  '--clang-tidy-checks[- List of clang-tidy checks to run (this will override .clang-tidy files). Only meaningful when -clang-tidy flag is on]'
  '--completion-style[- Granularity of code completion suggestions]'
  '--fallback-style[- clang-format style to apply by default when no .clang-format file is found]'
  '--header-insertion[- Add #include directives when accepting code completions]'
  '--header-insertion-decorators[- Prepend a circular dot or space before the completion label, depending on whether an include line will be inserted or not]'
  '--limit-results[- Limit the number of results returned by clangd. 0 means no limit (default=100)]'
  '--suggest-missing-includes[- Attempts to fix diagnostic errors caused by missing includes using index]'
  '-j[- Number of async workers used by clangd. Background index also uses this many workers.]'
  '--pch-storage[- Storing PCHs in memory increases memory usages, but may improve performance]'
  '--log[- Verbosity of log messages written to stderr]'
  '--offset-encoding[- Force the offsetEncoding used for character positions. This bypasses negotiation via client capabilities]'
  '--pretty[- Pretty-print JSON output]'
  '*:filename:_files'
)

_arguments -s $arguments
