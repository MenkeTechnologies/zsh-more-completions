#compdef dartdoc

local arguments

arguments=(
  '--ambiguous-reexport-scorer-min-confidence[minimum scorer confidence to suppress warning on ambiguous reexport.]'
  '--category-order[A list of categories (not package names) to place first when grouping symbols on dartdocs sidebar. Unmentioned categories are sorted after these.]'
  '--example-path-prefix[prefix for @example paths.]'
  '--exclude[library names to ignore.]'
  '--exclude-packages[package names to ignore.]'
  '--include[library names to generate docs for.]'
  '--include-external[additional (external) dart files to include; use "dir/fileName", as in lib/material.dart.]'
  '--inject-html[allow the use of the {@inject-html} directive to inject raw HTML into dartdoc output.]'
  '--input[path to source directory]'
  '--link-to-hosted[specify URLs for hosted pub packages]'
  '--link-to-sdks[specify URLs for SDKs.]'
  '--output[path to output directory.]'
  '--package-order[A list of package names to place first when grouping libraries in packages. Unmentioned packages are sorted after these.]'
  '--sdk-docs[generate ONLY the docs for the Dart SDK.]'
  '--sdk-dir[path to the SDK directory.]'
  '--show-warnings[display all warnings.]'
  '--use-categories[display categories in the sidebar of packages]'
  '(- * :)'{-h,--help}'[show command help.]'
  '--version[display the version for dartdoc.]'
  '--show-progress[display progress indications to console stdout]'
  '--favicon[A path to a favicon for the generated docs.]'
  '--footer[paths to footer files containing HTML text.]'
  '--footer-text[paths to footer-text files (optional text next to the package name and version).]'
  '--header[paths to header files containing HTML text.]'
  '--hosted-url[URL where the docs will be hosted (used to generate the sitemap).]'
  '--pretty-index-json[generates `index.json` with indentation and newlines. The file is larger, but its also easier to diff.]'
  '--rel-canonical-prefix[if provided, add a rel="canonical" prefixed with provided value. Consider using if]'
  '*:filename:_files'
)

_arguments -s $arguments
