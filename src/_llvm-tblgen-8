#compdef llvm-tblgen-8

local arguments

arguments=(
  '-color[- Use colors in output (default=autodetect)]'
  '-D[name> - Name of the macro to be defined]'
  '-I[- Directory of include files]'
  '-d[- Dependency filename]'
  '-print-records[- Print all records to stdout (default)]'
  '-dump-json[- Dump all records as machine-readable JSON]'
  '-gen-emitter[- Generate machine code emitter]'
  '-gen-register-info[- Generate registers and register classes info]'
  '-gen-instr-info[- Generate instruction descriptions]'
  '-gen-instr-docs[- Generate instruction documentation]'
  '-gen-callingconv[- Generate calling convention descriptions]'
  '-gen-asm-writer[- Generate assembly writer]'
  '-gen-disassembler[- Generate disassembler]'
  '-gen-pseudo-lowering[- Generate pseudo instruction lowering]'
  '-gen-compress-inst-emitter[- Generate RISCV compressed instructions.]'
  '-gen-asm-matcher[- Generate assembly instruction matcher]'
  '-gen-dag-isel[- Generate a DAG instruction selector]'
  '-gen-dfa-packetizer[- Generate DFA Packetizer for VLIW targets]'
  '-gen-fast-isel[- Generate a "fast" instruction selector]'
  '-gen-subtarget[- Generate subtarget enumerations]'
  '-gen-intrinsic-enums[- Generate intrinsic enums]'
  '-gen-intrinsic-impl[- Generate intrinsic information]'
  '-gen-tgt-intrinsic-enums[- Generate target intrinsic enums]'
  '-gen-tgt-intrinsic-impl[- Generate target intrinsic information]'
  '-print-enums[- Print enum values for a class]'
  '-print-sets[- Print expanded sets for testing DAG exprs]'
  '-gen-opt-parser-defs[- Generate option definitions]'
  '-gen-ctags[- Generate ctags-compatible index]'
  '-gen-attrs[- Generate attributes]'
  '-gen-searchable-tables[- Generate generic binary-searchable table]'
  '-gen-global-isel[- Generate GlobalISel selector]'
  '-gen-x86-EVEX2VEX-tables[- Generate X86 EVEX to VEX compress tables]'
  '-gen-x86-fold-tables[- Generate X86 fold tables]'
  '-gen-register-bank[- Generate registers bank descriptions]'
  '-gen-exegesis[- Generate llvm-exegesis tables]'
  '-o[- Output filename]'
  '-help[- Display available options (-help-hidden for more)]'
  '-help-list[- Display list of available options (-help-list-hidden for more)]'
  '-version[- Display the version of this program]'
  '-match-prefix[- Only match instructions with the given prefix]'
  '-asmparsernum[- Make -gen-asm-parser emit assembly parser #N]'
  '-asmwriternum[- Make -gen-asm-writer emit assembly writer #N]'
  '-instrument-coverage[- Generates tables to help identify patterns matched]'
  '-omit-comments[- Do not generate comments]'
  '-gisel-coverage-file[- Specify file to retrieve coverage information from]'
  '-instrument-gisel-coverage[- Generate coverage instrumentation for GlobalISel]'
  '-optimize-match-table[- Generate an optimized version of the match table]'
  '-warn-on-skipped-patterns[- Explain why a pattern was skipped for inclusion in the GlobalISel selector]'
  '-register-info-debug[- Dump register information to help debugging]'
  '-class[name> - Print Enum list for this class]'
  '*:filename:_files'
)

_arguments -s $arguments
