#compdef pkcs15-tool

local arguments

arguments=(
  '--version[print OpenSC package version]'
  '--list-info[list card information]'
  '--list-applications[list the on-card PKCS#15 applications]'
  {-r,--read-certificate}'[read certificate with ID <arg>]'
  {-c,--list-certificates}'[list certificates]'
  {-R,--read-data-object}'[reads data object with OID, applicationName or label <arg>]'
  '--raw[outputs raw 8 bit data to stdout. File output will not be affected by this, it always uses raw mode.]'
  {-C,--list-data-objects}'[list data objects]'
  '--list-pins[list PIN codes]'
  '--list-secret-keys[list secret keys]'
  {-s,--short}'[output lists in compact format]'
  {-D,--dump}'[list all card objects]'
  {-u,--unblock-pin}'[unblock PIN code]'
  '--change-pin[change PIN or PUK code]'
  {-k,--list-keys}'[list private keys]'
  '--list-public-keys[list public keys]'
  '--read-public-key[reads public key with ID <arg>]'
  '--read-ssh-key[reads public key with ID <arg>, outputs ssh format]'
  '--rfc4716[outputs the public key in RFC 4716 format (requires --read-ssh-key)]'
  {-T,--test-update}'[test if the card needs a security update]'
  {-U,--update}'[update the card with a security update]'
  '--reader[uses reader number <arg>]'
  '--pin[specify PIN]'
  '--new-pin[specify New PIN (when changing or unblocking)]'
  '--puk[specify Unblock PIN]'
  '--verify-pin[verify PIN after card binding (without auth-id the first non-SO, non-Unblock PIN will be verified)]'
  '--test-session-pin[equivalent to --verify-pin with additional session PIN generation]'
  {-o,--output}'[outputs to file <arg>]'
  '--no-cache[disable card caching]'
  '--clear-cache[clear card caching]'
  {-a,--auth-id}'[the auth ID of the PIN to use]'
  '--aid[specify AID of the on-card PKCS#15 application to bind to (in hexadecimal form)]'
  {-w,--wait}'[wait for card insertion]'
  {-v,--verbose}'[verbose operation. Use several times to enable debug output.]'
  '--use-pinpad[do not prompt the user; if no PINs supplied, pinpad will be used.]'
  '*:filename:_files'
)

_arguments -s $arguments
