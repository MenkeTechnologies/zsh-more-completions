#compdef cmis-client

local arguments

arguments=(
  '--help[produce help message and exists]'
  {-v,--verbose}'[show loads of useful messages for debugging]'
  '--url[URL of the binding of the server]'
  {-r,--repository}'[arg    Name of the repository to use]'
  {-u,--username}'[arg      Username used to authenticate to the repository]'
  {-p,--password}'[arg      Password used to authenticate to the repository]'
  '--no-ssl-check[disable the verification of SSL certificates. This]'
  '--proxy[HTTP proxy url to override the system settings]'
  '--noproxy[coma separated list if host and domain names not]'
  '--proxy-username[username to authenticate on the proxy]'
  '--proxy-password[password to authenticate on the proxy]'
  '--oauth2-client-id[OAuth2 application client_id]'
  '--oauth2-client-secret[OAuth2 application client_secret]'
  '--oauth2-auth-url[URL to authenticate in the OAuth2 flow]'
  '--oauth2-token-url[URL to convert code to tokens in the OAuth2 flow]'
  '--oauth2-redirect-uri[redirect URI indicating that the authentication is]'
  '--oauth2-scope[the authentication scope in OAuth2]'
  '--oauth2-auth-code[the authentication code required to get the access]'
  '--input-file[file to push to the repository]'
  '--input-type[mime type of the file to push to the repository]'
  '--input-name[name of the file to push to the repository(may be]'
  '--object-type[CMIS type of the object to create]'
  '--object-property[under the form prop-id=prop-value, defines a]'
  {-m,--message}'[arg       Check in message]'
  '--major[the version to create during the check in will be]'
  '--stream-id[streamId of the rendition to get content.]'
  '*:filename:_files'
)

_arguments -s $arguments
