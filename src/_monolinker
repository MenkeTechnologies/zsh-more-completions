#compdef monolinker

local arguments

arguments=(
  '--about[about the Mono CIL Linker]'
  '--version[print the version number of the Mono CIL Linker]'
  '--skip-unresolved[ignore unresolved types, methods, and assemblies (true or false)]'
  '--verbose[log messages indicating progress and warnings]'
  '--dependencies-file[the dependencies file path, if unset the default path is used: <output directory>/linker-dependencies.xml.gz]'
  '--dump-dependencies[dependencies for the linker analyzer tool]'
  '--reduced-tracing[reduces dependency output related to assemblies that will not be modified]'
  '--used-attrs-only[attributes on types, methods, etc will be removed if the attribute type is not used]'
  '--strip-security[in linked assemblies, attributes on assemblies, types, and methods related to security will be removed]'
  '--strip-resources[remove link xml resources that were processed (true or false), default to true]'
  '--exclude-feature[any code which has feature-name dependency will be removed]'
  '-out[specify the output directory, default to `output]'
  '-c[action on the core assemblies, skip, copy, copyused, addbypassngen, addbypassngenused or link, default to skip]'
  '-u[action on the user assemblies, skip, copy, copyused, addbypassngen, addbypassngenused or link, default to link]'
  '-p[action per assembly]'
  '-s[add a new step to the pipeline.]'
  '-t[keep assemblies in which only type forwarders are referenced.]'
  '-d[add a directory where the linker will look for assemblies]'
  '-b[generate debug symbols for each linked module (true or false)]'
  '-g[generate a new unique guid for each linked module (true or false)]'
  '-v[keep members needed by debugger (true or false)]'
  '-l[list of i18n assemblies to copy to the output directory]'
  '-x[link from an XML descriptor]'
  '-a[link from a list of assemblies]'
  '-r[link from a list of assemblies using roots visible outside of the assembly]'
  '-i[link from an mono-api-info descriptor]'
  '-z[include default preservations (true or false), default to true]'
  '*:filename:_files'
)

_arguments -s $arguments
