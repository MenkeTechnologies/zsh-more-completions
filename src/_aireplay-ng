#compdef aireplay-ng

local arguments

arguments=(
  '-b[MAC address, Access Point]'
  '-d[MAC address, Destination]'
  '-s[MAC address, Source]'
  '-m[minimum packet length]'
  '-n[maximum packet length]'
  '-u[frame control, type field]'
  '-v[frame control, subtype field]'
  '-t[frame control, To DS bit]'
  '-f[frame control, From DS bit]'
  '-w[frame control, WEP bit]'
  '-D[disable AP detection]'
  '-x[number of packets per second]'
  '-p[set frame control word (hex)]'
  '-a[set Access Point MAC address]'
  '-c[set Destination MAC address]'
  '-h[set Source MAC address]'
  '-g[change ring buffer size (default: 8)]'
  '-F[choose first matching packet]'
  '-e[set target AP SSID]'
  '-o[number of packets per burst (0=auto, default: 1)]'
  '-q[seconds between keep-alives]'
  '-Q[send reassociation requests]'
  '-y[keystream for shared key auth]'
  '-T[exit after retry fake auth request n time]'
  '-j[inject FromDS packets]'
  '-k[set destination IP in fragments]'
  '-l[set source IP in fragments]'
  '-B[activates the bitrate test]'
  '-i[capture packets from this interface]'
  '-r[extract packets from this pcap file]'
  '-R[disable /dev/rtc usage]'
  '--ignore-negative-one[if the interfaces channel cant be determined]'
  '--deauth-rc[Deauthentication reason code \[0-254\] (Default: 7)]'
  '--deauth[count deauthenticate 1 or all stations (-0)]'
  '--fakeauth[delay fake authentication with AP (-1)]'
  '--interactive[interactive frame selection (-2)]'
  '--arpreplay[standard ARP-request replay (-3)]'
  '--chopchop[decrypt/chopchop WEP packet (-4)]'
  '--fragment[generates valid keystream (-5)]'
  '--caffe-latte[query a client for new IVs (-6)]'
  '--cfrag[fragments against a client (-7)]'
  '--migmode[attacks WPA migration mode (-8)]'
  '--test[tests injection and quality (-9)]'
  '--help[Displays this usage screen]'
  '*:filename:_files'
)

_arguments -s $arguments
