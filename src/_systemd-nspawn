#compdef systemd-nspawn

local arguments

arguments=(
  '(- * :)'{-h,--help}'[show this help]'
  '--version[print version string]'
  {-q,--quiet}'[do not show status information]'
  {-D,--directory}'[root directory for the container]'
  {-i,--image}'[file system device or image for the container]'
  {-b,--boot}'[boot up full system (i.e. invoke init)]'
  {-u,--user}'[run the command under specified user or uid]'
  {-M,--machine}'[set the machine name for the container]'
  '--uuid[set a specific machine UUID for the container]'
  {-S,--slice}'[place the container in the specified slice]'
  '--private-network[disable network in container]'
  '--network-interface[assign an existing network interface to the]'
  '--network-macvlan[create a macvlan network interface based on an]'
  '--network-veth[add a virtual ethernet connection between host]'
  '--network-bridge[add a virtual ethernet connection between host]'
  {-Z,--selinux-context}'[set the SELinux security context to be used by]'
  {-L,--selinux-apifs-context}'[set the SELinux security context to be used by]'
  '--capability[in addition to the default, retain specified]'
  '--drop-capability[drop the specified capability from the default set]'
  '--link-journal[link up guest journal, one of no, auto, guest, host]'
  '-j[equivalent to --link-journal=try-guest]'
  '--read-only[mount the root directory read-only]'
  '--bind[bind mount a file or directory from the host into]'
  '--bind-ro[similar, but creates a read-only bind mount]'
  '--tmpfs[mount an empty tmpfs to the specified directory]'
  '--setenv[VALUE    Pass an environment variable to PID 1]'
  '--share-system[share system namespaces with host]'
  '--register[register container as machine]'
  '--keep-unit[do not register a scope for the machine, reuse]'
  '*:filename:_files'
)

_arguments -s $arguments
