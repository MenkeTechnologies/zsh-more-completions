#compdef pnpx

local arguments

arguments=(
  {--package,-p}'[package to be installed.                       \[string\]]'
  '--cache[location of the npm cache.                     \[string\]]'
  '--always-spawn[always spawn a child process to execute the command.]'
  '--no-install[skip installation if a package is missing.    \[boolean\]]'
  '--userconfig[path to user npmrc.                            \[string\]]'
  {--call,-c}'[execute string as if inside `npm run-script`.  \[string\]]'
  {--shell,-s}'[shell to execute the command with, if any.]'
  '--shell-auto-fallback[generate shell code to use npx as the "command not]'
  '--ignore-existing[ignores existing binaries in $PATH, or in the local]'
  {--quiet,-q}'[suppress output from npx itself. Subcommands will not]'
  {--yes,-y}'[install the package if it is not available.   \[boolean\]]'
  '--no[do not install any new packages.              \[boolean\]]'
  '--npm[npm binary to use for internal operations.]'
  {--node-arg,-n}'[extra node argument when calling a node binary.\[string\]]'
  {--version,-v}'[show version number                           \[boolean\]]'
  {--help,-h}'[show help                                     \[boolean\]]'
  '*:filename:_files'
)

_arguments -s $arguments
