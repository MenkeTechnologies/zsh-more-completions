#compdef crun

# Autogenerated from man page /usr/share/man/man1/crun.1.gz

local arguments

arguments=(
    '--debug[Produce verbose output.]'
    '--log[Define the destination for the error and warning messages generated by crun.]:LOG-DESTINATION'
    '--log-format[Define the format of the log messages. It can either be text, or json.]:FORMAT'
    '--no-pivot[Use chroot(2) instead of pivot_root(2) when creating the container.]'
    '--root[Defines where to store the state for crun containers.]:DIR'
    '--systemd-cgroup[Use systemd for configuring cgroups.]'
    '--cgroup-manager[Specify what cgroup manager must be used.]:MANAGER'
    {-?,--help}'[Print a help list.]'
    '--usage[Print a short usage message.]'
    {-V,--version}'[Print program version.]'
    '--bundle[Path to the OCI bundle, by default it is the current directory.]:PATH'
    '--config[Override the configuration file to use. The default value is config. json.]:FILE'
    '--console-socket[Path to a UNIX socket that will receive the ptmx end of the tty for the contaâ€¦]:SOCKET'
    '--no-new-keyring[Keep the same session key.]'
    '--preserve-fds[Additional number of FDs to pass into the container.]:N'
    '--pid-file[Path to the file that will contain the container process PID.]:PATH'
    '--detach[Detach the container process from the current session.]'
    '--force[Delete the container even if it is still running.]'
    '--regex[Delete all the containers that satisfy the specified regex.]:REGEX'
    '--apparmor[Set the apparmor profile for the process.]:PROFILE'
    '--cwd[Set the working directory for the process to PATH.]:PATH'
    '--cap[Specify an additional capability to add to the process.]:CAP'
    '--cgroup[Specify a sub-cgroup path inside the container cgroup.]:PATH'
    '--env[Specify an environment variable.]:ENV'
    '--no-new-privs[Set the no new privileges value for the process.]'
    '--process[Path to a file containing the process JSON configuration.]:FILE'
    '--process-label[Set the asm process label for the process commonly used with selinux.]:VALUE'
    {-t,--tty}'[Allocate a pseudo TTY.]'
    {-q,--quiet}'[Show only the container ID.]'
    '--all[Kill all the processes in the container.]'
    '--format[Specify the output format. It must be either table or json.]:FORMAT'
    '-b[Path to the root of the bundle dir (default ". ").]'
    '--rootless[Generate a config. json file that is usable by an unprivileged user.]'
    '--blkio-weight[Specifies per cgroup weight.]:VALUE'
    '--cpu-period[CPU CFS period to be used for hardcapping.]:VALUE'
    '--cpu-quota[CPU CFS hardcap limit.]:VALUE'
    '--cpu-rt-period[CPU realtime period to be used for hardcapping.]:VALUE'
    '--cpu-rt-runtime[CPU realtime hardcap limit.]:VALUE'
    '--cpu-share[CPU shares.]:VALUE'
    '--cpuset-cpus[CPU(s) to use.]:VALUE'
    '--cpuset-mems[Memory node(s) to use.]:VALUE'
    '--kernel-memory[Kernel memory limit.]:VALUE'
    '--kernel-memory-tcp[Kernel memory limit for TCP buffer.]:VALUE'
    '--memory[Memory limit.]:VALUE'
    '--memory-reservation[Memory reservation or soft_limit.]:VALUE'
    '--memory-swap[Total memory usage.]:VALUE'
    '--pids-limit[Maximum number of pids allowed in the container.]:VALUE'
    {-r,--resources}'[Path to the file containing the resources to update.]':FILE
    '--image-path[Path for saving CRIU image files.]:DIR'
    '--work-path[Path for saving work files and logs.]:DIR'
    '--leave-running[Leave the process running after checkpointing.]'
    '--tcp-established[Allow open TCP connections.]'
    '--ext-unix-sk[Allow external UNIX sockets.]'
    '--shell-job[Allow shell jobs.]'
    '--ext-unix[Allow external UNIX sockets.]'
    '*:filename:_files'
)
_arguments -s $arguments
