#compdef mvim

local arguments

arguments=(
    '-g[Run using GUI (like "gvim")]'
    '-f[or --nofork Foreground: Dont fork when starting GUI]'
    '-v[Vi mode (like "vi")]'
    '-e[Ex mode (like "ex")]'
    '-E[Improved Ex mode]'
    '-s[Silent (batch) mode (only for "ex")]'
    '-d[Diff mode (like "vimdiff")]'
    '-y[Easy mode (like "evim", modeless)]'
    '-R[Readonly mode (like "view")]'
    '-Z[Restricted mode (like "rvim")]'
    '-m[Modifications (writing files) not allowed]'
    '-M[Modifications in text not allowed]'
    '-b[Binary mode]'
    '-l[Lisp mode]'
    '-C[Compatible with Vi: compatible]'
    '-N[Not fully Vi compatible: nocompatible]'
    '-V[Be verbose \[level N\] \[log messages to fname\]]'
    '-D[Debugging mode]'
    '-n[No swap file, use memory only]'
    '-r[List swap files and exit]'
    '-r[file name) Recover crashed session]'
    '-L[Same as -r]'
    '-A[start in Arabic mode]'
    '-H[Start in Hebrew mode]'
    '-F[Start in Farsi mode]'
    '-T[Set terminal type to <terminal>]'
    '--not-a-term[Skip warning for input/output not being a terminal]'
    '--ttyfail[Exit if input or output is not a terminal]'
    '-u[Use <vimrc> instead of any .vimrc]'
    '-U[Use <gvimrc> instead of any .gvimrc]'
    '--noplugin[Dont load plugin scripts]'
    '-p[Open N tab pages (default: one for each file)]'
    '-o[Open N windows (default: one for each file)]'
    '-O[Like -o but split vertically]'
    '--cmd[Execute <command> before loading any vimrc file]'
    '-c[Execute <command> after loading the first file]'
    '-S[Source file <session> after loading the first file]'
    '-s[Read Normal mode commands from file <scriptin>]'
    '-w[Append all typed commands to file <scriptout>]'
    '-W[Write all typed commands to file <scriptout>]'
    '-x[Edit encrypted files]'
    '--remote[Edit <files> in a Vim server if possible]'
    '--remote-silent[Same, do not complain if there is no server]'
    '--remote-wait[As --remote but wait for files to have been edited]'
    '--remote-wait-silent[Same, do not complain if there is no server]'
    '--remote-tab[\[-wait\]\[-silent\] <files> As --remote but use tab page per file]'
    '--remote-send[Send <keys> to a Vim server and exit]'
    '--remote-expr[Evaluate <expr> in a Vim server and print result]'
    '--serverlist[List available Vim server names and exit]'
    '--servername[Send to/become the Vim server <name>]'
    '--startuptime[Write startup timing messages to <file>]'
    '-i[Use <viminfo> instead of .viminfo]'
    '--clean[nocompatible, Vim defaults, no plugins, no viminfo]'
    '-h[or --help Print Help (this message) and exit]'
    '--version[Print version information and exit]'
    '*:filename:_files'
)

_arguments -s $arguments
