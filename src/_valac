#compdef valac

local arguments

arguments=(
  '--vapidir[... Look for package bindings in DIRECTORY]'
  '--girdir[... Look for .gir files in DIRECTORY]'
  '--metadatadir[... Look for GIR .metadata files in DIRECTORY]'
  '--pkg[... Include binding for PACKAGE]'
  '--vapi[output VAPI file name]'
  '--library[library name]'
  '--shared-library[shared library name used in generated gir]'
  '--gir[.gir GObject-Introspection repository file name]'
  {-b,--basedir}'[base source directory]'
  {-d,--directory}'[change output directory from current working directory]'
  '--version[display version number]'
  '--api-version[display API version number]'
  {-C,--ccode}'[output C code]'
  {-H,--header}'[output C header file]'
  '--use-header[use C header file]'
  '--includedir[directory used to include the C header file]'
  {-h,--internal-header}'[output internal C header file]'
  '--internal-vapi[output vapi with internal api]'
  '--fast-vapi[output vapi without performing symbol resolution]'
  '--use-fast-vapi[use --fast-vapi output during this compile]'
  '--vapi-comments[include comments in generated vapi]'
  '--deps[write make-style dependency information to this file]'
  '--symbols[output symbols file]'
  {-c,--compile}'[compile but do not link]'
  {-o,--output}'[place output in file FILE]'
  {-g,--debug}'[produce debug information]'
  '--thread[enable multithreading support (DEPRECATED AND IGNORED)]'
  '--enable-mem-profiler[enable GLib memory profiler]'
  {-D,--define}'[... Define SYMBOL]'
  '--main[... Use SYMBOL as entry point]'
  '--nostdpkg[do not include standard packages]'
  '--disable-assert[disable assertions]'
  '--enable-checking[enable additional run-time checks]'
  '--enable-deprecated[enable deprecated features]'
  '--hide-internal[hide symbols marked as internal]'
  '--enable-experimental[enable experimental features]'
  '--disable-warnings[disable warnings]'
  '--fatal-warnings[treat warnings as fatal]'
  '--disable-since-check[do not check whether used symbols exist in local packages]'
  '--enable-experimental-non-null[enable experimental enhancements for non-null types]'
  '--enable-gobject-tracing[enable GObject creation tracing]'
  '--cc[use COMMAND as C compiler command]'
  {-X,--Xcc}'[... Pass OPTION to the C compiler]'
  '--pkg-config[use COMMAND as pkg-config command]'
  '--dump-tree[write code tree to FILE]'
  '--save-temps[keep temporary files]'
  '--profile[use the given profile instead of the default]'
  {-q,--quiet}'[do not print messages to the console]'
  {-v,--verbose}'[print additional messages to the console]'
  '--no-color[disable colored output, alias for --color=never]'
  '--color[enable color output, options are always, never, or auto]'
  '--target-glib[.MINOR Target version of glib for code generation]'
  '--gresources[... XML of gresources]'
  '--gresourcesdir[... Look for resources in DIRECTORY]'
  '--enable-version-header[write vala build version in generated files]'
  '--disable-version-header[do not write vala build version in generated files]'
  '--run-args[arguments passed to directly compiled executeable]'
  '--abi-stability[enable support for ABI stability]'
  '*:filename:_files'
)

_arguments -s $arguments
