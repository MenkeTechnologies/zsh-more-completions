#compdef ipython3

local arguments

arguments=(
  '--debug[set log level to logging.DEBUG (maximize logging output)]'
  '--quiet[set log level to logging.CRITICAL (minimize logging output)]'
  '--init[initialize profile with default config files.  This is equivalent]'
  '--autoindent[turn on autoindenting.]'
  '--no-autoindent[turn off autoindenting.]'
  '--automagic[turn on the auto calling of magic commands. Type %%magic at the]'
  '--no-automagic[turn off the auto calling of magic commands.]'
  '--pdb[enable auto calling the pdb debugger after every exception.]'
  '--no-pdb[disable auto calling the pdb debugger after every exception.]'
  '--pprint[enable auto pretty printing of results.]'
  '--no-pprint[disable auto pretty printing of results.]'
  '--color-info[IPython can display information about objects via a set of functions]'
  '--no-color-info[disable using colors for info related things.]'
  '--ignore-cwd[exclude the current working directory from sys.path]'
  '--no-ignore-cwd[include the current working directory in sys.path]'
  '--nosep[eliminate all spacing between prompts.]'
  '--pylab[pre-load matplotlib and numpy for interactive use with]'
  '--matplotlib[configure matplotlib for interactive use with]'
  '--autoedit-syntax[turn on auto editing of files with syntax errors.]'
  '--no-autoedit-syntax[turn off auto editing of files with syntax errors.]'
  '--simple-prompt[force simple minimal prompt using `raw_input`]'
  '--no-simple-prompt[use a rich interactive prompt with prompt_toolkit]'
  '--banner[display a banner upon starting IPython.]'
  '--no-banner[dont display a banner upon starting IPython.]'
  '--confirm-exit[set to confirm when you try to exit IPython with an EOF (Control-D]'
  '--no-confirm-exit[dont prompt the user when exiting.]'
  '--term-title[enable auto setting the terminal title.]'
  '--no-term-title[disable auto setting the terminal title.]'
  '--classic[gives IPython a similar feel to the classic Python prompt.]'
  '--quick[enable quick startup with no config files.]'
  '-i[if running code from the command line, become interactive afterwards.]'
  '--profile-dir[set the profile location directly. This overrides the logic used by the]'
  '--profile[the IPython profile to use.]'
  '--ipython-dir[the name of the IPython directory. This directory is used for logging]'
  '--log-level[set the log level by value or name.]'
  '--config[path to an extra config file to load.]'
  '--autocall[make IPython automatically call any callable object even if you didnt type]'
  '--colors[set the color scheme (NoColor, Neutral, Linux, or LightBG).]'
  '--logfile[the name of the logfile to use.]'
  '--logappend[start logging to the given file in append mode. Use `logfile` to specify a]'
  '-c[execute the given command string.]'
  '-m[run the module as a script.]'
  '--ext[1>...]'
  '--gui[enable GUI event loop integration with any of (asyncio, glut, gtk]'
  '--pylab[pre-load matplotlib and numpy for interactive use]'
  '--matplotlib[configure matplotlib for interactive use with]'
  '--cache-size[set the size of the output cache.  The default is 1000, you can change it]'
  '*:filename:_files'
)

_arguments -s $arguments
