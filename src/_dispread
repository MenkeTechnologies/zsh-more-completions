#compdef dispread

local arguments

arguments=(
  '-v[verbose mode]'
  '-display[choose X11 display name]'
  '-d[m\] Choose the display n from the following list (default 1)]'
  '-dweb[display via a web server at port (default 8080)]'
  '-dcc[display via nth ChromeCast (default 1, ? for list)]'
  '-c[set communication port from the following list (default 1)]'
  '-p[use telephoto mode (ie. for a projector) (if available)]'
  '-k[.cal Load calibration file into display while reading]'
  '-K[.cal Apply calibration file to test values while reading]'
  '-s[save spectral information (default dont save)]'
  '-P[vo,ss\[,vs\] Position test window and scale it]'
  '-F[fill whole screen with black background]'
  '-n[dont set override redirect on test window]'
  '-E[encode the test values for video range 16..235/255]'
  '-Z[quantize test values to fit in nbits]'
  '-J[run instrument calibration first (used rarely)]'
  '-N[disable initial calibration of instrument if possible]'
  '-H[use high resolution spectrum mode (if available)]'
  '-w[disable normalisation of white to Y = 100]'
  '-X[.ccmx Apply Colorimeter Correction Matrix]'
  '-X[.ccss Use Colorimeter Calibration Spectral Samples for calibration]'
  '-Q[choose CIE Observer for spectrometer or CCSS colorimeter data:]'
  '-I[drift compensation, Black: -Ib, White: -Iw, Both: -Ibw]'
  '-Y[override measured refresh rate with rate Hz]'
  '-Y[use non-adaptive integration time mode (if available).]'
  '-Y[dont wait for the instrument to be placed on the display]'
  '-C[" Invoke shell "command" each time a color is set]'
  '-M[" Invoke shell "command" each time a color is measured]'
  '-x[take manually entered XYZ values]'
  '-W[override serial port flow control: n = none, h = HW, x = Xon/Xoff]'
  '-D[print debug diagnostics to stderr]'
  '*:filename:_files'
)

_arguments -s $arguments
