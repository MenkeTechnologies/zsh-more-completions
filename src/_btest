#compdef btest

local arguments

arguments=(
  '--version[show programs version number and exit]'
  {-h,--help}'[show this help message and exit]'
  {-U,--update-baseline}'[create a new baseline from the tests output]'
  {-u,--update-interactive}'[interactively asks whether to update baseline for a]'
  {-d,--diagnostics}'[show diagnostic output for failed tests]'
  {-D,--diagnostics-all}'[show diagnostic output for ALL tests]'
  {-f,--file-diagnostics}'[write diagnostic output for failed tests into file; if]'
  {-v,--verbose}'[show commands as they are executed]'
  {-w,--wait}'[wait for <enter> after each failed (with -d) or all]'
  {-b,--brief}'[outputs only failed tests]'
  {-c,--config}'[configuration file]'
  {-t,--tmp-keep}'[do not delete tmp files created for running tests]'
  {-j,--jobs}'[number of threads running tests in parallel; with no]'
  {-g,--groups}'[execute only tests of given comma-separated list of]'
  {-r,--rerun}'[execute commands for tests that failed last time]'
  {-q,--quiet}'[suppress information output other than about failed]'
  {-x,--xml}'[write a report of test results in JUnit XML format to]'
  {-a,--alternative}'[activate given alternative]'
  {-S,--sphinx}'[indicates that were running from inside Sphinx; for]'
  {-T,--update-times}'[create a new timing baseline for tests being measured]'
  {-R,--documentation}'[output documentation for tests, supported formats:]'
  {-A,--show-all}'[for console output, show one-liners for]'
  {-z,--retries}'[retry failed tests this many times to determine if]'
  '--trace-file[write Chrome tracing file to file; if file exists, it]'
  {-F,--abort-on-failure}'[terminate after first test failure]'
  {-l,--list}'[list available tests instead of executing them]'
  '*:filename:_files'
)

_arguments -s $arguments
