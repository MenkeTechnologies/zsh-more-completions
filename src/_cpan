#compdef cpan

local arguments

arguments=(
  '-a[creates a CPAN.pm autobundle with CPAN::Shell->autobundle.]'
  '-A[\[ module ... \]]'
  '-c[runs a `make clean` in the specified modules directories.]'
  '-C[\[ module ... \]]'
  '-D[\[ module ... \]]'
  '-f[force the specified action, when it normally would have failed. Use]'
  '-F[turn off CPAN.pms attempts to lock anything. You should be careful]'
  '-g[\[ module ... \]]'
  '-G[\[ module ... \]]'
  '-h[print a help message and exit. When you specify "-h", it ignores all]'
  '-i[\[ module ... \]]'
  '-I[load "local::lib" (think like "-I" for loading lib paths). Too bad]'
  '-j[.pm]'
  '-J[dump the configuration in the same format that CPAN.pm uses. This is]'
  '-l[list all installed modules with their versions]'
  '-L[\[ author ... \]]'
  '-m[make the specified modules.]'
  '-M[1,mirror2,...]'
  '-n[do a dry run, but dont actually install anything. (unimplemented)]'
  '-O[show the out-of-date modules.]'
  '-p[ping the configured mirrors and print a report]'
  '-P[find the best mirrors you could be using and use them for the]'
  '-r[recompiles dynamically loaded modules with CPAN::Shell->recompile.]'
  '-s[drop in the CPAN.pm shell. This command does this automatically if]'
  '-t[\[ module ... \]]'
  '-T[do not test modules. Simply install them.]'
  '-u[upgrade all installed modules. Blindly doing this can really break]'
  '-v[print the script version and CPAN.pm version then exit.]'
  '-V[print detailed information about the cpan client.]'
  '-w[UNIMPLEMENTED]'
  '-x[\[ module ... \]]'
  '-X[dump all the namespaces to standard output.]'
  '*:filename:_files'
)

_arguments -s $arguments
