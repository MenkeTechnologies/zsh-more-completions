#compdef ctest3

local arguments

arguments=(
  {-C,--build-config}'[choose configuration to test.]'
  {-V,--verbose}'[enable verbose output from tests.]'
  {-VV,--extra-verbose}'[enable more verbose output from tests.]'
  '--debug[displaying more verbose internals of CTest.]'
  '--output-on-failure[output anything outputted by the test]'
  '--test-output-size-passed[limit the output for passed tests to <size>]'
  '--test-output-size-failed[limit the output for failed tests to <size>]'
  '-F[enable failover.]'
  {-j,--parallel}'[run the tests in parallel using the given]'
  {-Q,--quiet}'[make ctest quiet.]'
  {-O,--output-log}'[output to log file]'
  {-N,--show-only}'[disable actual execution of tests.]'
  {-L,--label-regex}'[run tests with labels matching regular]'
  {-R,--tests-regex}'[run tests matching regular expression.]'
  {-E,--exclude-regex}'[exclude tests matching regular expression.]'
  {-LE,--label-exclude}'[exclude tests with labels matching regular]'
  {-FA,--fixture-exclude-any}'[do not automatically add any tests for]'
  {-FS,--fixture-exclude-setup}'[do not automatically add setup tests for]'
  {-FC,--fixture-exclude-cleanup}'[do not automatically add cleanup tests for]'
  {-D,--dashboard}'[execute dashboard test]'
  '-D[= Define a variable for script mode]:value:'
  {-M,--test-model}'[sets the model for a dashboard]'
  {-T,--test-action}'[sets the dashboard action to perform]'
  '--track[specify the track to submit dashboard to]'
  {-S,--script}'[execute a dashboard for a configuration]'
  {-SP,--script-new-process}'[execute a dashboard for a configuration]'
  {-A,--add-notes}'[add a notes file with submission]'
  '-I[end,Stride,test#,test#|Test file\], --tests-information]'
  {-U,--union}'[take the Union of -I and -R]'
  '--rerun-failed[run only the tests that failed previously]'
  '--repeat-until-fail[require each test to run <n> times without]'
  '--max-width[set the max width for a test name to output]'
  '--interactive-debug-mode[0|1\]]'
  '--no-label-summary[disable timing summary information for]'
  '--no-subproject-summary[disable timing summary information for]'
  '--build-and-test[configure, build and run a test.]'
  '--build-target[specify a specific target to build.]'
  '--build-nocmake[run the build without running cmake first.]'
  '--build-run-dir[specify directory to run programs from.]'
  '--build-two-config[run CMake twice]'
  '--build-exe-dir[specify the directory for the executable.]'
  '--build-generator[specify the generator to use.]'
  '--build-generator-platform[specify the generator-specific platform.]'
  '--build-generator-toolset[specify the generator-specific toolset.]'
  '--build-project[specify the name of the project to build.]'
  '--build-makeprogram[specify the make program to use.]'
  '--build-noclean[skip the make clean step.]'
  '--build-config-sample[A sample executable to use to determine the]'
  '--build-options[add extra options to the build step.]'
  '--test-command[the test to run with the --build-and-test]'
  '--test-timeout[the time limit in seconds, internal use]'
  '--test-load[CPU load threshold for starting new parallel]'
  '--tomorrow-tag[nightly or experimental starts with next day]'
  '--overwrite[overwrite CTest configuration option.]'
  '--extra-submit[;<file>\]]'
  '--force-new-ctest-process[run child CTest instances as new processes]'
  '--schedule-random[use a random order for scheduling tests]'
  '--submit-index[submit individual dashboard tests with]'
  '--timeout[set a global timeout on all tests.]'
  '--stop-time[set a time at which all tests should stop]'
  '--http1[.0 = Submit using HTTP 1.0.]'
  '--no-compress-output[do not compress test output when submitting.]'
  '--print-labels[print all available test labels.]'
  {--help,-help,-usage,-h,-H}'[/? = Print usage information and exit.]'
  {--version,-version}'[/V \[<f>\] = Print version number and exit.]'
  '--help-full[print all help manuals and exit.]'
  '--help-manual[\[<f>\] = Print one help manual and exit.]'
  '--help-manual-list[list help manuals available and exit.]'
  '--help-command[\[<f>\] = Print help for one command and exit.]'
  '--help-command-list[list commands with help available and exit.]'
  '--help-commands[print cmake-commands manual and exit.]'
  '--help-module[\[<f>\] = Print help for one module and exit.]'
  '--help-module-list[list modules with help available and exit.]'
  '--help-modules[print cmake-modules manual and exit.]'
  '--help-policy[\[<f>\] = Print help for one policy and exit.]'
  '--help-policy-list[list policies with help available and exit.]'
  '--help-policies[print cmake-policies manual and exit.]'
  '--help-property[\[<f>\] = Print help for one property and exit.]'
  '--help-property-list[list properties with help available and]'
  '--help-properties[print cmake-properties manual and exit.]'
  '--help-variable[\[<f>\] = Print help for one variable and exit.]'
  '--help-variable-list[list variables with help available and exit.]'
  '--help-variables[print cmake-variables manual and exit.]'
  '*:filename:_files'
)

_arguments -s $arguments
