#compdef p11tool

local arguments

arguments=(
  '--list-tokens[list all available tokens]'
  '--list-token-urls[list the URLs available tokens]'
  '--list-mechanisms[list all available mechanisms in a token]'
  '--initialize[initializes a PKCS #11 token]'
  '--initialize-pin[initializes/Resets a PKCS #11 token user PIN]'
  '--initialize-so-pin[initializes/Resets a PKCS #11 token security officer PIN]'
  '--set-pin[specify the PIN to use on token operations]'
  '--set-so-pin[specify the Security Officers PIN to use on token initialization]'
  '--list-all[list all available objects in a token]'
  '--list-all-certs[list all available certificates in a token]'
  '--list-certs[list all certificates that have an associated private key]'
  '--list-all-privkeys[list all available private keys in a token]'
  '--list-privkeys[an alias for the list-all-privkeys option]'
  '--list-keys[an alias for the list-all-privkeys option]'
  '--list-all-trusted[list all available certificates marked as trusted]'
  '--export[export the object specified by the URL]'
  '--export-stapled[export the certificate object specified by the URL]'
  '--export-chain[export the certificate specified by the URL and its chain of trust]'
  '--export-pubkey[export the public key for a private key]'
  '--info[list information on an available object in a token]'
  '--trusted[an alias for the mark-trusted option]'
  '--distrusted[an alias for the mark-distrusted option]'
  '--generate-rsa[generate an RSA private-public key pair]'
  '--generate-dsa[generate a DSA private-public key pair]'
  '--generate-ecc[generate an ECDSA private-public key pair]'
  '--bits[specify the number of bits for the key generate]'
  '--curve[specify the curve used for EC key generation]'
  '--sec-param[specify the security level]'
  '--set-id[set the CKA_ID (in hex) for the specified by the URL object]'
  '--set-label[set the CKA_LABEL for the specified by the URL object]'
  '--write[writes the loaded objects to a PKCS #11 token]'
  '--delete[deletes the objects matching the given PKCS #11 URL]'
  {-d,--debug}'[enable debugging]'
  {-0,--outfile}'[output file]'
  {-1,--login}'[force (user) login to token]'
  {-2,--so-login}'[force security officer login to token]'
  {-3,--admin-login}'[an alias for the so-login option]'
  {-4,--test-sign}'[tests the signature operation of the provided object]'
  {-5,--generate-random}'[generate random data]'
  {-8,--pkcs8}'[use PKCS #8 format for private keys]'
  {-6,--inder}'[use DER/RAW format for input]'
  {-7,--inraw}'[an alias for the inder option]'
  {-8,--outder}'[use DER format for output certificates, private keys, and DH parameters]'
  {-9,--outraw}'[an alias for the outder option]'
  {-v,--version}'[output version information and exit]'
  '(- * :)'{-h,--help}'[display extended usage information and exit]'
  '*:filename:_files'
)

_arguments -s $arguments
