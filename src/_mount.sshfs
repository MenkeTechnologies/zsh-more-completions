#compdef mount.sshfs

local arguments

arguments=(
  '(- * :)'{-h,--help}'[print help]'
  {-V,--version}'[print version]'
  '-f[foreground operation]'
  '-s[disable multi-threaded operation]'
  '-p[equivalent to -o port=PORT]'
  '-C[equivalent to -o compression=yes]'
  '-F[specifies alternative ssh configuration file]'
  '-1[equivalent to -o ssh_protocol=1]'
  '-o[\[opt...\]        mount options]'
  '-o[reconnect to server]'
  '-o[delay connection to server]'
  '-o[synchronous writes]'
  '-o[synchronous reads (no speculative readahead)]'
  '-o[synchronous readdir]'
  {-d,--debug}'[print some debugging information (implies -f)]'
  {-v,--verbose}'[print ssh replies and messages]'
  '-o[BOOL      enable caching of directory contents (names]'
  '-o[N   sets the maximum size of the directory cache (default: 10000)]'
  '-o[N    sets timeout for directory cache in seconds (default: 20)]'
  '-o[{stat,link,dir}_timeout=N]'
  '-o[N]'
  '-o[N]'
  '-o[enable direct i/o]'
  '-o[LIST     colon separated list of workarounds]'
  '-o[TYPE          user/group ID mapping (default: none)]'
  '-o[FILE        file containing username:remote_uid mappings]'
  '-o[FILE        file containing groupname:remote_gid mappings]'
  '-o[TYPE          with idmap=file, how to handle missing mappings]'
  '-o[CMD     execute CMD instead of ssh]'
  '-o[N      ssh protocol to use (default: 2)]'
  '-o[SERV    path to sftp server or subsystem (default: sftp)]'
  '-o[PORT     directly connect to PORT bypassing ssh]'
  '-o[communicate over stdin and stdout bypassing network]'
  '-o[link(2) will return with errno set to ENOSYS]'
  '-o[transform absolute symlinks to relative]'
  '-o[follow symlinks on the server]'
  '-o[dont check for existence of dir on server]'
  '-o[read password from stdin (only for pam_mount!)]'
  '-o[N         open parallel SSH connections]'
  '-o[VAL          ssh options (see man ssh_config)]'
  '-o[cache files in kernel]'
  '-o[enable caching based on modification times (off)]'
  '-o[M             set file permissions (octal)]'
  '-o[N               set file owner]'
  '-o[N               set file group]'
  '-o[T     cache timeout for names (1.0s)]'
  '-o[T  cache timeout for deleted names (0.0s)]'
  '-o[T      cache timeout for attributes (1.0s)]'
  '-o[T   auto cache timeout for attributes (attr_timeout)]'
  '-o[never forget cached inodes]'
  '-o[T          remember cached inodes for T seconds (0s)]'
  '-o[M1\[:M2...\]  names of modules to push onto filesystem stack]'
  '-o[allow access by all users]'
  '-o[allow access by root]'
  '-o[auto unmount on process termination]'
  '-o[DIR	    prepend this directory to all paths (mandatory)]'
  '-o[transform absolute symlinks to relative]'
  '-o[CHARSET   original encoding of file names (default: UTF-8)]'
  '-o[CHARSET	    new encoding of the file names (default: UTF-8)]'
  '*:filename:_files'
)

_arguments -s $arguments
