#compdef patch

local arguments

arguments=(
  {-p,--strip}'[strip NUM leading components from file names.]'
  {-F,--fuzz}'[set the fuzz factor to LINES for inexact matching.]'
  {-l,--ignore-whitespace}'[ignore white space changes between patch and input.]'
  {-c,--context}'[interpret the patch as a context difference.]'
  {-e,--ed}'[interpret the patch as an ed script.]'
  {-n,--normal}'[interpret the patch as a normal difference.]'
  {-u,--unified}'[interpret the patch as a unified difference.]'
  {-N,--forward}'[ignore patches that appear to be reversed or already applied.]'
  {-R,--reverse}'[assume patches were created with old and new files swapped.]'
  {-i,--input}'[read patch from PATCHFILE instead of stdin.]'
  {-o,--output}'[output patched files to FILE.]'
  {-r,--reject-file}'[output rejects to FILE.]'
  {-D,--ifdef}'[make merged if-then-else output using NAME.]'
  '--merge[merge using conflict markers instead of creating reject files.]'
  {-E,--remove-empty-files}'[remove output files that are empty after patching.]'
  {-Z,--set-utc}'[set times of patched files, assuming diff uses UTC (GMT).]'
  {-T,--set-time}'[likewise, assuming local time.]'
  '--quoting-style[output file names using quoting style WORD.]'
  {-b,--backup}'[back up the original contents of each file.]'
  '--backup-if-mismatch[back up if the patch does not match exactly.]'
  '--no-backup-if-mismatch[back up mismatches only if otherwise requested.]'
  {-V,--version-control}'[use STYLE version control.]'
  {-B,--prefix}'[prepend PREFIX to backup file names.]'
  {-Y,--basename-prefix}'[prepend PREFIX to backup file basenames.]'
  {-z,--suffix}'[append SUFFIX to backup file names.]'
  {-g,--get}'[get files from RCS etc. if positive; ask if negative.]'
  {-t,--batch}'[ask no questions; skip bad-Prereq patches; assume reversed.]'
  {-f,--force}'[like -t, but ignore bad-Prereq patches, and assume unreversed.]'
  {-s,--quiet,--silent}'[work silently unless an error occurs.]'
  '--verbose[output extra information about the work being done.]'
  '--dry-run[do not actually change any files; just print what would happen.]'
  '--posix[conform to the POSIX standard.]'
  {-d,--directory}'[change the working directory to DIR first.]'
  '--reject-format[create context or unified rejects.]'
  '--binary[read and write data in binary mode.]'
  '--read-only[how to handle read-only input files: ignore that they]'
  {-v,--version}'[output version info.]'
  '--help[output this help.]'
  '*:filename:_files'
)

_arguments -s $arguments
