#compdef clang-move12

local arguments

arguments=(
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '--dump[_decls                - Dump all declarations in old header (JSON format) to stdout. If the option is specified, other command options will be ignored. An empty JSON will be returned if old header isnt specified.]'
  '--dump[_result               - Dump results in JSON format to stdout.]'
  '--extra-arg[- Additional argument to append to the compiler command line]'
  '--extra-arg-before[- Additional argument to prepend to the compiler command line]'
  '--names[- The list of the names of classes being moved, e.g. "Foo,a::Foo,b::Foo".]'
  '--new[_cc=<string>           - The relative/absolute file path of new cc.]'
  '--new[_depend_on_old         - Whether new header will depend on old header. If true, clang-move will add #include of old header to new header.]'
  '--new[_header=<string>       - The relative/absolute file path of new header.]'
  '--old[_cc=<string>           - The relative/absolute file path of old cc.]'
  '--old[_depend_on_new         - Whether old header will depend on new header. If true, clang-move will add #include of new header to old header.]'
  '--old[_header=<string>       - The relative/absolute file path of old header.]'
  '-p[- Build path]'
  '--style[- The style name used for reformatting. Default is "llvm"]'
  '*:filename:_files'
)

_arguments -s $arguments
