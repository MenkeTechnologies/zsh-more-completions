#compdef tiffcrop

local arguments

arguments=(
  '-h[print this syntax listing]'
  '-v[print tiffcrop version identifier and last revision date]'
  '-a[append to output instead of overwriting]'
  '-d[set initial directory offset, counting first image as one, not zero]'
  '-p[pack samples contiguously (e.g. RGBRGB...)]'
  '-p[store samples separately (e.g. RRR...GGG...BBB...)]'
  '-s[write output in strips]'
  '-t[write output in tiles]'
  '-i[ignore read errors]'
  '-r[make each strip have no more than # rows]'
  '-w[set output tile width (pixels)]'
  '-l[set output tile length (pixels)]'
  '-f[2msb Force lsb-to-msb FillOrder for output]'
  '-f[2lsb Force msb-to-lsb FillOrder for output]'
  '-c[compress output with Lempel-Ziv & Welch encoding]'
  '-c[compress output with deflate encoding]'
  '-c[compress output with JPEG encoding]'
  '-c[compress output with packbits encoding]'
  '-c[3\[Compress output with CCITT Group 3 encoding]:opts\]:'
  '-c[4 Compress output with CCITT Group 4 encoding]'
  '-c[use no compression algorithm on output]'
  '-N[#-#,#|last sequences and ranges of images within file to process]'
  '-E[edge to use as origin for width and length of crop region]'
  '-U[\[in, cm, px \] inches, centimeters or pixels]'
  '-m[#,#,# margins from edges for selection: top, left, bottom, right separated by commas]'
  '-X[horizontal dimension of region to extract expressed in current units]'
  '-Y[vertical dimension of region to extract expressed in current units]'
  '-Z[#:# zones of the image designated as position X of Y]'
  '-z[1,y1,x2,y2:...:xN,yN,xN+1,yN+1]'
  '-e[export mode for images and selections from input images.]'
  '-H[set horizontal resolution of output images to #]'
  '-V[set vertical resolution of output images to #]'
  '-J[set horizontal margin of output page to # expressed in current units]'
  '-K[set verticalal margin of output page to # expressed in current units]'
  '-O[orientation for output image, portrait, landscape, auto]'
  '-P[page size for output image segments, eg letter, legal, tabloid, etc]'
  '-S[divide the image into equal sized segments using cols across and rows down.]'
  '-F[flip (mirror) image or region horizontally, vertically, or both]'
  '-R[\[90,180,or 270\] degrees clockwise rotation of image or extracted region]'
  '-I[invert color space, eg dark to light for bilevel and grayscale images]'
  '-D[1:value1,opt2:value2,opt3:value3:opt4:value4]'
  '-DDEVELMODE[enable additional very low level debug reporting.]'
  '*:filename:_files'
)

_arguments -s $arguments
