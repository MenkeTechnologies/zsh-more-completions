#compdef bogofilter-bdb

local arguments

arguments=(
  '(- * :)'{-h,--help}'[print this help message.]'
  {-V,--version}'[print version information and exit.]'
  {-Q,--query}'[query (display) base bogofilter configuration.]'
  '-QQ[display extended configuration info.]'
  {-p,--passthrough}'[passthrough.]'
  {-e,--ham-true}'[in -p mode, exit with code 0 when the mail is not spam.]'
  {-u,--update-as-scored}'[score message as spam or non-spam and register accordingly.]'
  {-M,--classify-mbox}'[set mailbox mode. Classify multiple messages in an mbox formatted file.]'
  {-b,--classify-stdin}'[set streaming bulk mode. Process multiple messages (files or directories) read from STDIN.]'
  {-B,--classify-files}'[set bulk mode. Process multiple messages (files or directories) named on the command line.]'
  {-R,--dataframe}'[print an R data frame.]'
  {-s,--register-spam}'[register message(s) as spam.]'
  {-n,--register-ham}'[register message(s) as non-spam.]'
  {-S,--unregister-spam}'[unregister message(s) from spam list.]'
  {-N,--unregister-nonspam}'[unregister message(s) from non-spam list.]'
  {-c,--config-file}'[read specified config file.]'
  {-C,--no-config-file}'[dont read standard config files.]'
  {-d,--bogofilter-dir}'[specify directory for wordlists.]'
  {-H,--no-header-tags}'[disables header line tagging.]'
  {-k,--db-cachesize}'[set Berkeley DB cache size (MB).]'
  {-l,--use-syslog}'[write messages to syslog.]'
  {-L,--syslog-tag}'[specify the tag value for log messages.]'
  {-I,--input-file}'[read message from file instead of stdin.]'
  {-O,--output-file}'[save message to file in passthrough mode.]'
  '-mv1[2\[,v3\]\] - set user defined min_dev, robs, and robx values.]'
  '--min-dev[1, --robs=v2, --robx=v3]'
  '-ov1[2\] - set user defined spam and non-spam cutoff values.]'
  '--spam-cutoff[1, --ham-cutoff=v2]'
  {-t,--terse}'[set terse output mode.]'
  {-T,--fixed-terse-format}'[set invariant terse output mode.]'
  {-q,--quiet}'[suppress token statistics.]'
  {-U,--report-unsure}'[print statistics if spamicity is unsure.]'
  {-v,--verbosity}'[set debug verbosity level.]'
  {-y,--timestamp-date}'[set date for token timestamps.]'
  {-D,--debug-to-stdout}'[direct debug output to stdout.]'
  {-x,--debug-flags}'[set flags to display debug information.]'
  '--option[can be used to set the value of a config file option.]'
  '--block-on-subnets[return class addr tokens]'
  '--bogofilter-dir[directory for wordlists]'
  '--charset-default[default character set]'
  '--db-cachesize[berkeley db cache in Mb]'
  '--db-log-autoremove[enable/disable autoremoval of log files]'
  '--db-transaction[enable/disable transactions]'
  '--ham-cutoff[nonspam if score below this]'
  '--header-format[spam header format]'
  '--log-header-format[header written to log]'
  '--log-update-format[logged on update]'
  '--min-dev[ignore if score near]'
  '--min-token-len[min len for single tokens]'
  '--max-token-len[max len for single tokens]'
  '--max-multi-token-len[max len for multi-word tokens]'
  '--multi-token-count[number of tokens per multi-word token]'
  '--ns-esf[effective size factor for ham]'
  '--replace-nonascii-characters[substitute ? if bit 8 is 1]'
  '--robs[robinsons s parameter]'
  '--robx[robinsons x parameter]'
  '--sp-esf[effective size factor for spam]'
  '--spam-cutoff[spam if score above this]'
  '--spam-header-name[passthrough adds/replaces]'
  '--spam-subject-tag[passthrough prepends Subject]'
  '--spamicity-formats[spamicity output format]'
  '--spamicity-tags[spamicity tag format]'
  '--stats-in-header[use header not body]'
  '--terse[report in short form]'
  '--terse-format[short form]'
  '--thresh-update[no update if near 0 or 1]'
  '--timestamp[enable/disable token timestamps]'
  '--token-count[fixed token count for scoring]'
  '--token-count-min[min token count for scoring]'
  '--token-count-max[max token count for scoring]'
  '--unicode[enable/disable unicode based wordlist]'
  '--unsure-subject-tag[like spam-subject-tag]'
  '--user-config-file[configuration file]'
  '--wordlist[specify wordlist parameters]'
  '*:filename:_files'
)

_arguments -s $arguments
