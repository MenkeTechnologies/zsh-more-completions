#compdef hydra

local arguments

arguments=(
  '-R[restore a previous aborted/crashed session]'
  '-I[ignore an existing restore file (dont wait 10 seconds)]'
  '-S[perform an SSL connect]'
  '-s[if the service is on a different default port, define it here]'
  '-l[or -L FILE login with LOGIN name, or load several logins from FILE]'
  '-p[or -P FILE try password PASS, or load several passwords from FILE]'
  '-x[password bruteforce generation, type "-x -h" to get help]'
  '-y[disable use of symbols in bruteforce, see above]'
  '-e[try "n" null password, "s" login as pass and/or "r" reversed login]'
  '-u[loop around users, not passwords (effective! implied with -x)]'
  '-C[colon separated "login:pass" format, instead of -L/-P options]'
  '-M[list of servers to attack, one entry per line, : to specify port]'
  '-o[write found login/password pairs to FILE instead of stdout]'
  '-b[specify the format for the -o FILE: text(default), json, jsonv1]'
  {-f,-F}'[exit when a login/pass pair is found (-M: -f per host, -F global)]'
  '-t[run TASKS number of connects in parallel per target (default: 16)]'
  '-T[run TASKS connects in parallel overall (for -M, default: 64)]'
  {-w,-W}'[wait time for a response (32) / between connects per thread (0)]'
  '-c[wait time per login attempt over all threads (enforces -t 1)]'
  {-4,-6}'[use IPv4 (default) / IPv6 addresses (put always in \[\] also in -M)]'
  {-v,-V,-d}'[verbose mode / show login+pass for each attempt / debug mode]'
  '-O[use old SSL v2 and v3]'
  '-q[do not print messages about connection errors]'
  '-U[service module usage details]'
  '-h[more command line options (COMPLETE HELP)]'
  '*:filename:_files'
)

_arguments -s $arguments
