#compdef rz-gg

# Autogenerated from man page /usr/share/man/man1/rz-gg.1.gz

local arguments

arguments=(
    '-a[set architecture x86, arm.]'
    '-b[32 or 64.]'
    '-k[windows, linux or osx.]'
    '-f[output format (raw, c, pe, elf, mach0, python, javascript).]'
    '-o[output file to write result of compilation.]'
    '-i[specify shellcode name to be used (see \\-L).]'
    '-e[specify encoder name to be used (see \\-L).]'
    '-B[specify shellcode as hexpairs.]'
    '-c[set configure option for the shellcode encoder.]'
    '-C[include contents of file.]'
    '-d[Patch final buffer with given dword at specified offset.]'
    '-D[Patch final buffer with given qword at specified offset.]'
    '-w[Patch final buffer with given hexpairs at specified offset.]'
    '-n[Append a 32bit number in little endian.]'
    '-N[Append a 64bit number in little endian.]'
    '-p[Specify generic paddings with a format string.]'
    '-P[Prepend debruijn sequence of given length.]'
    '-q[Output offset of debruijn sequence fragment.]'
    '-F[autodetect native file format (osx=mach0, linux=elf, . ).]'
    '-O[use default output file (filename without extension or a. out).]'
    '-I[add include path.]'
    '-s[show assembler code.]'
    '-S[append a string.]'
    '-r[show raw bytes instead of hexpairs.]'
    '-x[execute (just-in-time).]'
    '-X[execute rop chain.]'
    '-L[list all plugins (shellcodes and encoders).]'
    '-h[show this help.]'
    '-z[output in C string syntax.]'
    '-v[show version El EXAMPLE Pp $ cat hi.]'
    '*:filename:_files'
)
_arguments -s $arguments
