#compdef recordmydesktop

local arguments

arguments=(
  '(- * :)'{-h,--help}'[print this help and exit.]'
  '--version[print program version and exit.]'
  '--print-config[print info about options selected]'
  '--windowid[id of window to be recorded.]'
  '--display[display to connect to.]'
  {-x,--x}'[0 Offset in x direction.]'
  {-y,--x}'[0 Offset in y direction.]'
  '--width[0 Width of recorded window.]'
  '--height[0 Height of recorded window.]'
  '--dummy-cursor[color of the dummy cursor]'
  '--no-cursor[disable drawing of the cursor.]'
  '--no-shared[disable usage of MIT-shared memory]'
  '--full-shots[take full screenshot at every]'
  '--follow-mouse[makes the capture area follow the]'
  '--full-shots[.]'
  '--quick-subsampling[do subsampling of the chroma planes]'
  '--fps[(number>0.0) A positive number denoting desired]'
  '--channels[A positive number denoting desired]'
  '--freq[A positive number denoting desired]'
  '--buffer-size[A positive number denoting the]'
  '--ring-buffer-size[A float number denoting the desired]'
  '--device[sound device(default hw:0,0).]'
  '--use-jack[1 port2... portn Record audio from the specified list]'
  '--no-sound[do not record sound.]'
  '--on-the-fly-encoding[encode the audio-video data, while]'
  '--v[_quality=n A number from 0 to 63 for desired]'
  '--v[_bitrate=n A number from 0 to 2000000 for]'
  '--s[_quality=n Desired audio quality(-1 to 10).]'
  '--rescue[encode data from a previous]'
  '--no-wm-check[do not try to detect the window]'
  '--no-frame[don not show the frame that]'
  '--pause-shortcut[+KEY Shortcut that will be used for]'
  '--stop-shortcut[+KEY Shortcut that will be used to stop]'
  '--compress-cache[image data are cached with light]'
  '--workdir[location where a temporary directory]'
  '--delay[number of secs(default),minutes or]'
  '--overwrite[if there is already a file with the]'
  {-o,--output}'[name of recorded video(default]'
  '*:filename:_files'
)

_arguments -s $arguments
