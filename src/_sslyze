#compdef sslyze

local arguments

arguments=(
  '--version[show programs version number and exit]'
  '(- * :)'{-h,--help}'[show this help message and exit]'
  '--xml[_out=XML_FILE Writes the scan results as an XML document to the file]'
  '--targets[_in=TARGETS_IN]'
  '--timeout[sets the timeout value in seconds used for every]'
  '--nb[_retries=NB_RETRIES]'
  '--https[_tunnel=HTTPS_TUNNEL]'
  '--starttls[performs StartTLS handshakes when connecting to the]'
  '--xmpp[_to=XMPP_TO Optional setting for STARTTLS XMPP. XMPP_TO should be]'
  '--sni[use Server Name Indication to specify the hostname to]'
  '--quiet[hide script standard outputs. Will only affect script]'
  '--regular[regular HTTPS scan; shortcut for --sslv2 --sslv3]'
  {--tlsv1,--tlsv1}'[_1 --tlsv1_2 --reneg --resum]'
  {--certinfo,--http}'[_get --hide_rejected_ciphers]'
  {--compression,--heartbleed}'[]'
  '--cert[client certificate chain filename. The certificates]'
  '--key[client private key filename.]'
  '--keyform[client private key format. DER or PEM (default).]'
  '--pass[client private key passphrase.]'
  '--hsts[checks support for HTTP Strict Transport Security]'
  '--certinfo[verifies the validity of the server(s) certificate(s)]'
  '--ca[_file=CA_FILE Local Certificate Authority file (in PEM format), to]'
  '--chrome[_sha1 Determines if the server will be affected by Google]'
  '--heartbleed[tests the server(s) for the OpenSSL Heartbleed]'
  '--reneg[tests the server(s) for client-initiated renegotiation]'
  '--resum[tests the server(s) for session resumption support]'
  '--resum[_rate Performs 100 session resumptions with the server(s)]'
  '--compression[tests the server(s) for Zlib compression support.]'
  '--sslv2[lists the SSL 2.0 OpenSSL cipher suites supported by]'
  '--sslv3[lists the SSL 3.0 OpenSSL cipher suites supported by]'
  '--tlsv1[lists the TLS 1.0 OpenSSL cipher suites supported by]'
  '--tlsv1[_1 Lists the TLS 1.1 OpenSSL cipher suites supported by]'
  '--tlsv1[_2 Lists the TLS 1.2 OpenSSL cipher suites supported by]'
  '--http[_get Option - For each cipher suite, sends an HTTP GET]'
  '--hide[_rejected_ciphers]'
  '*:filename:_files'
)

_arguments -s $arguments
