#compdef x11perf

local arguments

arguments=(
  '-display[the X server to contact]'
  '-sync[do the tests in synchronous mode]'
  '-pack[pack rectangles right next to each other]'
  '-repeat[do tests <n> times (default = 5)]'
  '-time[do tests for <s> seconds each (default = 5)]'
  '-pause[pause for <s> seconds between each run]'
  '-all[do all tests]'
  '-range[1>\[,<test2>\] like all, but do <test1> to <test2>]'
  '-labels[generate test labels for use by fillblnk]'
  '-fg[the foreground color to use]'
  '-bg[the background color to use]'
  '-clips[default number of clip windows per test]'
  '-ddbg[the background color to use for DoubleDash]'
  '-rop[0 rop1 ...> use the given rops to draw (default = GXcopy)]'
  '-pm[0 pm1 ...> use the given planemasks to draw (default = ~0)]'
  '-depth[use a visual with <depth> planes per pixel]'
  '-vclass[the visual class to use (default = root)]'
  '-reps[fix the rep count (default = auto scale)]'
  '-subs[0 s1 ...> a list of the number of sub-windows to use]'
  '-v1[.2 perform only v1.2 tests using old semantics]'
  '-v1[.3 perform only v1.3 tests using old semantics]'
  '-su[request save unders on windows]'
  '-bs[whenMapped or Always (default = NotUseful)]'
  '-dot[dot]'
  '-rect1[1x1 rectangle]'
  '-rect10[10x10 rectangle]'
  '-rect100[100x100 rectangle]'
  '-rect500[500x500 rectangle]'
  '-srect1[1x1 stippled rectangle (8x8 stipple)]'
  '-srect10[10x10 stippled rectangle (8x8 stipple)]'
  '-srect100[100x100 stippled rectangle (8x8 stipple)]'
  '-srect500[500x500 stippled rectangle (8x8 stipple)]'
  '-osrect1[1x1 opaque stippled rectangle (8x8 stipple)]'
  '-osrect10[10x10 opaque stippled rectangle (8x8 stipple)]'
  '-osrect100[100x100 opaque stippled rectangle (8x8 stipple)]'
  '-osrect500[500x500 opaque stippled rectangle (8x8 stipple)]'
  '-tilerect1[1x1 tiled rectangle (4x4 tile)]'
  '-tilerect10[10x10 tiled rectangle (4x4 tile)]'
  '-tilerect100[100x100 tiled rectangle (4x4 tile)]'
  '-tilerect500[500x500 tiled rectangle (4x4 tile)]'
  '-oddsrect1[1x1 stippled rectangle (17x15 stipple)]'
  '-oddsrect10[10x10 stippled rectangle (17x15 stipple)]'
  '-oddsrect100[100x100 stippled rectangle (17x15 stipple)]'
  '-oddsrect500[500x500 stippled rectangle (17x15 stipple)]'
  '-oddosrect1[1x1 opaque stippled rectangle (17x15 stipple)]'
  '-oddosrect10[10x10 opaque stippled rectangle (17x15 stipple)]'
  '-oddosrect100[100x100 opaque stippled rectangle (17x15 stipple)]'
  '-oddosrect500[500x500 opaque stippled rectangle (17x15 stipple)]'
  '-oddtilerect1[1x1 tiled rectangle (17x15 tile)]'
  '-oddtilerect10[10x10 tiled rectangle (17x15 tile)]'
  '-oddtilerect100[100x100 tiled rectangle (17x15 tile)]'
  '-oddtilerect500[500x500 tiled rectangle (17x15 tile)]'
  '-bigsrect1[1x1 stippled rectangle (161x145 stipple)]'
  '-bigsrect10[10x10 stippled rectangle (161x145 stipple)]'
  '-bigsrect100[100x100 stippled rectangle (161x145 stipple)]'
  '-bigsrect500[500x500 stippled rectangle (161x145 stipple)]'
  '-bigosrect1[1x1 opaque stippled rectangle (161x145 stipple)]'
  '-bigosrect10[10x10 opaque stippled rectangle (161x145 stipple)]'
  '-bigosrect100[100x100 opaque stippled rectangle (161x145 stipple)]'
  '-bigosrect500[500x500 opaque stippled rectangle (161x145 stipple)]'
  '-bigtilerect1[1x1 tiled rectangle (161x145 tile)]'
  '-bigtilerect10[10x10 tiled rectangle (161x145 tile)]'
  '-bigtilerect100[100x100 tiled rectangle (161x145 tile)]'
  '-bigtilerect500[500x500 tiled rectangle (161x145 tile)]'
  '-eschertilerect1[1x1 tiled rectangle (216x208 tile)]'
  '-eschertilerect10[10x10 tiled rectangle (216x208 tile)]'
  '-eschertilerect100[100x100 tiled rectangle (216x208 tile)]'
  '-eschertilerect500[500x500 tiled rectangle (216x208 tile)]'
  '-seg1[1-pixel line segment]'
  '-seg10[10-pixel line segment]'
  '-seg100[100-pixel line segment]'
  '-seg500[500-pixel line segment]'
  '-seg100c1[100-pixel line segment (1 kid)]'
  '-seg100c2[100-pixel line segment (2 kids)]'
  '-seg100c3[100-pixel line segment (3 kids)]'
  '-dseg10[10-pixel dashed segment]'
  '-dseg100[100-pixel dashed segment]'
  '-ddseg100[100-pixel double-dashed segment]'
  '-hseg10[10-pixel horizontal line segment]'
  '-hseg100[100-pixel horizontal line segment]'
  '-hseg500[500-pixel horizontal line segment]'
  '-vseg10[10-pixel vertical line segment]'
  '-vseg100[100-pixel vertical line segment]'
  '-vseg500[500-pixel vertical line segment]'
  '-whseg10[10x1 wide horizontal line segment]'
  '-whseg100[100x10 wide horizontal line segment]'
  '-whseg500[500x50 wide horizontal line segment]'
  '-wvseg10[10x1 wide vertical line segment]'
  '-wvseg100[100x10 wide vertical line segment]'
  '-wvseg500[500x50 wide vertical line segment]'
  '-line1[1-pixel line]'
  '-line10[10-pixel line]'
  '-line100[100-pixel line]'
  '-line500[500-pixel line]'
  '-dline10[10-pixel dashed line]'
  '-dline100[100-pixel dashed line]'
  '-ddline100[100-pixel double-dashed line]'
  '-wline10[10x1 wide line]'
  '-wline100[100x10 wide line]'
  '-wline500[500x50 wide line]'
  '-wdline100[100x10 wide dashed line]'
  '-wddline100[100x10 wide double-dashed line]'
  '-orect10[10x10 rectangle outline]'
  '-orect100[100x100 rectangle outline]'
  '-orect500[500x500 rectangle outline]'
  '-worect10[10x10 wide rectangle outline]'
  '-worect100[100x100 wide rectangle outline]'
  '-worect500[500x500 wide rectangle outline]'
  '-circle1[1-pixel circle]'
  '-circle10[10-pixel circle]'
  '-circle100[100-pixel circle]'
  '-circle500[500-pixel circle]'
  '-dcircle100[100-pixel dashed circle]'
  '-ddcircle100[100-pixel double-dashed circle]'
  '-wcircle10[10-pixel wide circle]'
  '-wcircle100[100-pixel wide circle]'
  '-wcircle500[500-pixel wide circle]'
  '-wdcircle100[100-pixel wide dashed circle]'
  '-wddcircle100[100-pixel wide double-dashed circle]'
  '-pcircle10[10-pixel partial circle]'
  '-pcircle100[100-pixel partial circle]'
  '-wpcircle10[10-pixel wide partial circle]'
  '-wpcircle100[100-pixel wide partial circle]'
  '-fcircle1[1-pixel solid circle]'
  '-fcircle10[10-pixel solid circle]'
  '-fcircle100[100-pixel solid circle]'
  '-fcircle500[500-pixel solid circle]'
  '-fcpcircle10[10-pixel fill chord partial circle]'
  '-fcpcircle100[100-pixel fill chord partial circle]'
  '-fspcircle10[10-pixel fill slice partial circle]'
  '-fspcircle100[100-pixel fill slice partial circle]'
  '-ellipse10[10-pixel ellipse]'
  '-ellipse100[100-pixel ellipse]'
  '-ellipse500[500-pixel ellipse]'
  '-dellipse100[100-pixel dashed ellipse]'
  '-ddellipse100[100-pixel double-dashed ellipse]'
  '-wellipse10[10-pixel wide ellipse]'
  '-wellipse100[100-pixel wide ellipse]'
  '-wellipse500[500-pixel wide ellipse]'
  '-wdellipse100[100-pixel wide dashed ellipse]'
  '-wddellipse100[100-pixel wide double-dashed ellipse]'
  '-pellipse10[10-pixel partial ellipse]'
  '-pellipse100[100-pixel partial ellipse]'
  '-wpellipse10[10-pixel wide partial ellipse]'
  '-wpellipse100[100-pixel wide partial ellipse]'
  '-fellipse10[10-pixel filled ellipse]'
  '-fellipse100[100-pixel filled ellipse]'
  '-fellipse500[500-pixel filled ellipse]'
  '-fcpellipse10[10-pixel fill chord partial ellipse]'
  '-fcpellipse100[100-pixel fill chord partial ellipse]'
  '-fspellipse10[10-pixel fill slice partial ellipse]'
  '-fspellipse100[100-pixel fill slice partial ellipse]'
  '-triangle1[fill 1x1 equivalent triangle]'
  '-triangle10[fill 10x10 equivalent triangle]'
  '-triangle100[fill 100x100 equivalent triangle]'
  '-trap1[fill 1x1 trapezoid]'
  '-trap10[fill 10x10 trapezoid]'
  '-trap100[fill 100x100 trapezoid]'
  '-trap300[fill 300x300 trapezoid]'
  '-strap1[fill 1x1 stippled trapezoid (8x8 stipple)]'
  '-strap10[fill 10x10 stippled trapezoid (8x8 stipple)]'
  '-strap100[fill 100x100 stippled trapezoid (8x8 stipple)]'
  '-strap300[fill 300x300 stippled trapezoid (8x8 stipple)]'
  '-ostrap1[fill 1x1 opaque stippled trapezoid (8x8 stipple)]'
  '-ostrap10[fill 10x10 opaque stippled trapezoid (8x8 stipple)]'
  '-ostrap100[fill 100x100 opaque stippled trapezoid (8x8 stipple)]'
  '-ostrap300[fill 300x300 opaque stippled trapezoid (8x8 stipple)]'
  '-tiletrap1[fill 1x1 tiled trapezoid (4x4 tile)]'
  '-tiletrap10[fill 10x10 tiled trapezoid (4x4 tile)]'
  '-tiletrap100[fill 100x100 tiled trapezoid (4x4 tile)]'
  '-tiletrap300[fill 300x300 tiled trapezoid (4x4 tile)]'
  '-oddstrap1[fill 1x1 stippled trapezoid (17x15 stipple)]'
  '-oddstrap10[fill 10x10 stippled trapezoid (17x15 stipple)]'
  '-oddstrap100[fill 100x100 stippled trapezoid (17x15 stipple)]'
  '-oddstrap300[fill 300x300 stippled trapezoid (17x15 stipple)]'
  '-oddostrap1[fill 1x1 opaque stippled trapezoid (17x15 stipple)]'
  '-oddostrap10[fill 10x10 opaque stippled trapezoid (17x15 stipple)]'
  '-oddostrap100[fill 100x100 opaque stippled trapezoid (17x15 stipple)]'
  '-oddostrap300[fill 300x300 opaque stippled trapezoid (17x15 stipple)]'
  '-oddtiletrap1[fill 1x1 tiled trapezoid (17x15 tile)]'
  '-oddtiletrap10[fill 10x10 tiled trapezoid (17x15 tile)]'
  '-oddtiletrap100[fill 100x100 tiled trapezoid (17x15 tile)]'
  '-oddtiletrap300[fill 300x300 tiled trapezoid (17x15 tile)]'
  '-bigstrap1[fill 1x1 stippled trapezoid (161x145 stipple)]'
  '-bigstrap10[fill 10x10 stippled trapezoid (161x145 stipple)]'
  '-bigstrap100[fill 100x100 stippled trapezoid (161x145 stipple)]'
  '-bigstrap300[fill 300x300 stippled trapezoid (161x145 stipple)]'
  '-bigostrap1[fill 1x1 opaque stippled trapezoid (161x145 stipple)]'
  '-bigostrap10[fill 10x10 opaque stippled trapezoid (161x145 stipple)]'
  '-bigostrap100[fill 100x100 opaque stippled trapezoid (161x145 stipple)]'
  '-bigostrap300[fill 300x300 opaque stippled trapezoid (161x145 stipple)]'
  '-bigtiletrap1[fill 1x1 tiled trapezoid (161x145 tile)]'
  '-bigtiletrap10[fill 10x10 tiled trapezoid (161x145 tile)]'
  '-bigtiletrap100[fill 100x100 tiled trapezoid (161x145 tile)]'
  '-bigtiletrap300[fill 300x300 tiled trapezoid (161x145 tile)]'
  '-eschertiletrap1[fill 1x1 tiled trapezoid (216x208 tile)]'
  '-eschertiletrap10[fill 10x10 tiled trapezoid (216x208 tile)]'
  '-eschertiletrap100[fill 100x100 tiled trapezoid (216x208 tile)]'
  '-eschertiletrap300[fill 300x300 tiled trapezoid (216x208 tile)]'
  '-aatrap1[fill 1x1 aa trap]'
  '-aatrap10[fill 10x10 aa trap]'
  '-aatrap100[fill 100x100 aa trap]'
  '-aatrap300[fill 300x300 aa trap]'
  '-aa4trap1[fill 1x1 aa trap with 4 bit alpha]'
  '-aa4trap10[fill 10x10 aa trap with 4 bit alpha]'
  '-aa4trap100[fill 100x100 aa trap with 4 bit alpha]'
  '-aa4trap300[fill 300x300 aa trap with 4 bit alpha]'
  '-aa1trap1[fill 1x1 aa trap with 1 bit alpha]'
  '-aa1trap10[fill 10x10 aa trap with 1 bit alpha]'
  '-aa1trap100[fill 100x100 aa trap with 1 bit alpha]'
  '-aa1trap300[fill 300x300 aa trap with 1 bit alpha]'
  '-aatrap2x1[fill 2x1 aa trap]'
  '-aatrap2x10[fill 2x10 aa trap]'
  '-aatrap2x100[fill 2x100 aa trap]'
  '-aatrap2x300[fill 2x300 aa trap]'
  '-aatrapezoid1[fill 1x1 aa trapezoid]'
  '-aatrapezoid10[fill 10x10 aa trapezoid]'
  '-aatrapezoid100[fill 100x100 aa trapezoid]'
  '-aatrapezoid300[fill 300x300 aa trapezoid]'
  '-addaatrapezoid1[fill 1x1 aa pre-added trapezoid]'
  '-addaatrapezoid10[fill 10x10 aa pre-added trapezoid]'
  '-addaatrapezoid100[fill 100x100 aa pre-added trapezoid]'
  '-addaatrapezoid300[fill 300x300 aa pre-added trapezoid]'
  '-complex10[fill 10x10 equivalent complex polygon]'
  '-complex100[fill 100x100 equivalent complex polygons]'
  '-64poly10convex[fill 10x10 64-gon (Convex)]'
  '-64poly100convex[fill 100x100 64-gon (Convex)]'
  '-64poly10complex[fill 10x10 64-gon (Complex)]'
  '-64poly100complex[fill 100x100 64-gon (Complex)]'
  '-ftext[char in 80-char line (6x13)]'
  '-f8text[char in 70-char line (8x13)]'
  '-f9text[char in 60-char line (9x15)]'
  '-f14text16[char16 in 40-char line (k14)]'
  '-f24text16[char16 in 23-char line (k24)]'
  '-tr10text[char in 80-char line (TR 10)]'
  '-tr24text[char in 30-char line (TR 24)]'
  '-polytext[char in 20/40/20 line (6x13, TR 10)]'
  '-polytext16[char16 in 7/14/7 line (k14, k24)]'
  '-fitext[char in 80-char image line (6x13)]'
  '-f8itext[char in 70-char image line (8x13)]'
  '-f9itext[char in 60-char image line (9x15)]'
  '-f14itext16[char16 in 40-char image line (k14)]'
  '-f24itext16[char16 in 23-char image line (k24)]'
  '-tr10itext[char in 80-char image line (TR 10)]'
  '-tr24itext[char in 30-char image line (TR 24)]'
  '-aa10text[char in 80-char aa line (Charter 10)]'
  '-aa24text[char in 30-char aa line (Charter 24)]'
  '-aaftext[char in 80-char aa line (Courier 12)]'
  '-a10text[char in 80-char a line (Charter 10)]'
  '-a24text[char in 30-char a line (Charter 24)]'
  '-aftext[char in 80-char a line (Courier 12)]'
  '-rgb10text[char in 80-char rgb line (Charter 10)]'
  '-rgb24text[char in 30-char rgb line (Charter 24)]'
  '-rgbftext[char in 80-char rgb line (Courier 12)]'
  '-caa10text[char in 80-char aa core line (Charter 10)]'
  '-caa24text[char in 30-char aa core line (Charter 24)]'
  '-caaftext[char in 80-char aa core line (Courier 12)]'
  '-ca10text[char in 80-char a core line (Charter 10)]'
  '-ca24text[char in 30-char a core line (Charter 24)]'
  '-caftext[char in 80-char a core line (Courier 12)]'
  '-crgb10text[char in 80-char rgb core line (Charter 10)]'
  '-crgb24text[char in 30-char rgb core line (Charter 24)]'
  '-crgbftext[char in 80-char rgb core line (Courier 12)]'
  '-scroll10[scroll 10x10 pixels]'
  '-scroll100[scroll 100x100 pixels]'
  '-scroll500[scroll 500x500 pixels]'
  '-copywinwin10[copy 10x10 from window to window]'
  '-copywinwin100[copy 100x100 from window to window]'
  '-copywinwin500[copy 500x500 from window to window]'
  '-copypixwin10[copy 10x10 from pixmap to window]'
  '-copypixwin100[copy 100x100 from pixmap to window]'
  '-copypixwin500[copy 500x500 from pixmap to window]'
  '-copywinpix10[copy 10x10 from window to pixmap]'
  '-copywinpix100[copy 100x100 from window to pixmap]'
  '-copywinpix500[copy 500x500 from window to pixmap]'
  '-copypixpix10[copy 10x10 from pixmap to pixmap]'
  '-copypixpix100[copy 100x100 from pixmap to pixmap]'
  '-copypixpix500[copy 500x500 from pixmap to pixmap]'
  '-copyplane10[copy 10x10 1-bit deep plane]'
  '-copyplane100[copy 100x100 1-bit deep plane]'
  '-copyplane500[copy 500x500 1-bit deep plane]'
  '-deepcopyplane10[copy 10x10 n-bit deep plane]'
  '-deepcopyplane100[copy 100x100 n-bit deep plane]'
  '-deepcopyplane500[copy 500x500 n-bit deep plane]'
  '-putimage10[putImage 10x10 square]'
  '-putimage100[putImage 100x100 square]'
  '-putimage500[putImage 500x500 square]'
  '-putimagexy10[putImage XY 10x10 square]'
  '-putimagexy100[putImage XY 100x100 square]'
  '-putimagexy500[putImage XY 500x500 square]'
  '-shmput10[shmPutImage 10x10 square]'
  '-shmput100[shmPutImage 100x100 square]'
  '-shmput500[shmPutImage 500x500 square]'
  '-shmputxy10[shmPutImage XY 10x10 square]'
  '-shmputxy100[shmPutImage XY 100x100 square]'
  '-shmputxy500[shmPutImage XY 500x500 square]'
  '-shmget10[shmGetImage 10x10 square]'
  '-shmget100[shmGetImage 100x100 square]'
  '-shmget500[shmGetImage 500x500 square]'
  '-shmgetxy10[shmGetImage XY 10x10 square]'
  '-shmgetxy100[shmGetImage XY 100x100 square]'
  '-shmgetxy500[shmGetImage XY 500x500 square]'
  '-getimage10[getImage 10x10 square]'
  '-getimage100[getImage 100x100 square]'
  '-getimage500[getImage 500x500 square]'
  '-getimagexy10[getImage XY 10x10 square]'
  '-getimagexy100[getImage XY 100x100 square]'
  '-getimagexy500[getImage XY 500x500 square]'
  '-compwinwin10[composite 10x10 from window to window]'
  '-compwinwin100[composite 100x100 from window to window]'
  '-compwinwin500[composite 500x500 from window to window]'
  '-comppixwin10[composite 10x10 from pixmap to window]'
  '-comppixwin100[composite 100x100 from pixmap to window]'
  '-comppixwin500[composite 500x500 from pixmap to window]'
  '-magpixwin10[scale 5x5 from pixmap to 10x10 window]'
  '-magpixwin100[scale 50x50 from pixmap to 100x100 window]'
  '-magpixwin500[scale 250x250 from pixmap to 500x500 window]'
  '-minpixwin10[scale 10x10 from pixmap to 5x5 window]'
  '-minpixwin100[scale 100x100 from pixmap to 5x5 window]'
  '-minpixwin500[scale 500x500 from pixmap to 250x250 window]'
  '-noop[X protocol NoOperation]'
  '-pointer[queryPointer]'
  '-prop[getProperty]'
  '-gc[change graphics context]'
  '-create[create and map subwindows]'
  '-ucreate[create unmapped window]'
  '-map[map window via parent]'
  '-unmap[unmap window via parent]'
  '-destroy[destroy window via parent]'
  '-popup[hide/expose window via popup]'
  '-move[move window]'
  '-umove[moved unmapped window]'
  '-movetree[move window via parent]'
  '-resize[resize window]'
  '-uresize[resize unmapped window]'
  '-circulate[circulate window]'
  '-ucirculate[circulate Unmapped window]'
  '*:filename:_files'
)

_arguments -s $arguments
