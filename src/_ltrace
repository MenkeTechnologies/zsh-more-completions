#compdef ltrace

local arguments

arguments=(
  {-a,--align}'[align return values in a secific column.]'
  '-A[maximum number of array elements to print.]'
  {-b,--no-signals}'[dont print signals.]'
  '-c[count time and calls, and report a summary on exit.]'
  {-C,--demangle}'[decode low-level symbol names into user-level names.]'
  {-D,--debug}'[enable debugging (see -Dh or --debug=help).]'
  {-Dh,--debug}'[show help on debugging.]'
  '-e[modify which library calls to trace.]'
  '-f[trace children (fork() and clone()).]'
  {-F,--config}'[load alternate configuration file (may be repeated).]'
  '(- * :)'{-h,--help}'[display this help and exit.]'
  '-i[print instruction pointer at time of library call.]'
  {-l,--library}'[only trace symbols implemented by this library.]'
  '-L[do NOT display library calls.]'
  {-n,--indent}'[indent output by NR spaces for each call level nesting.]'
  {-o,--output}'[write the trace output to file with given name.]'
  '-p[attach to the process with the process ID pid.]'
  '-r[print relative timestamps.]'
  '-s[specify the maximum string size to print.]'
  '-S[trace system calls as well as library calls.]'
  {-t,-tt,-ttt}'[print absolute timestamps.]'
  '-T[show the time spent inside each call.]'
  '-u[run command with the userid, groupid of username.]'
  {-V,--version}'[output version information and exit.]'
  '-x[modify which static functions to trace.]'
  '*:filename:_files'
)

_arguments -s $arguments
