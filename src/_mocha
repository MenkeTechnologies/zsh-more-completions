#compdef mocha

local arguments

arguments=(
  '--allow-uncaught[allow uncaught errors to propagate \[boolean\]]'
  {--async-only,-A}'[require all tests to use a callback (async) or]'
  {--bail,-b}'[abort ("bail") after first test failure \[boolean\]]'
  '--check-leaks[check for global variable leaks \[boolean\]]'
  '--delay[delay initial execution of root suite \[boolean\]]'
  '--exit[force Mocha to quit after tests complete \[boolean\]]'
  '--forbid-only[fail if exclusive test(s) encountered \[boolean\]]'
  '--forbid-pending[fail if pending test(s) encountered \[boolean\]]'
  {--global,--globals}'[list of allowed global variables \[array\]]'
  '--retries[retry failed tests this many times \[number\]]'
  {--slow,-s}'[specify "slow" test threshold (in milliseconds)]'
  {--timeout,-t,--timeouts}'[specify test timeout threshold (in milliseconds)]'
  {--ui,-u}'[specify user interface \[string\] \[default: "bdd"\]]'
  {--color,-c,--colors}'[force-enable color output \[boolean\]]'
  '--diff[show diff on failure]'
  '--full-trace[display full stack traces \[boolean\]]'
  {--growl,-G}'[enable Growl notifications \[boolean\]]'
  '--inline-diffs[display actual/expected differences]'
  {--reporter,-R}'[specify reporter to use]'
  {--reporter-option,--reporter-options}'[reporter-specific options]'
  '-O[(<k=v,\[k1=v1,..\]>) \[array\]]'
  '--config[path to config file \[default: (nearest rc file)\]]'
  '--opts[path to `mocha.opts` \[string\] \[default: "./test/mocha.opts"\]]'
  '--package[path to package.json for config \[string\]]'
  '--exclude[ignore file(s) or glob pattern(s)]'
  {--extension,--watch-extensions}'[file extension(s) to load and/or watch]'
  '--file[specify file(s) to be loaded prior to root]'
  '--recursive[look for tests in subdirectories \[boolean\]]'
  {--require,-r}'[require module \[array\] \[default: (none)\]]'
  {--sort,-S}'[sort test files \[boolean\]]'
  {--watch,-w}'[watch files in the current working directory]'
  {--fgrep,-f}'[only run tests containing this string \[string\]]'
  {--grep,-g}'[only run tests matching this string or regexp \[string\]]'
  {--invert,-i}'[inverts --grep and --fgrep matches \[boolean\]]'
  {--help,-h}'[show usage information & exit \[boolean\]]'
  {--version,-V}'[show version number & exit \[boolean\]]'
  '--interfaces[list built-in user interfaces & exit \[boolean\]]'
  '--reporters[list built-in reporters & exit \[boolean\]]'
  '*:filename:_files'
)

_arguments -s $arguments
