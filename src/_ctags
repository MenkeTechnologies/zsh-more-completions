#compdef ctags

local arguments

arguments=(
  '-a[append the tags to an existing tag file.]'
  '-B[use backward searching patterns (?...?).]'
  '-e[output tag file for use with Emacs.]'
  '-f[write tags to specified file. Value of "-" writes tags to stdout]'
  '-F[use forward searching patterns (/.../) (default).]'
  '-h[specify list of file extensions to be treated as include files.]'
  '-I[@file>]'
  '-L[A list of source file names are read from the specified file.]'
  '-n[equivalent to --excmd=number.]'
  '-N[equivalent to --excmd=pattern.]'
  '-o[alternative for -f.]'
  '-R[equivalent to --recurse.]'
  '-u[equivalent to --sort=no.]'
  '-V[equivalent to --verbose.]'
  '-x[print a tabular cross reference file to standard output.]'
  '--append[should tags should be appended to existing tag file \[no\]?]'
  '--etags-include[include reference to file in Emacs-style tag file (requires -e).]'
  '--exclude[exclude files and directories matching pattern.]'
  '--excmd[uses the specified type of EX command to locate tags \[pattern\].]'
  '--extra[+|-\]flags]'
  '--fields[+|-\]flags]'
  '--file-scope[should tags scoped only for a single file (e.g. "static" tags]'
  '--filter[behave as a filter, reading file names from standard input and]'
  '--filter-terminator[specify string to print to stdout following the tags for each file]'
  '--format[force output of specified tag file format \[2\].]'
  '--help[print this option summary.]'
  '--if0[should C code within #if 0 conditional branches be parsed \[no\]?]'
  '--langdef[define a new language to be parsed with regular expressions.]'
  '--langmap[(s)]'
  '--language-force[force all files to be interpreted using specified language.]'
  '--languages[+|-\]list]'
  '--license[print details of software license.]'
  '--line-directives[should #line directives be processed \[no\]?]'
  '--links[indicate whether symbolic links should be followed \[yes\].]'
  '--list-kinds[output a list of all tag kinds for specified language or all.]'
  '--list-languages[output list of supported languages.]'
  '--list-maps[output list of language mappings.]'
  '--options[specify file from which command line options should be read.]'
  '--recurse[recurse into directories supplied on command line \[no\].]'
  '--regex-[<LANG>=/line_pattern/name_pattern/\[flags\]]'
  '--sort[should tags be sorted (optionally ignoring case) \[yes\]?.]'
  '--tag-relative[should paths be relative to location of tag file \[no; yes when -e\]?]'
  '--totals[print statistics about source and tag files \[no\].]'
  '--verbose[enable verbose messages describing actions on each source file.]'
  '--version[print version identifier to standard output.]'
  '*:filename:_files'
)

_arguments -s $arguments
