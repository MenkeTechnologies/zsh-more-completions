#compdef f2py3.11

local arguments

arguments=(
  '-h[write signatures of the fortran routines to file <filename>]'
  '-m[name of the module; f2py generates a Python/C API]'
  '--lower[assumed with -h key, and --no-lower without -h key.]'
  '--build-dir[all f2py generated files are created in <dirname>.]'
  '--overwrite-signature[overwrite existing signature file.]'
  '--short-latex[create incomplete LaTeX document (without commands]'
  '--debug-capi[create C/API code that reports the state of the wrappers]'
  '--include-paths[1>:<path2>:...   Search include files from the given]'
  '--help-link[..\] List system resources found by system_info.py. See also]'
  '--link-[<resource> switch below. \[..\] is optional list]'
  '--f2cmap[load Fortran-to-Python KIND specification from the given]'
  '--quiet[run quietly.]'
  '--verbose[run with extra verbosity.]'
  '--skip-empty-wrappers[only generate wrapper files when needed.]'
  '-v[print f2py version ID and exit.]'
  '--fcompiler[specify Fortran compiler type by vendor \[NO_MESON\]]'
  '--compiler[specify distutils C compiler type \[NO_MESON\]]'
  '--help-fcompiler[list available Fortran compilers and exit \[NO_MESON\]]'
  '--f77exec[specify the path to F77 compiler \[NO_MESON\]]'
  '--f90exec[specify the path to F90 compiler \[NO_MESON\]]'
  '--f77flags[specify F77 compiler flags]'
  '--f90flags[specify F90 compiler flags]'
  '--opt[specify optimization flags \[NO_MESON\]]'
  '--arch[specify architecture specific optimization flags \[NO_MESON\]]'
  '--noopt[compile without optimization \[NO_MESON\]]'
  '--noarch[compile without arch-dependent optimization \[NO_MESON\]]'
  '--debug[compile with debugging information]'
  '--dep[<dependency>]'
  '--backend[<backend_type>]'
  '--link-[<resource>    Link extension module with <resource> as defined]'
  '-L[/path/to/lib/ -l<libname>]'
  '-D[<define> -U<name>]'
  '-I[/path/to/include/]'
  '-DPREPEND[_FORTRAN -DNO_APPEND_FORTRAN -DUPPERCASE_FORTRAN]'
  '-DUNDERSCORE[_G77]'
  '*:filename:_files'
)

_arguments -s $arguments
