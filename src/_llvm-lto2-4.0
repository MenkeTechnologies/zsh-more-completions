#compdef llvm-lto2-4.0

local arguments

arguments=(
  '-O[Optimization level. \[-O0, -O1, -O2, or -O3\] (default = -O2)]'
  '-aa-pipeline[Alias Analysis Pipeline]'
  '-aarch64-neon-syntax[Choose style of NEON code to emit from AArch64 backend:]'
  '-amdgpu-dump-rtmd[Dump AMDGPU runtime metadata]'
  '-amdgpu-spill-sgpr-to-smem[Use scalar stores to spill SGPRs if supported by subtarget]'
  '-amdgpu-vgpr-index-mode[Use GPR indexing mode instead of movrel for vector indexing]'
  '-arm-execute-only[-]'
  '-arm-implicit-it[Allow conditional instructions outdside of an IT block]'
  '-asm-instrumentation[Instrumentation of inline assembly and assembly source files]'
  '-asm-show-inst[Emit internal instruction representation to assembly file]'
  '-bounds-checking-single-trap[Use one trap block per function]'
  '-cache-dir[Cache Directory]'
  '-cg-opt-level[Codegen optimization level (0, 1, 2 or 3, default = 2)]'
  '-code-model[Choose code model]'
  '-color[use colored syntax highlighting (default=autodetect)]'
  '-cvp-dont-process-adds[-]'
  '-data-sections[Emit data into separate sections]'
  '-debugger-tune[Tune debug info for a particular debugger]'
  '-default-triple[Replace unspecified target triples in input files with this triple]'
  '-denormal-fp-math[Select which denormal numbers the code is permitted to require]'
  '-disable-fp-elim[Disable frame pointer elimination optimization]'
  '-disable-spill-fusing[Disable fusing of spill code into instructions]'
  '-disable-tail-calls[Never emit tail calls]'
  '-dwarf-version[Dwarf version]'
  '-emulated-tls[Use emulated TLS model]'
  '-enable-fp-mad[Enable less precise MAD instructions to be generated]'
  '-enable-implicit-null-checks[Fold null checks into faulting memory operations]'
  '-enable-load-pre[-]'
  '-enable-name-compression[Enable name string compression]'
  '-enable-no-infs-fp-math[Enable FP math optimizations that assume no +-Infs]'
  '-enable-no-nans-fp-math[Enable FP math optimizations that assume no NaNs]'
  '-enable-no-trapping-fp-math[Enable setting the FP exceptions build attribute not to use exceptions]'
  '-enable-objc-arc-opts[enable/disable all ARC Optimizations]'
  '-enable-scoped-noalias[-]'
  '-enable-tbaa[-]'
  '-enable-unsafe-fp-math[Enable optimizations that may decrease FP precision]'
  '-exception-model[exception model]'
  '-exhaustive-register-search[Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring]'
  '-expensive-combines[Enable expensive instruction combines]'
  '-fatal-warnings[Treat warnings as errors]'
  '-filetype[Choose a file type (not all types are supported by all targets):]'
  '-filter-print-funcs[names> - Only print IR for functions whose name match this for all print-\[before|after\]\[-all\] options]'
  '-float-abi[Choose float ABI type]'
  '-fp-contract[Enable aggressive formation of fused FP ops]'
  '-function-sections[Emit functions into separate sections]'
  '-gpsize[Global Pointer Addressing Size. The default size is 8.]'
  '-hash-based-counter-split[Rename counter variable of a comdat function based on cfg hash]'
  '-ignore-empty-index-file[Ignore an empty index file and perform non-ThinLTO compilation]'
  '-imp-null-check-page-size[The page size of the target in bytes]'
  '-imp-null-max-insts-to-consider[The max number of instructions to consider hoisting loads over (the algorithm is quadratic over this number)]'
  '-incremental-linker-compatible[When used with filetype=obj, emit an object file which can be used with an incremental linker]'
  '-internalize-public-api-file[A file containing list of symbol names to preserve]'
  '-internalize-public-api-list[A list of symbol names to preserve]'
  '-join-liveintervals[Coalesce copies (default=true)]'
  '-limit-float-precision[Generate low-precision inline sequences for some float libcalls]'
  '-lto-pass-remarks-output[Output filename for pass remarks]'
  '-march[Architecture to generate code for (see --version)]'
  '-mattr[1,+a2,-a3,...> - Target specific attributes (-mattr=help for details)]'
  '-mc-relax-all[When used with filetype=obj, relax all fixups in the emitted object file]'
  '-mcpu[Target a specific cpu type (-mcpu=help for details)]'
  '-meabi[Set EABI type (default depends on triple):]'
  '-merror-missing-parenthesis[Error for missing parenthesis around predicate registers]'
  '-merror-noncontigious-register[Error for register names that arent contigious]'
  '-mfuture-regs[Enable future registers]'
  '-mips-compact-branches[MIPS Specific: Compact branch policy.]'
  '-mips16-constant-islands[Enable mips16 constant islands.]'
  '-mips16-hard-float[Enable mips16 hard float.]'
  '-mno-compound[Disable looking for compound instructions for Hexagon]'
  '-mno-fixup[Disable fixing up resolved relocations for Hexagon]'
  '-mno-ldc1-sdc1[Expand double precision loads and stores to their single precision counterparts]'
  '-mno-pairing[Disable looking for duplex instructions for Hexagon]'
  '-mwarn-missing-parenthesis[Warn for missing parenthesis around predicate registers]'
  '-mwarn-noncontigious-register[Warn for register names that arent contigious]'
  '-mwarn-sign-mismatch[Warn for mismatching a signed and unsigned value]'
  '-no-deprecated-warn[Suppress all deprecated warnings]'
  '-no-discriminators[Disable generation of discriminator information.]'
  '-no-warn[Suppress all warnings]'
  '-nozero-initialized-in-bss[Dont place zero-initialized symbols into bss section]'
  '-nvptx-sched4reg[NVPTX Specific: schedule for register pressue]'
  '-o[Output filename]'
  '-opt-pipeline[Optimizer Pipeline]'
  '-override-triple[Replace target triples in input files with this triple]'
  '-pie-copy-relocations[PIE Copy Relocations]'
  '-print-after-all[Print IR after each pass]'
  '-print-before-all[Print IR before each pass]'
  '-print-machineinstrs[Print machine instrs]'
  '-r[Specify a symbol resolution: filename,symbolname,resolution]'
  '-r600-ir-structurize[Use StructurizeCFG IR pass]'
  '-rdf-dump[-]'
  '-rdf-limit[-]'
  '-regalloc[Register allocator to use]'
  '-relax-elf-relocations[Emit GOTPCRELX/REX_GOTPCRELX instead of GOTPCREL on x86-64 ELF]'
  '-relocation-model[Choose relocation model]'
  '-rewrite-map-file[Symbol Rewrite Map]'
  '-rng-seed[Seed for the random number generator]'
  '-sample-profile-check-record-coverage[Emit a warning if less than N% of records in the input profile are matched to the IR.]'
  '-sample-profile-check-sample-coverage[Emit a warning if less than N% of samples in the input profile are matched to the IR.]'
  '-sample-profile-inline-hot-threshold[Inlined functions that account for more than N% of all samples collected in the parent function, will be inlined again.]'
  '-sample-profile-max-propagate-iterations[Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.]'
  '-save-temps[Save temporary files]'
  '-stack-alignment[Override default stack alignment]'
  '-stack-symbol-ordering[Order local stack symbols.]'
  '-stackmap-version[Specify the stackmap encoding version (default = 2)]'
  '-stackrealign[Force align the stack to the minimum alignment]'
  '-static-func-full-module-prefix[Use full module build paths in the profile counter names for static functions.]'
  '-stats[Enable statistics output from program (available with Asserts)]'
  '-stats-json[Display statistics as json data]'
  '-summary-file[The summary file to use for function importing.]'
  '-tailcallopt[Turn fastcc calls into tail calls by (potentially) changing ABI.]'
  '-thinlto-distributed-indexes[Write out individual index and import files for the distributed backend case]'
  '-thinlto-threads[-]'
  '-thread-model[Choose threading model]'
  '-threads[-]'
  '-time-passes[Time each pass, printing elapsed time for each on exit]'
  '-unique-section-names[Give unique names to every section]'
  '-use-ctors[Use .ctors instead of .init_array.]'
  '-verify-debug-info[-]'
  '-verify-dom-info[Verify dominator info (time consuming)]'
  '-verify-loop-info[Verify loop info (time consuming)]'
  '-verify-loop-lcssa[Verify loop lcssa form (time consuming)]'
  '-verify-machine-dom-info[Verify machine dominator info (time consuming)]'
  '-verify-regalloc[Verify during register allocation]'
  '-verify-region-info[Verify region info (time consuming)]'
  '-verify-scev[Verify ScalarEvolutions backedge taken counts (slow)]'
  '-verify-scev-maps[Verify no dangling value in ScalarEvolutions ExprValueMap (slow)]'
  '-vp-counters-per-site[The average number of profile counters allocated per value profiling site.]'
  '-vp-static-alloc[Do static counter allocation for value profiler]'
  '-x86-asm-syntax[Choose style of code to emit from X86 backend:]'
  '-help[Display available options (-help-hidden for more)]'
  '-help-list[Display list of available options (-help-list-hidden for more)]'
  '-version[Display the version of this program]'
  '*:filename:_files'
)

_arguments -s $arguments
