#compdef behave

local arguments

arguments=(
  '(- * :)'{-h,--help}'[show this help message and exit]'
  {-c,--no-color}'[disable the use of ANSI color escapes.]'
  '--color[use ANSI color escapes. This is the default behaviour.]'
  {-d,--dry-run}'[invokes formatters without executing the steps.]'
  '-D[VALUE, --define NAME=VALUE]'
  {-e,--exclude}'[dont run feature files matching regular expression]'
  {-i,--include}'[only run feature files matching regular expression]'
  '--no-junit[dont output JUnit-compatible reports.]'
  '--junit[output JUnit-compatible reports. When junit is]'
  '--junit-directory[directory in which to store JUnit reports.]'
  {-f,--format}'[specify a formatter. If none is specified the default]'
  '--steps-catalog[show a catalog of all available step definitions. SAME]'
  {-k,--no-skipped}'[dont print skipped steps (due to tags).]'
  '--show-skipped[print skipped steps. This is the default behaviour.]'
  '--no-snippets[dont print snippets for unimplemented steps.]'
  '--snippets[print snippets for unimplemented steps. This is the]'
  {-m,--no-multiline}'[dont print multiline strings and tables under steps.]'
  '--multiline[print multiline strings and tables under steps. This]'
  {-n,--name}'[only execute the feature elements which match part of]'
  '--no-capture[dont capture stdout (any stdout output will be]'
  '--capture[capture stdout (any stdout output will be printed if]'
  '--no-capture-stderr[dont capture stderr (any stderr output will be]'
  '--capture-stderr[capture stderr (any stderr output will be printed if]'
  '--no-logcapture[dont capture logging. Logging configuration will be]'
  '--logcapture[capture logging. All logging during a step will be]'
  '--logging-level[specify a level to capture logging at. The default is]'
  '--logging-format[specify custom format to print statements. Uses the]'
  '--logging-datefmt[specify custom date/time format to print statements.]'
  '--logging-filter[specify which statements to filter in/out. By default]'
  '--logging-clear-handlers[clear all other logging handlers.]'
  '--no-summary[dont display the summary at the end of the run.]'
  '--summary[display the summary at the end of the run.]'
  {-o,--outfile}'[write to specified file instead of stdout.]'
  {-q,--quiet}'[alias for --no-snippets --no-source.]'
  {-s,--no-source}'[dont print the file and line of the step definition]'
  '--show-source[print the file and line of the step definition with]'
  '--stage[defines the current test stage. The test stage name is]'
  '--stop[stop running tests at the first failure.]'
  {-t,--tags}'[only execute features or scenarios with tags matching]'
  {-T,--no-timings}'[dont print the time taken for each step.]'
  '--show-timings[print the time taken, in seconds, of each step after]'
  {-v,--verbose}'[show the files and features loaded.]'
  {-w,--wip}'[only run scenarios tagged with "wip". Additionally:]'
  {-x,--expand}'[expand scenario outline tables in output.]'
  '--lang[use keywords for a language other than English.]'
  '--lang-list[list the languages available for --lang.]'
  '--lang-help[list the translations accepted for one language.]'
  '--tags-help[show help for tag expressions.]'
  '--version[show version.]'
  '*:filename:_files'
)

_arguments -s $arguments
