#compdef rust-gdb

local arguments

arguments=(
  '--args[arguments after executable-file are passed to inferior]'
  '--core[analyze the core dump COREFILE.]'
  '--exec[use EXECFILE as the executable.]'
  '--pid[attach to running process PID.]'
  '--directory[search for source files in DIR.]'
  '--se[use FILE as symbol file and executable file.]'
  '--symbols[read symbols from SYMFILE.]'
  '--readnow[fully read symbol files on first access.]'
  '--readnever[do not read symbol files.]'
  '--write[set writing into executable and core files.]'
  {--command,-x}'[GDB commands from FILE.]'
  {--init-command,-ix}'[like -x but execute commands before loading inferior.]'
  {--eval-command,-ex}'[execute a single GDB command.]'
  {--init-eval-command,-iex}'[like -ex but before loading inferior.]'
  '--nh[do not read ~/.gdbinit.]'
  '--nx[do not read any .gdbinit files in any directory.]'
  '--fullname[output information used by emacs-GDB interface.]'
  '--interpreter[select a specific interpreter / user interface]'
  '--tty[use TTY for input/output by the program being debugged.]'
  '-w[use the GUI interface.]'
  '--nw[do not use the GUI interface.]'
  '--tui[use a terminal user interface.]'
  '--dbx[DBX compatibility mode.]'
  {-q,--quiet,--silent}'[do not print version number on startup.]'
  '--batch[exit after processing options.]'
  '--batch-silent[like --batch, but suppress all gdb stdout output.]'
  '--return-child-result[GDB exit code will be the childs exit code.]'
  '--configuration[print details about GDB configuration and then exit.]'
  '--help[print this message and then exit.]'
  '--version[print version information and then exit.]'
  '-b[set serial port baud rate used for remote debugging.]'
  '-l[set timeout in seconds for remote debugging.]'
  '--cd[change current directory to DIR.]'
  {--data-directory,-D}'[set GDBs data-directory to DIR.]'
  '*:filename:_files'
)

_arguments -s $arguments
