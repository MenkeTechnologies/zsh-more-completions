#compdef ebtables-nft

local arguments

arguments=(
  {--append,-A}'[append to chain]'
  {--delete,-D}'[delete matching rule from chain]'
  {--delete,-D}'[rulenum : delete rule at position rulenum from chain]'
  {--change-counters,-C}'[\[rulenum\] pcnt bcnt : change counters of existing rule]'
  {--insert,-I}'[rulenum : insert rule at position rulenum in chain]'
  {--list,-L}'[list the rules in a chain or in all chains]'
  {--flush,-F}'[delete all rules in chain or in all chains]'
  '--init-table[replace the kernel table with the initial table]'
  {--zero,-Z}'[put counters on zero in chain or in all chains]'
  {--policy,-P}'[target : change policy on chain to target]'
  {--new-chain,-N}'[create a user defined chain]'
  {--rename-chain,-E}'[new : rename a chain]'
  {--delete-chain,-X}'[delete a user defined chain]'
  '--atomic-commit[update the kernel w/t table contained in <FILE>]'
  '--atomic-init[put the initial kernel table into <FILE>]'
  '--atomic-save[put the current kernel table into <FILE>]'
  '--atomic-file[set <FILE> to file]'
  {--proto,-p}'[!\] proto : protocol hexadecimal, by name or LENGTH]'
  {--src,-s}'[!\] address\[/mask\]: source mac address]'
  {--dst,-d}'[!\] address\[/mask\]: destination mac address]'
  {--in-if,-i}'[!\] name\[+\] : network input interface name]'
  {--out-if,-o}'[!\] name\[+\] : network output interface name]'
  '--logical-in[\[!\] name\[+\] : logical bridge input interface name]'
  '--logical-out[!\] name\[+\] : logical bridge output interface name]'
  {--set-counters,-c}'[pcnt bcnt : set the counters of the to be added rule]'
  {--modprobe,-M}'[try to insert modules using this program]'
  '--concurrent[use a file lock to support concurrent scripts]'
  {--version,-V}'[print package version]'
  '*:filename:_files'
)

_arguments -s $arguments
