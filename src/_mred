#compdef mred

local arguments

arguments=(
  {-e,--eval}'[Evaluate <exprs>, prints results]'
  {-f,--load}'[Like -e (load "<file>") without printing]'
  {-t,--require}'[Like -e (require (file "<file>")) \[*\]]'
  {-l,--lib}'[Like -e (require (lib "<path>")) \[*\]]'
  '-p[Like -e (require (planet "<package>") \[*\]]'
  {-r,--script}'[Same as -f <file> -N <file> --]'
  {-u,--require-script}'[Same as -t <file> -N <file> --]'
  '-k[Load executable-embedded code from offset <n> to <p>]:m::p:'
  {-m,--main}'[call `main with command-line arguments, print results]'
  {-i,--repl}'[run interactive read-eval-print loop; implies -v]'
  {-n,--no-lib}'[skip `(require (lib "<init-lib>")) for -i/-e/-f/-r]'
  {-v,--version}'[show version]'
  {-K,--back}'[dont bring application to the foreground (Mac OS X)]'
  {-V,--no-yield}'[skip `((executable-yield-handler) <status>) on exit]'
  {-c,--no-compiled}'[disable loading of compiled files]'
  {-q,--no-init-file}'[skip load of ~/.gracketrc for -i]'
  {-z,--text-repl}'[use text `read-eval-print-loop for -i]'
  '-I[Set <init-lib> to <path> (sets language)]'
  {-X,--collects}'[Main collects at <dir> (or "" disables all)]'
  {-S,--search}'[More collects at <dir> (after main collects)]'
  {-G,--config}'[Main configuration directory at <dir>]'
  {-A,--addon}'[Addon directory at <dir>]'
  {-U,--no-user-path}'[ignore user-specific collects, etc.]'
  {-R,--compiled}'[Set compiled-file search roots to <paths>]'
  {-C,--cross}'[cross-build mode; save current collects and config as host]'
  {-N,--name}'[Sets `(find-system-path run-file) to <file>]'
  {-J,---wm-class}'[Set WM_CLASS class to <name> (Unix)]'
  {-j,--no-jit}'[disable the just-in-time compiler]'
  {-d,--no-delay}'[Disable on-demand loading of syntax and code]'
  {-b,--binary}'[read stdin and write stdout/stderr in binary mode]'
  {-W,--warn}'[Set stderr logging to <levels>]'
  {-O,--stdout}'[Set stdout logging to <levels>]'
  {-L,--syslog}'[Set syslog logging to <levels>]'
  '(- * :)'{-h,--help}'[show this information and exits, ignoring other options]'
  '*:filename:_files'
)

_arguments -s $arguments
