#compdef _mocha

local arguments

arguments=(
  {-V,--version}'[output the version number]'
  {-A,--async-only}'[force all tests to take a callback (async) or return a promise]'
  {-c,--colors}'[force enabling of colors]'
  {-C,--no-colors}'[force disabling of colors]'
  {-G,--growl}'[enable growl notification support]'
  {-O,--reporter-options}'[v,k2=v2,...> reporter-specific options]'
  {-R,--reporter}'[specify the reporter to use (default: spec)]'
  {-S,--sort}'[sort test files]'
  {-b,--bail}'[bail after first test failure]'
  {-d,--debug}'[enable nodes debugger, synonym for node --debug]'
  {-g,--grep}'[only run tests matching <pattern>]'
  {-f,--fgrep}'[only run tests containing <string>]'
  {-gc,--expose-gc}'[expose gc extension]'
  {-i,--invert}'[inverts --grep and --fgrep matches]'
  {-r,--require}'[require the given module]'
  {-s,--slow}'["slow" test threshold in milliseconds \[75\]]'
  {-t,--timeout}'[set test-case timeout in milliseconds \[2000\]]'
  {-u,--ui}'[specify user-interface (bdd|tdd|qunit|exports) (default: bdd)]'
  {-w,--watch}'[watch files for changes]'
  '--check-leaks[check for global variable leaks]'
  '--full-trace[display the full stack trace]'
  '--compilers[use the given module(s) to compile files (default: )]'
  '--debug-brk[enable nodes debugger breaking on the first line]'
  '--globals[allow the given comma-delimited global \[names\] (default: )]'
  '--es[_staging enable all staged features]'
  '--harmony[all node --harmony* flags are available]:_classes,_generators,...:'
  '--preserve-symlinks[instructs the module loader to preserve symbolic links when resolving and caching modules]'
  '--icu-data-dir[include ICU data]'
  '--inline-diffs[display actual/expected differences inline within each string]'
  '--no-diff[do not show a diff on failure]'
  '--inspect[activate devtools in chrome]'
  '--inspect-brk[activate devtools in chrome and break on the first line]'
  '--interfaces[display available interfaces]'
  '--no-deprecation[silence deprecation warnings]'
  '--exit[force shutdown of the event loop after test run: mocha will call process.exit]'
  '--no-timeouts[disables timeouts, given implicitly with --debug]'
  '--no-warnings[silence all node process warnings]'
  '--opts[specify opts path (default: test/mocha.opts)]'
  '--perf-basic-prof[enable perf linux profiler (basic support)]'
  '--napi-modules[enable experimental NAPI modules]'
  '--prof[log statistical profiling information]'
  '--log-timer-events[time events including external callbacks]'
  '--recursive[include sub directories]'
  '--reporters[display available reporters]'
  '--retries[set numbers of time to retry a failed test case]'
  '--throw-deprecation[throw an exception anytime a deprecated function is used]'
  '--trace[trace function calls]'
  '--trace-deprecation[show stack traces on deprecations]'
  '--trace-warnings[show stack traces on node process warnings]'
  '--use[_strict enforce strict mode]'
  '--watch-extensions[additional extensions to monitor with --watch (default: js)]'
  '--delay[wait for async suite definition]'
  '--allow-uncaught[enable uncaught errors to propagate]'
  '--forbid-only[causes test marked with only to fail the suite]'
  '--forbid-pending[causes pending tests and test marked with skip to fail the suite]'
  '--file[include a file to be ran during the suite (default: )]'
  '--exclude[a file or glob pattern to ignore (default: )]'
  '(- * :)'{-h,--help}'[output usage information]'
  '*:filename:_files'
)

_arguments -s $arguments
