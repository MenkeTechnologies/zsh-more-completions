#compdef sipp

local arguments

arguments=(
  '-v[Display version and copyright information.]'
  '-aa[Enable automatic 200 OK answer for INFO, UPDATE and]'
  '-auth[_uri : Force the value of the URI for authentication.]'
  '-au[Set authorization username for authentication challenges.]'
  '-ap[Set the password for authentication challenges. Default]'
  '-base[_cseq : Start value of \[cseq\] for each call.]'
  '-bg[Launch SIPp in background mode.]'
  '-bind[_local : Bind socket to local IP address, i.e. the local IP]'
  '-buff[_size : Set the send and receive buffer size.]'
  '-calldebug[_file : Set the name of the call debug file.]'
  '-calldebug[_overwrite: Overwrite the call debug file (default true).]'
  '-cid[_str : Call ID string (default %u-%p@%s). %u=call_number]'
  '-ci[Set the local control IP address]'
  '-cp[Set the local control port number. Default is 8888.]'
  '-d[Controls the length of calls. More precisely, this]'
  '-deadcall[_wait : How long the Call-ID and final status of calls should be]'
  '-default[_behaviors: Set the default behaviors that SIPp will use. Possbile]'
  '-error[_file : Set the name of the error log file.]'
  '-error[_overwrite : Overwrite the error log file (default true).]'
  '-f[Set the statistics report frequency on screen. Default is]'
  '-fd[Set the statistics dump log report frequency. Default is]'
  '-i[Set the local IP address for Contact:,Via:, and]'
  '-inf[Inject values from an external CSV file during calls into]'
  '-inf[1.csv -inf f2.csv ...)]'
  '-infindex[file field]'
  '-ip[_field : Set which field from the injection file contains the IP]'
  '-l[Set the maximum number of simultaneous calls. Once this]'
  '-log[_file : Set the name of the log actions log file.]'
  '-log[_overwrite : Overwrite the log actions log file (default true).]'
  '-lost[Set the number of packets to lose by default (scenario]'
  '-rtcheck[Select the retransmisison detection method: full]'
  '-m[Stop the test and exit when calls calls are processed]'
  '-mi[Set the local media IP address (default: local primary]'
  '-master[3pcc extended mode: indicates the master number]'
  '-max[_recv_loops : Set the maximum number of messages received read per]'
  '-max[_sched_loops : Set the maximum number of calsl run per event loop.]'
  '-max[_reconnect : Set the the maximum number of reconnection.]'
  '-max[_retrans : Maximum number of UDP retransmissions before call ends on]'
  '-max[_invite_retrans: Maximum number of UDP retransmissions for invite]'
  '-max[_non_invite_retrans: Maximum number of UDP retransmissions for non-invite]'
  '-max[_log_size : What is the limit for error and message log file sizes.]'
  '-max[_socket : Set the max number of sockets to open simultaneously.]'
  '-mb[Set the RTP echo buffer size (default: 2048).]'
  '-message[_file : Set the name of the message log file.]'
  '-message[_overwrite: Overwrite the message log file (default true).]'
  '-mp[Set the local RTP echo port number. Default is 6000.]'
  '-nd[No Default. Disable all default behavior of SIPp which]'
  '-nr[Disable retransmission in UDP mode.]'
  '-nostdin[Disable stdin.]'
  '-p[Set the local port number. Default is a random free port]'
  '-pause[_msg_ign : Ignore the messages received during a pause defined in]'
  '-periodic[_rtd : Reset response time partition counters each logging]'
  '-plugin[Load a plugin.]'
  '-r[Set the call rate (in calls per seconds). This value can]'
  '-rp[Specify the rate period for the call rate. Default is 1]'
  '-rp[).]'
  '-r[0 -rp 5s => 10 calls every 5 seconds.]'
  '-rate[_scale : Control the units for the +, -, *, and / keys.]'
  '-rate[_increase : Specify the rate increase every -fd units (default is]'
  '-rate[_max : If -rate_increase is set, then quit after the rate]'
  '-no[_rate_quit : If -rate_increase is set, do not quit after the rate]'
  '-recv[_timeout : Global receive timeout. Default unit is milliseconds. If]'
  '-send[_timeout : Global send timeout. Default unit is milliseconds. If a]'
  '-sleep[How long to sleep for at startup. Default unit is]'
  '-reconnect[_close : Should calls be closed on reconnect?]'
  '-reconnect[_sleep : How long (in milliseconds) to sleep between the close and]'
  '-ringbuffer[_files: How many error/message files should be kept after]'
  '-ringbuffer[_size : How large should error/message files be before they get]'
  '-rsa[Set the remote sending address to host:port for sending]'
  '-rtp[_echo : Enable RTP echo. RTP/UDP packets received on port defined]'
  '-rtt[_freq : freq is mandatory. Dump response times every freq calls]'
  '-s[Set the username part of the resquest URI. Default is]'
  '-sd[Dumps a default scenario (embeded in the sipp executable)]'
  '-sf[Loads an alternate xml scenario file. To learn more]'
  '-shortmessage[_file: Set the name of the short message log file.]'
  '-shortmessage[_overwrite: Overwrite the short message log file (default true).]'
  '-oocsf[Load out-of-call scenario.]'
  '-oocsn[Load out-of-call scenario.]'
  '-skip[_rlimit : Do not perform rlimit tuning of file descriptor limits.]'
  '-slave[3pcc extended mode: indicates the slave number]'
  '-slave[_cfg : 3pcc extended mode: indicates the file where the master]'
  '-sn[Use a default scenario (embedded in the sipp executable).]'
  '-stat[_delimiter : Set the delimiter for the statistics file]'
  '-stf[Set the file name to use to dump statistics]'
  '-t[Set the transport mode:]'
  '-timeout[Global timeout. Default unit is seconds. If this option]'
  '-timeout[_error : SIPp fails if the global timeout is reached is set]'
  '-timer[_resol : Set the timer resolution. Default unit is milliseconds.]'
  '-T2[Global T2-timer in milli seconds]'
  '-sendbuffer[_warn : Produce warnings instead of errors on SendBuffer]'
  '-trace[_msg : Displays sent and received SIP messages in <scenario file]'
  '-trace[_shortmsg : Displays sent and received SIP messages as CSV in]'
  '-trace[_screen : Dump statistic screens in the]'
  '-trace[_err : Trace all unexpected messages in <scenario file]'
  '-trace[_calldebug : Dumps debugging information about aborted calls to]'
  '-trace[_stat : Dumps all statistics in <scenario_name>_<pid>.csv file.]'
  '-trace[_counts : Dumps individual message counts in a CSV file.]'
  '-trace[_rtt : Allow tracing of all response times in <scenario file]'
  '-trace[_logs : Allow tracing of <log> actions in <scenario file]'
  '-users[Instead of starting calls at a fixed rate, begin users]'
  '-watchdog[_interval: Set gap between watchdog timer firings. Default is 400.]'
  '-watchdog[_reset : If the watchdog timer has not fired in more than this]'
  '-watchdog[_minor_threshold: If it has been longer than this period between watchdog]'
  '-watchdog[_major_threshold: If it has been longer than this period between watchdog]'
  '-watchdog[_major_maxtriggers: How many times the major watchdog timer can be tripped]'
  '-watchdog[_minor_maxtriggers: How many times the minor watchdog timer can be tripped]'
  '-3pcc[Launch the tool in 3pcc mode ("Third Party call]'
  '-tdmmap[Generate and handle a table of TDM circuits.]'
  '-key[keyword value]'
  '-set[variable value]'
  '-dynamicStart[variable value]'
  '-dynamicMax[variable value]'
  '-dynamicStep[variable value]'
  '-1[Fatal error]'
  '-2[Fatal error binding a socket]'
  '*:filename:_files'
)

_arguments -s $arguments
