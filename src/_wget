#compdef wget

local arguments

arguments=(
  {-V,--version}'[display the version of Wget and exit]'
  {-h,--help}'[print this help]'
  {-b,--background}'[go to background after startup]'
  {-e,--execute}'[execute a `.wgetrc-style command]'
  {-o,--output-file}'[log messages to FILE]'
  {-a,--append-output}'[append messages to FILE]'
  {-d,--debug}'[print lots of debugging information]'
  {-q,--quiet}'[quiet (no output)]'
  {-v,--verbose}'[be verbose (this is the default)]'
  {-nv,--no-verbose}'[turn off verboseness, without being quiet]'
  '--report-speed[output bandwidth as TYPE.  TYPE can be bits]'
  {-i,--input-file}'[download URLs found in local or external FILE]'
  '--input-metalink[download files covered in local Metalink FILE]'
  {-F,--force-html}'[treat input file as HTML]'
  {-B,--base}'[resolves HTML input-file links (-i -F)]'
  '--config[specify config file to use]'
  '--no-config[do not read any config file]'
  '--rejected-log[log reasons for URL rejection to FILE]'
  {-t,--tries}'[set number of retries to NUMBER (0 unlimits)]'
  '--retry-connrefused[retry even if connection is refused]'
  '--retry-on-http-error[comma-separated list of HTTP errors to retry]'
  {-O,--output-document}'[write documents to FILE]'
  {-nc,--no-clobber}'[skip downloads that would download to]'
  '--no-netrc[dont try to obtain credentials from .netrc]'
  {-c,--continue}'[resume getting a partially-downloaded file]'
  '--start-pos[start downloading from zero-based position OFFSET]'
  '--progress[select progress gauge type]'
  '--show-progress[display the progress bar in any verbosity mode]'
  {-N,--timestamping}'[dont re-retrieve files unless newer than]'
  '--no-if-modified-since[dont use conditional if-modified-since get]'
  '--no-use-server-timestamps[dont set the local files timestamp by]'
  {-S,--server-response}'[print server response]'
  '--spider[dont download anything]'
  {-T,--timeout}'[set all timeout values to SECONDS]'
  '--dns-servers[list of DNS servers to query (comma separated)]'
  '--bind-dns-address[bind DNS resolver to ADDRESS (hostname or IP) on local host]'
  '--dns-timeout[set the DNS lookup timeout to SECS]'
  '--connect-timeout[set the connect timeout to SECS]'
  '--read-timeout[set the read timeout to SECS]'
  {-w,--wait}'[wait SECONDS between retrievals]'
  '--waitretry[wait 1..SECONDS between retries of a retrieval]'
  '--random-wait[wait from 0.5*WAIT...1.5*WAIT secs between retrievals]'
  '--no-proxy[explicitly turn off proxy]'
  {-Q,--quota}'[set retrieval quota to NUMBER]'
  '--bind-address[bind to ADDRESS (hostname or IP) on local host]'
  '--limit-rate[limit download rate to RATE]'
  '--no-dns-cache[disable caching DNS lookups]'
  '--restrict-file-names[restrict chars in file names to ones OS allows]'
  '--ignore-case[ignore case when matching files/directories]'
  {-4,--inet4-only}'[connect only to IPv4 addresses]'
  {-6,--inet6-only}'[connect only to IPv6 addresses]'
  '--prefer-family[connect first to addresses of specified family]'
  '--user[set both ftp and http user to USER]'
  '--password[set both ftp and http password to PASS]'
  '--ask-password[prompt for passwords]'
  '--use-askpass[specify credential handler for requesting]'
  '--no-iri[turn off IRI support]'
  '--local-encoding[use ENC as the local encoding for IRIs]'
  '--remote-encoding[use ENC as the default remote encoding]'
  '--unlink[remove file before clobber]'
  '--keep-badhash[keep files with checksum mismatch (append .badhash)]'
  '--metalink-index[metalink application/metalink4+xml metaurl ordinal NUMBER]'
  '--metalink-over-http[use Metalink metadata from HTTP response headers]'
  '--preferred-location[preferred location for Metalink resources]'
  '--no-xattr[turn off storage of metadata in extended file attributes]'
  {-nd,--no-directories}'[dont create directories]'
  {-x,--force-directories}'[force creation of directories]'
  {-nH,--no-host-directories}'[dont create host directories]'
  '--protocol-directories[use protocol name in directories]'
  {-P,--directory-prefix}'[save files to PREFIX/..]'
  '--cut-dirs[ignore NUMBER remote directory components]'
  '--http-user[set http user to USER]'
  '--http-password[set http password to PASS]'
  '--no-cache[disallow server-cached data]'
  '--default-page[change the default page name (normally]'
  {-E,--adjust-extension}'[save HTML/CSS documents with proper extensions]'
  '--ignore-length[ignore Content-Length header field]'
  '--header[insert STRING among the headers]'
  '--compression[choose compression, one of auto, gzip and none. (default: none)]'
  '--max-redirect[maximum redirections allowed per page]'
  '--proxy-user[set USER as proxy username]'
  '--proxy-password[set PASS as proxy password]'
  '--referer[include Referer: URL header in HTTP request]'
  '--save-headers[save the HTTP headers to file]'
  {-U,--user-agent}'[identify as AGENT instead of Wget/VERSION]'
  '--no-http-keep-alive[disable HTTP keep-alive (persistent connections)]'
  '--no-cookies[dont use cookies]'
  '--load-cookies[load cookies from FILE before session]'
  '--save-cookies[save cookies to FILE after session]'
  '--keep-session-cookies[load and save session (non-permanent) cookies]'
  '--post-data[use the POST method; send STRING as the data]'
  '--post-file[use the POST method; send contents of FILE]'
  '--method[use method "HTTPMethod" in the request]'
  '--body-data[send STRING as data. --method MUST be set]'
  '--body-file[send contents of FILE. --method MUST be set]'
  '--content-disposition[honor the Content-Disposition header when]'
  '--content-on-error[output the received content on server errors]'
  '--auth-no-challenge[send Basic HTTP authentication information]'
  '--secure-protocol[choose secure protocol, one of auto, SSLv2]'
  '--https-only[only follow secure HTTPS links]'
  '--no-check-certificate[dont validate the servers certificate]'
  '--certificate[client certificate file]'
  '--certificate-type[client certificate type, PEM or DER]'
  '--private-key[private key file]'
  '--private-key-type[private key type, PEM or DER]'
  '--ca-certificate[file with the bundle of CAs]'
  '--ca-directory[directory where hash list of CAs is stored]'
  '--crl-file[file with bundle of CRLs]'
  '--pinnedpubkey[/HASHES  Public key (PEM/DER) file, or any number]'
  '--random-file[file with random data for seeding the SSL PRNG]'
  '--ciphers[set the priority string (GnuTLS) or cipher list string (OpenSSL) directly.]'
  '--no-hsts[disable HSTS]'
  '--hsts-file[path of HSTS database (will override default)]'
  '--ftp-user[set ftp user to USER]'
  '--ftp-password[set ftp password to PASS]'
  '--no-remove-listing[dont remove .listing files]'
  '--no-glob[turn off FTP file name globbing]'
  '--no-passive-ftp[disable the "passive" transfer mode]'
  '--preserve-permissions[preserve remote file permissions]'
  '--retr-symlinks[when recursing, get linked-to files (not dir)]'
  '--ftps-implicit[use implicit FTPS (default port is 990)]'
  '--ftps-resume-ssl[resume the SSL/TLS session started in the control connection when]'
  '--ftps-clear-data-connection[cipher the control channel only; all the data will be in plaintext]'
  '--ftps-fallback-to-ftp[fall back to FTP if FTPS is not supported in the target server]'
  '--warc-file[save request/response data to a .warc.gz file]'
  '--warc-header[insert STRING into the warcinfo record]'
  '--warc-max-size[set maximum size of WARC files to NUMBER]'
  '--warc-cdx[write CDX index files]'
  '--warc-dedup[do not store records listed in this CDX file]'
  '--no-warc-compression[do not compress WARC files with GZIP]'
  '--no-warc-digests[do not calculate SHA1 digests]'
  '--no-warc-keep-log[do not store the log file in a WARC record]'
  '--warc-tempdir[location for temporary files created by the]'
  {-r,--recursive}'[specify recursive download]'
  {-l,--level}'[maximum recursion depth (inf or 0 for infinite)]'
  '--delete-after[delete files locally after downloading them]'
  {-k,--convert-links}'[make links in downloaded HTML or CSS point to]'
  '--convert-file-only[convert the file part of the URLs only (usually known as the basename)]'
  '--backups[before writing file X, rotate up to N backup 