#compdef waitress-serve-python2

local arguments

arguments=(
  '--help[show this information.]'
  '--call[call the given object to get the WSGI application.]'
  '--host[hostname or IP address on which to listen, default is 0.0.0.0]'
  '--port[TCP port on which to listen, default is 8080]'
  '--listen[tell waitress to listen on an ip port combination.]'
  '--listen[27.0.0.1:8080]'
  '--listen[1\]:8080]'
  '--listen[8080]'
  '--no-ipv4[]'
  '--no-ipv6[]'
  '--unix-socket[path of Unix socket. If a socket path is specified, a Unix domain]'
  '--unix-socket-perms[octal permissions to use for the Unix domain socket, default is]'
  '--url-scheme[default wsgi.url_scheme value, default is http.]'
  '--url-prefix[the ``SCRIPT_NAME`` WSGI environment value. Setting this to anything]'
  '--ident[server identity used in the Server header in responses. Default]'
  '--threads[number of threads used to process application logic, default is 4.]'
  '--backlog[connection backlog for the server. Default is 1024.]'
  '--recv-bytes[number of bytes to request when calling socket.recv(). Default is]'
  '--send-bytes[number of bytes to send to socket.send(). Default is 18000.]'
  '--outbuf-overflow[A temporary file should be created if the pending output is larger]'
  '--inbuf-overflow[A temporary file should be created if the pending input is larger]'
  '--connection-limit[stop creating new channelse if too many are already active.]'
  '--cleanup-interval[minimum seconds between cleaning up inactive channels. Default]'
  '--channel-timeout[maximum number of seconds to leave inactive connections open.]'
  '--max-request-header-size[maximum size of all request headers combined. Default is 262144]'
  '--max-request-body-size[maximum size of request body. Default is 1073741824 (1GB).]'
  '--asyncore-loop-timeout[the timeout value in seconds passed to asyncore.loop(). Default is 1.]'
  '--asyncore-use-poll[the use_poll argument passed to ``asyncore.loop()``. Helps overcome]'
  '*:filename:_files'
)

_arguments -s $arguments
