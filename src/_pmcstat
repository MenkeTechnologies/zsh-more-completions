#compdef pmcstat

local arguments

arguments=(
  '-C[(toggle) show cumulative counts]'
  '-D[create profiles in directory "path"]'
  '-E[(toggle) show counts at process exit]'
  '-F[write a system-wide callgraph (Kcachegrind format) to "file"]'
  '-G[write a system-wide callgraph to "file"]'
  '-M[print executable/gmon file map to "file"]'
  '-N[(toggle) capture callchains]'
  '-O[send log output to "file"]'
  '-P[allocate a process-private sampling PMC]'
  '-R[read events from "file"]'
  '-S[allocate a system-wide sampling PMC]'
  '-T[start in top mode]'
  '-W[(toggle) show counts per context switch]'
  '-a[print sampled PCs and callgraph to "file"]'
  '-c[set cpus for subsequent system-wide PMCs]'
  '-d[(toggle) track descendants]'
  '-e[use wide history counter for gprof(1) output]'
  '-f[pass "spec" to as plugin option]'
  '-g[produce gprof(1) compatible profiles]'
  '-k[set the path to the kernel]'
  '-l[set duration time]'
  '-m[print sampled PCs to "file"]'
  '-n[set sampling rate]'
  '-o[send print output to "file"]'
  '-p[allocate a process-private counting PMC]'
  '-q[suppress verbosity]'
  '-r[specify FS root directory]'
  '-s[allocate a system-wide counting PMC]'
  '-t[attach to running processes matching "process-spec"]'
  '-v[increase verbosity]'
  '-w[set printing time interval]'
  '-z[limit callchain display depth]'
  '*:filename:_files'
)

_arguments -s $arguments
