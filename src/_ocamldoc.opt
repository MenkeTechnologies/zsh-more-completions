#compdef ocamldoc.opt

local arguments

arguments=(
  '-absname[show absolute filenames in error messages]'
  '-I[add <dir> to the list of include directories]'
  '-impl[compile <file> as a .ml file]'
  '-intf[compile <file> as a .mli file]'
  '-intf-suffix[suffix for interface files (default: .mli)]'
  '-intf[_suffix <string> (deprecated) same as -intf-suffix]'
  '-labels[use commuting label mode]'
  '-modern[(deprecated) same as -labels]'
  '-alias-deps[do record dependencies for module aliases]'
  '-no-alias-deps[do not record dependencies for module aliases]'
  '-app-funct[activate applicative functors]'
  '-no-app-funct[deactivate applicative functors]'
  '-noassert[do not compile assertion checks]'
  '-nolabels[ignore non-optional labels in types]'
  '-nostdlib[do not add default directory to the list of include directories]'
  '-open[opens the module <module> before typing]'
  '-pp[pipe sources through preprocessor <command>]'
  '-ppx[pipe abstract syntax trees through preprocessor <command>]'
  '-principal[check principality of type inference]'
  '-no-principal[do not check principality of type inference (default)]'
  '-rectypes[allow arbitrary recursive types]'
  '-no-rectypes[do not allow arbitrary recursive types (default)]'
  '-safe-string[make strings immutable]'
  '-short-paths[shorten paths in types]'
  '-strict-sequence[left-hand part of a sequence must have type unit]'
  '-no-strict-sequence[left-hand part of a sequence need not have type unit (default)]'
  '-strict-formats[reject invalid formats accepted by legacy implementations]'
  '-no-strict-formats[accept invalid formats accepted by legacy implementations (default)]'
  '-thread[generate code that supports the system threads library]'
  '-unboxed-types[unannotated unboxable types will be unboxed]'
  '-no-unboxed-types[unannotated unboxable types will not be unboxed (default)]'
  '-unsafe-string[make strings mutable (default)]'
  '-v[print compiler version and location of standard library and exit]'
  '-verbose[print calls to external commands]'
  '-version[print version and exit]'
  '--version[print version and exit]'
  '-vmthread[generate code that supports the threads library with VM-level]'
  '-vnum[print version number and exit]'
  '-w[enable or disable warnings according to <list>:]'
  '-text[consider <file> as a .txt file]'
  '-warn-error[treat ocamldoc warnings as errors]'
  '-show-missed-crossref[show missed cross-reference opportunities]'
  '-hide-warnings[do not print ocamldoc warnings]'
  '-o[set the output file name, used by texi, latex and dot generators]'
  '-d[generate files in directory <dir>, rather than in current]'
  '-sort[sort the list of top modules before generating the documentation]'
  '-no-stop[do not stop at (**/**) comments]'
  '-no-custom-tags[do not allow custom @-tags]'
  '-stars[remove beginning blanks of comment lines, until the first *]'
  '-inv-merge-ml-mli[inverse implementations and interfaces when merging]'
  '-no-module-constraint-filter[not filter module elements using module type constraints]'
  '-keep-code[always keep code when available]'
  '-dump[dump collected information into <file>]'
  '-load[load information from <file> ; may be used several times]'
  '-t[use <title> as title for the generated documentation]'
  '-intro[use content of <file> as ocamldoc text to use as introduction]'
  '-hide[1,M2.M3,...> Hide the given complete module names in generated doc]'
  '-m[specify merge options between .mli and .ml]'
  '-html[generate HTML documentation]'
  '-latex[generate LaTeX documentation]'
  '-texi[generate TeXinfo documentation]'
  '-man[generate man pages]'
  '-dot[generate dot code of top modules dependencies]'
  '-customdir[custom generators standard directory and exit]'
  '-i[add the given directory to the search path for custom]'
  '-g[.cm\[o|a|xs\]> Load file defining a new documentation generator]'
  '-all-params[display the complete list of parameters for functions and]'
  '-css-style[use content of <file> as CSS style definition (HTML only)]'
  '-index-only[generate index files only (HTML only)]'
  '-colorize-code[colorize code even in documentation pages (HTML only)]'
  '-short-functors[use short form to display functor types (HTML only)]'
  '-charset[add information about character encoding being s]'
  '-noheader[suppress header in generated documentation]'
  '-notrailer[suppress trailer in generated documentation]'
  '-sepfiles[generate one file per toplevel module (LaTeX only)]'
  '-latextitle[style Associate {n } to the given sectionning style]'
  '-latex-value-prefix[use <string> as prefix for the LaTeX labels of values.]'
  '-latex-type-prefix[use <string> as prefix for the LaTeX labels of types.]'
  '-latex-exception-prefix[use <string> as prefix for the LaTeX labels of exceptions.]'
  '-latex-attribute-prefix[use <string> as prefix for the LaTeX labels of attributes.]'
  '-latex-method-prefix[use <string> as prefix for the LaTeX labels of methods.]'
  '-latex-module-prefix[use <string> as prefix for the LaTeX labels of modules.]'
  '-latex-module-type-prefix[use <string> as prefix for the LaTeX labels of module types.]'
  '-latex-class-prefix[use <string> as prefix for the LaTeX labels of classes.]'
  '-latex-class-type-prefix[use <string> as prefix for the LaTeX labels of class types.]'
  '-notoc[do not generate table of contents (LaTeX only)]'
  '-noindex[do not build index for Info files (TeXinfo only)]'
  '-esc8[escape accentuated characters in Info files (TeXinfo only)]'
  '-info-section[specify section of Info directory (TeXinfo only)]'
  '-info-entry[specify Info directory entry (TeXinfo only)]'
  '-dot-colors[<c1,c2,...,cn>]'
  '-dot-include-all[include all modules in the dot output, not only the]'
  '-dot-types[generate dependency graph for types instead of modules]'
  '-dot-reduce[perform a transitive reduction on the selected dependency graph]'
  '-man-mini[generate man pages only for modules, module types, classes]'
  '-man-suffix[use <suffix> for man page files (default is 3o) (man only)]'
  '-man-section[use <section> in man page files (default is 3) (man only)]'
  '-help[display this list of options]'
  '--help[display this list of options]'
  '*:filename:_files'
)

_arguments -s $arguments
