#compdef upx

local arguments

arguments=(
  '-1[compress faster -9 compress better]'
  '--best[best (can be slow for big files)]'
  '-d[decompress -l list compressed file]'
  '-t[test compressed file -V display version number]'
  '-h[give this help -L display software license]'
  '-q[be quiet -v be verbose]'
  '-oFILE[output to FILE]'
  '-f[force compression of suspicious files]'
  {--no-color,--mono,--color,--no-progress}'[change look]'
  '--brute[try all available compression methods & filters \[slow\]]'
  '--ultra-brute[try even more compression variants \[very slow\]]'
  {-k,--backup}'[keep backup files]'
  '--no-backup[no backup files \[default\]]'
  '--overlay[copy any extra data attached to the file \[default\]]'
  '--overlay[strip any extra data attached to the file \[DANGEROUS\]]'
  '--overlay[dont compress a file with an overlay]'
  '--coff[produce COFF output \[default: EXE\]]'
  '--8086[make compressed com work on any 8086]'
  '--8086[make compressed exe work on any 8086]'
  '--no-reloc[put no relocations in to the exe header]'
  '--8086[make compressed sys work on any 8086]'
  '--8-bit[uses 8 bit size compression \[default: 32 bit\]]'
  '--8mib-ram[8 megabyte memory limit \[default: 2 MiB\]]'
  '--boot-only[disables client/host transfer compatibility]'
  '--no-align[dont align to 2048 bytes \[enables: --console-run\]]'
  '--le[produce LE output \[default: EXE\]]'
  '--compress-exports[do not compress the export section]'
  '--compress-exports[compress the export section \[default\]]'
  '--compress-icons[do not compress any icons]'
  '--compress-icons[compress all but the first icon]'
  '--compress-icons[compress all but the first icon directory \[default\]]'
  '--compress-icons[compress all icons]'
  '--compress-resources[do not compress any resources at all]'
  '--keep-resource[do not compress resources specified by list]'
  '--strip-relocs[do not strip relocations]'
  '--strip-relocs[strip relocations \[default\]]'
  '--preserve-build-id[copy .gnu.note.build-id to compressed output]'
  '*:filename:_files'
)

_arguments -s $arguments
