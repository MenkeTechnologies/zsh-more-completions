#compdef ffplay

local arguments

arguments=(
  '-L[show license]'
  '-h[show help]'
  '-help[show help]'
  '--help[show help]'
  '-version[show version]'
  '-buildconf[show build configuration]'
  '-formats[show available formats]'
  '-muxers[show available muxers]'
  '-demuxers[show available demuxers]'
  '-devices[show available devices]'
  '-codecs[show available codecs]'
  '-decoders[show available decoders]'
  '-encoders[show available encoders]'
  '-bsfs[show available bit stream filters]'
  '-protocols[show available protocols]'
  '-filters[show available filters]'
  '-pix[_fmts show available pixel formats]'
  '-layouts[show standard channel layouts]'
  '-sample[_fmts show available audio sample formats]'
  '-colors[show available color names]'
  '-loglevel[set logging level]'
  '-v[set logging level]'
  '-report[generate a report]'
  '-max[_alloc bytes set maximum size of a single allocated block]'
  '-sources[list sources of the input device]'
  '-sinks[list sinks of the output device]'
  '-x[force displayed width]'
  '-y[force displayed height]'
  '-s[set frame size (WxH or abbreviation)]'
  '-fs[force full screen]'
  '-an[disable audio]'
  '-vn[disable video]'
  '-sn[disable subtitling]'
  '-ss[seek to a given position in seconds]'
  '-t[play "duration" seconds of audio/video]'
  '-bytes[seek by bytes 0=off 1=on -1=auto]'
  '-seek[_interval seconds set seek interval for left/right keys, in seconds]'
  '-nodisp[disable graphical display]'
  '-noborder[borderless window]'
  '-volume[set startup volume 0=min 100=max]'
  '-f[force format]'
  '-window[_title window title set window title]'
  '-af[set audio filters]'
  '-showmode[select show mode (0 = video, 1 = waves, 2 = RDFT)]'
  '-i[read specified file]'
  '-codec[force decoder]'
  '-autorotate[automatically rotate video]'
  '-cpuflags[force specific cpu flags]'
  '-hide[_banner hide_banner do not show program banner]'
  '-ast[select desired audio stream]'
  '-vst[select desired video stream]'
  '-sst[select desired subtitle stream]'
  '-pix[_fmt format set pixel format]'
  '-stats[show status]'
  '-fast[non spec compliant optimizations]'
  '-genpts[generate pts]'
  '-drp[let decoder reorder pts 0=off 1=on -1=auto]'
  '-lowres[]'
  '-sync[set audio-video sync. type (type=audio/video/ext)]'
  '-autoexit[exit at the end]'
  '-exitonkeydown[exit on key down]'
  '-exitonmousedown[exit on mouse down]'
  '-loop[count set number of times the playback shall be looped]'
  '-framedrop[drop frames when cpu is too slow]'
  '-infbuf[dont limit the input buffer size (useful with realtime streams)]'
  '-left[pos set the x position for the left of the window]'
  '-top[pos set the y position for the top of the window]'
  '-vf[set video filters]'
  '-rdftspeed[rdft speed]'
  '-default[generic catch all option]'
  '-acodec[force audio decoder]'
  '-scodec[force subtitle decoder]'
  '-vcodec[force video decoder]'
  '-find[_stream_info read and decode the streams to fill missing information with heuristics]'
  '-flags[ED.VAS... (default 0)]:flags:'
  '-ar[ED..A.... set audio sampling rate (in Hz) (from 0 to INT_MAX) (default 0)]:int:'
  '-ac[ED..A.... set number of audio channels (from 0 to INT_MAX) (default 0)]:int:'
  '-bug[.D.V..... work around not autodetected encoder bugs (default autodetect)]:flags:'
  '-strict[ED.VA.... how strictly to follow the standards (from INT_MIN to INT_MAX) (default normal)]:int:'
  '-err[_detect <flags> .D.VA.... set error detection flags (default 0)]'
  '-idct[ED.V..... select IDCT implementation (from 0 to INT_MAX) (default auto)]:int:'
  '-ec[.D.V..... set error concealment strategy (default guess_mvs+deblock)]:flags:'
  '-debug[ED.VAS... print specific debug info (default 0)]:flags:'
  '-flags2[ED.VA.... (default 0)]:flags:'
  '-threads[ED.VA.... set the number of threads (from 0 to INT_MAX) (default 1)]:int:'
  '-skip[_top <int> .D.V..... number of macroblock rows at the top which are skipped (from INT_MIN to INT_MAX) (default 0)]'
  '-skip[_bottom <int> .D.V..... number of macroblock rows at the bottom which are skipped (from INT_MIN to INT_MAX) (default 0)]'
  '-lowres[.D.VA.... decode at 1= 1/2, 2=1/4, 3=1/8 resolutions (from 0 to INT_MAX) (default 0)]:int:'
  '-skip[_loop_filter <int> .D.V..... skip loop filtering process for the selected frames (from INT_MIN to INT_MAX) (default default)]'
  '-skip[_idct <int> .D.V..... skip IDCT/dequantization for the selected frames (from INT_MIN to INT_MAX) (default default)]'
  '-skip[_frame <int> .D.V..... skip decoding for the selected frames (from INT_MIN to INT_MAX) (default default)]'
  '-channel[_layout <uint64> ED..A.... (from 0 to 1.84467e+19) (default 0)]'
  '-request[_channel_layout <uint64> .D..A.... (from 0 to 1.84467e+19) (default 0)]'
  '-ticks[_per_frame <int> ED.VA.... (from 1 to INT_MAX) (default 1)]'
  '-color[_primaries <int> ED.V..... color primaries (from 1 to INT_MAX) (default unknown)]'
  '-color[_trc <int> ED.V..... color transfer characteristics (from 1 to INT_MAX) (default unknown)]'
  '-colorspace[ED.V..... color space (from 0 to INT_MAX) (default unknown)]:int:'
  '-color[_range <int> ED.V..... color range (from 0 to INT_MAX) (default unknown)]'
  '-chroma[_sample_location <int> ED.V..... chroma sample location (from 0 to INT_MAX) (default unknown)]'
  '-thread[_type <flags> ED.VA.... select multithreading type (default slice+frame)]'
  '-request[_sample_fmt <sample_fmt> .D..A.... sample format audio decoders should prefer (default none)]'
  '-sub[_charenc <string> .D...S... set input text subtitles character encoding]'
  '-sub[_charenc_mode <flags> .D...S... set input text subtitles character encoding mode (default 0)]'
  '-sub[_text_format <int> .D...S... set decoded text subtitle format (from 0 to 1) (default ass_with_timings)]'
  '-refcounted[_frames <boolean> .D.VA.... (default false)]'
  '-apply[_cropping <boolean> .D.V..... (default true)]'
  '-skip[_alpha <boolean> .D.V..... Skip processing alpha (default false)]'
  '-field[_order <int> ED.V..... Field order (from 0 to 5) (default 0)]'
  '-dump[_separator <string> ED.VAS... set information dump field separator]'
  '-codec[_whitelist <string> .D.VAS... List of decoders that are allowed to be used]'
  '-max[_pixels <int64> ED.VAS... Maximum number of pixels (from 0 to INT_MAX) (default INT_MAX)]'
  '-hwaccel[_flags <flags> .D.V..... (default ignore_level)]'
  '-extra[_hw_frames <int> .D.V..... Number of extra hardware frames to allocate for the user (from -1 to INT_MAX) (default -1)]'
  '-layer[.D.V..... Set the decoding layer (default "")]:string:'
  '-gamma[.D.V..... Set the float gamma value when decoding (from 0.001 to FLT_MAX) (default 1)]:float:'
  '-apply[_trc <int> .D.V..... color transfer characteristics to apply to EXR linear input (from 1 to 18) (default gamma)]'
  '-skip[_cursor <boolean> .D.V..... skip the cursor (default false)]'
  '-blank[_value <int> .D.V..... value that is used to replace BLANK pixels in data array (from 0 to 65535) (default 0)]'
  '-change[_field_order <boolean> .D.V..... Change field order (default false)]'
  '-trans[_color <int> .D.V..... color value (ARGB) that is used instead of transparent color (from 0 to UINT32_MAX) (default 1.67772e+07)]'
  '-enable[_er <boolean> .D.V..... Enable error resilience on damaged frames (unsafe) (default auto)]'
  '-x264[_build <int> .D.V..... Assume this x264 version if no x264 version found in any SEI (from -1 to INT_MAX) (default -1)]'
  '-apply[_defdispwin <boolean> .D.V..... Apply default display window from VUI (default false)]'
  '-strict-displaywin[.D.V..... stricly apply default display window size (default false)]'
  '-lowres[.D.V..... Lower the decoding resolution by a power of two (from 0 to 33) (default 0)]:int:'
  '-extern[_huff <boolean> .D.V..... Use external huffman table. (default false)]'
  '-skip[_cursor <boolean> .D.V..... skip the cursor (default false)]'
  '-top[.D.V..... top field first (default auto)]:boolean:'
  '-non[_pcm_mode <int> .D..A.... Chooses what to do with NON-PCM (from 0 to 3) (default decode_drop)]'
  '-custom[_stride <int> .D.V..... Custom V210 stride (from INT_MIN to INT_MAX) (default 0)]'
  '-dual[_mono_mode <int> .D..A.... Select the channel to decode for dual mono (from -1 to 2) (default auto)]'
  '-cons[_noisegen <boolean> .D..A.... enable consistent noise generation (default false)]'
  '-drc[_scale <float> .D..A.... percentage of dynamic range compression to apply (from 0 to 6) (default 1)]'
  '-heavy[_compr <boolean> .D..A.... enable heavy dynamic range compression (default false)]'
  '-target[_level <int> .D..A.... target level in -dBFS (0 not applied) (from -31 to 0) (default 0)]'
  '-cons[_noisegen <boolean> .D..A.... enable consistent noise generation (default false)]'
  '-drc[_scale <float> .D..A.... percentage of dynamic range compression to apply (from 0 to 6) (default 1)]'
  '-heavy[_compr <boolean> .D..A.... enable heavy dynamic range compression (default false)]'
  '-extra[_bits_bug <boolean> .D..A.... Force non-standard decoding process (default false)]'
  '-max[_samples <int> .D..A.... maximum number of samples decoded per call (from 1 to INT_MAX) (default 4608)]'
  '-core[_only <boolean> .D..A.... Decode core only without extensions (default false)]'
  '-cons[_noisegen <boolean> .D..A.... enable consistent noise generation (default false)]'
  '-drc[_scale <float> .D..A.... percentage of dynamic range compression to apply (from 0 to 6) (default 1)]'
  '-heavy[_compr <boolean> .D..A.... enable heavy dynamic range compression (default false)]'
  '-target[_level <int> .D..A.... target level in -dBFS (0 not applied) (from -31 to 0) (default 0)]'
  '-postfilter[.D..A.... enable postfilter (default true)]:boolean:'
  '-use[_buggy_lpc <boolean> .D..A.... emulate old buggy lavc behavior (default false)]'
  '-postfilter[.D..A.... enable postfilter (default true)]:boolean:'
  '-apply[_phase_inv <boolean> .D..A.... Apply intensity stereo phase inversion (default true)]'
  '-password[.D..A.... Set decoding password]:string:'
  '-bits[_per_codeword <int> .D..A.... Bits per G722 codeword (from 6 to 8) (default 8)]'
  '-real[_time <boolean> .D...S... emit subtitle events as they are decoded for real-time display (default false)]'
  '-compute[_edt <boolean> .D...S... compute end of time using pts or timeout (default false)]'
  '-compute[_clut <boolean> .D...S... compute clut when not available(-1) or always(1) or never(0) (default auto)]'
  '-dvb[_substream <int> .D...S... (from -1 to 63) (default -1)]'
  '-palette[.D...S... set the global palette]:string:'
  '-ifo[_palette <string> .D...S... obtain the global palette from .IFO file]'
  '-forced[_subs_only <boolean> .D...S... Only show forced subtitles (default false)]'
  '-forced[_subs_only <boolean> .D...S... Only show forced subtitles (default false)]'
  '-keep[_ass_markup <boolean> .D...S... Set if ASS tags must be escaped (default false)]'
  '-keep[_ass_markup <boolean> .D...S... Set if ASS tags must be escaped (default false)]'
  '-keep[_ass_markup <boolean> .D...S... Set if ASS tags must be escaped (default false)]'
  '-keep[_ass_markup <boolean> .D...S... Set if ASS tags must be escaped (default false)]'
  '-keep[_ass_markup <boolean> .D...S... Set if ASS tags must be escaped (default false)]'
  '-apply[_phase_inv <boolean> .D..A.... Apply intensity stereo phase inversion (default true)]'
  '-avioflags[ED....... (default 0)]:flags:'
  '-probesize[.D....... set probing size (from 32 to I64_MAX) (default 5e+06)]:int64:'
  '-formatprobesize[.D....... number of bytes to probe file format (from 0 to 2.14748e+09) (default 1.04858e+06)]:int:'
  '-fflags[ED....... (default autobsf)]:flags:'
  '-seek2any[.D....... allow seeking to non-keyframes on demuxer level when supported (default false)]:boolean:'
  '-analyzeduration[.D....... specify how many microseconds are analyzed to probe the input (from 0 to I64_MAX) (default 0)]:int64:'
  '-cryptokey[.D....... decryption key]:binary:'
  '-indexmem[.D....... max memory used for timestamp index (per stream) (from 0 to INT_MAX) (default 1.04858e+06)]:int:'
  '-rtbufsize[.D....... max memory used for buffering real-time frames (from 0 to INT_MAX) (default 3.04128e+06)]:int:'
  '-fdebug[ED....... print specific debug info (default 0)]:flags:'
  '-max[_delay <int> ED....... maximum muxing or demuxing delay in microseconds (from -1 to INT_MAX) (default -1)]'
  '-fpsprobesize[.D....... number of frames used to probe fps (from -1 to 2.14748e+09) (default -1)]:int:'
  '-f[_err_detect <flags> .D....... set error detection flags (deprecated; use err_detect, save via avconv) (default crccheck)]'
  '-err[_detect <flags> .D....... set error detection flags (default crccheck)]'
  '-use[_wallclock_as_timestamps <boolean> .D....... use wallclock as timestamps (default false)]'
  '-skip[_initial_bytes <int64> .D....... set number of bytes to skip before reading header and frames (from 0 to I64_MAX) (default 0)]'
  '-correct[_ts_overflow <boolean> .D....... correct single timestamp overflows (default true)]'
  '-f[_strict <int> ED....... how strictly to follow the standards (deprecated; use strict, save via avconv) (from INT_MIN to INT_MAX) (default normal)]'
  '-strict[ED....... how strictly to follow the standards (from INT_MIN to INT_MAX) (default normal)]:int:'
  '-max[_ts_probe <int> .D....... maximum number of packets to read while waiting for the first timestamp (from 0 to INT_MAX) (default 50)]'
  '-dump[_separator <string> ED....... set information dump field separator (default ", ")]'
  '-codec[_whitelist <string> .D....... List of decoders that are allowed to be used]'
  '-format[_whitelist <string> .D....... List of demuxers that are allowed to be used]'
  '-protocol[_whitelist <string> .D....... List of protocols that are allowed to be used]'
  '-protocol[_blacklist <string> .D....... List of protocols that are not allowed to be used]'
  '-max[_streams <int> .D....... maximum number of streams (from 0 to INT_MAX) (default 1000)]'
  '-skip[_estimate_duration_from_pts <boolean> .D....... skip duration calculation in estimate_timings_from_pts (default false)]'
  '-protocol[_whitelist <string> .D....... List of protocols that are allowed to be used]'
  '-protocol[_whitelist <string> .D....... List of protocols that are allowed to be used]'
  '-protocol[_blacklist <string> .D....... List of protocols that are not allowed to be used]'
  '-rw[_timeout <int64> ED....... Timeout for IO operations (in microseconds) (from 0 to I64_MAX) (default 0)]'
  '-read[_ahead_limit <int> .D....... Amount in bytes that may be read ahead when seeking isnt supported, -1 for unlimited (from -1 to INT_MAX) (default 65536)]'
  '-key[ED....... AES encryption/decryption key]:binary:'
  '-iv[ED....... AES encryption/decryption initialization vector]:binary:'
  '-decryption[_key <binary> .D....... AES decryption key]'
  '-decryption[_iv <binary> .D....... AES decryption initialization vector]'
  '-ffrtmphttp[_tls <boolean> .D....... Use a HTTPS tunneling connection (RTMPTS). (default false)]'
  '-follow[.D....... Follow a file as it is being written (from 0 to 1) (default 0)]:int:'
  '-timeout[ED....... set timeout of socket I/O operations (from -1 to INT_MAX) (default -1)]:int:'
  '-ftp-anonymous-password[ED....... password for anonymous login. E-mail address should be used.]'
  '-seekable[.D....... control seekability of connection (default auto)]:boolean:'
  '-http[_proxy <string> ED....... set HTTP proxy to tunnel through]'
  '-headers[ED....... set custom HTTP headers, can override built in default headers]:string:'
  '-content[_type <string> ED....... set a specific content type for the POST messages]'
  '-user[_agent <string> .D....... override User-Agent header (default "Lavf/58.20.100")]'
  '-referer[.D....... override referer header]:string:'
  '-user-agent[.D....... use the "user_agent" option instead (default "Lavf/58.20.100")]:string:'
  '-multiple[_requests <boolean> ED....... use persistent connections (default false)]'
  '-post[_data <binary> ED....... set custom HTTP post data]'
  '-cookies[.D....... set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax]:string:'
  '-icy[.D....... request ICY metadata (default true)]:boolean:'
  '-auth[_type <int> ED....... HTTP authentication type (from 0 to 1) (default none)]'
  '-location[ED....... The actual location of the data received]:string:'
  '-offset[.D....... initial byte offset (from 0 to I64_MAX) (default 0)]:int64:'
  '-end[_offset <int64> .D....... try to limit the request to bytes preceding this offset (from 0 to I64_MAX) (default 0)]'
  '-method[ED....... Override the HTTP method or set the expected HTTP method from a client]:string:'
  '-reconnect[.D....... auto reconnect after disconnect before EOF (default false)]:boolean:'
  '-reconnect[_at_eof <boolean> .D....... auto reconnect at EOF (default false)]'
  '-reconnect[_streamed <boolean> .D....... auto reconnect streamed / non seekable streams (default false)]'
  '-reconnect[_delay_max <int> .D....... max reconnect delay in seconds after which to give up (from 0 to 4294) (default 120)]'
  '-listen[ED....... listen on HTTP (from 0 to 2) (default 0)]:int:'
  '-seekable[.D....... control seekability of connection (default auto)]:boolean:'
  '-http[_proxy <string> ED....... set HTTP proxy to tunnel through]'
  '-headers[ED....... set custom HTTP headers, can override built in default headers]:string:'
  '-content[_type <string> ED....... set a specific content type for the POST messages]'
  '-user[_agent <string> .D....... override User-Agent header (default "Lavf/58.20.100")]'
  '-referer[.D....... override referer header]:string:'
  '-user-agent[.D....... use the "user_agent" option instead (default "Lavf/58.20.100")]:string:'
  '-multiple[_requests <boolean> ED....... use persistent connections (default false)]'
  '-post[_data <binary> ED....... set custom HTTP post data]'
  '-cookies[.D....... set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax]:string:'
  '-icy[.D....... request ICY metadata (default true)]:boolean:'
  '-auth[_type <int> ED....... HTTP authentication type (from 0 to 1) (default none)]'
  '-location[ED....... The actual location of the data received]:string:'
  '-offset[.D....... initial byte offset (from 0 to I64_MAX) (default 0)]:int64:'
  '-end[_offset <int64> .D....... try to limit the request to bytes preceding this offset (from 0 to I64_MAX) (default 0)]'
  '-method[ED....... Override the HTTP method or set the expected HTTP method from a client]:string:'
  '-reconnect[.D....... auto reconnect after disconnect before EOF (default false)]:boolean:'
  '-reconnect[_at_eof <boolean> .D....... auto reconnect at EOF (default false)]'
  '-reconnect[_streamed <boolean> .D....... auto reconnect streamed / non seekable streams (default false)]'
  '-reconnect[_delay_max <int> .D....... max reconnect delay in seconds after which to give up (from 0 to 4294) (default 120)]'
  '-listen[ED....... listen on HTTP (from 0 to 2) (default 0)]:int:'
  '-rtmp[_app <string> ED....... Name of application to connect to on the RTMP server]'
  '-rtmp[_buffer <int> ED....... Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)]'
  '-rtmp[_conn <string> ED....... Append arbitrary AMF data to the Connect message]'
  '-rtmp[_flashver <string> ED....... Version of the Flash plugin used to run the SWF player.]'
  '-rtmp[_live <int> .D....... Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)]'
  '-rtmp[_pageurl <string> .D....... URL of the web page in which the media was embedded. By default no value will be sent.]'
  '-rtmp[_playpath <string> ED....... Stream identifier to play or to publish]'
  '-rtmp[_subscribe <string> .D....... Name of live stream to subscribe to. Defaults to rtmp_playpath.]'
  '-rtmp[_swfhash <binary> .D....... SHA256 hash of the decompressed SWF file (32 bytes).]'
  '-rtmp[_swfsize <int> .D....... Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)]'
  '-rtmp[_swfurl <string> ED....... URL of the SWF player. By default no value will be sent]'
  '-rtmp[_swfverify <string> .D....... URL to player swf file, compute hash/size automatically.]'
  '-rtmp[_tcurl <string> ED....... URL of the target stream. Defaults to proto://host\[:port\]/app.]'
  '-rtmp[_listen <int> .D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]'
  '-listen[.D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]:int:'
  '-timeout[.D....... Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)]:int:'
  '-rtmp[_app <string> ED....... Name of application to connect to on the RTMP server]'
  '-rtmp[_buffer <int> ED....... Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)]'
  '-rtmp[_conn <string> ED....... Append arbitrary AMF data to the Connect message]'
  '-rtmp[_flashver <string> ED....... Version of the Flash plugin used to run the SWF player.]'
  '-rtmp[_live <int> .D....... Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)]'
  '-rtmp[_pageurl <string> .D....... URL of the web page in which the media was embedded. By default no value will be sent.]'
  '-rtmp[_playpath <string> ED....... Stream identifier to play or to publish]'
  '-rtmp[_subscribe <string> .D....... Name of live stream to subscribe to. Defaults to rtmp_playpath.]'
  '-rtmp[_swfhash <binary> .D....... SHA256 hash of the decompressed SWF file (32 bytes).]'
  '-rtmp[_swfsize <int> .D....... Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)]'
  '-rtmp[_swfurl <string> ED....... URL of the SWF player. By default no value will be sent]'
  '-rtmp[_swfverify <string> .D....... URL to player swf file, compute hash/size automatically.]'
  '-rtmp[_tcurl <string> ED....... URL of the target stream. Defaults to proto://host\[:port\]/app.]'
  '-rtmp[_listen <int> .D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]'
  '-listen[.D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]:int:'
  '-timeout[.D....... Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)]:int:'
  '-rtmp[_app <string> ED....... Name of application to connect to on the RTMP server]'
  '-rtmp[_buffer <int> ED....... Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)]'
  '-rtmp[_conn <string> ED....... Append arbitrary AMF data to the Connect message]'
  '-rtmp[_flashver <string> ED....... Version of the Flash plugin used to run the SWF player.]'
  '-rtmp[_live <int> .D....... Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)]'
  '-rtmp[_pageurl <string> .D....... URL of the web page in which the media was embedded. By default no value will be sent.]'
  '-rtmp[_playpath <string> ED....... Stream identifier to play or to publish]'
  '-rtmp[_subscribe <string> .D....... Name of live stream to subscribe to. Defaults to rtmp_playpath.]'
  '-rtmp[_swfhash <binary> .D....... SHA256 hash of the decompressed SWF file (32 bytes).]'
  '-rtmp[_swfsize <int> .D....... Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)]'
  '-rtmp[_swfurl <string> ED....... URL of the SWF player. By default no value will be sent]'
  '-rtmp[_swfverify <string> .D....... URL to player swf file, compute hash/size automatically.]'
  '-rtmp[_tcurl <string> ED....... URL of the target stream. Defaults to proto://host\[:port\]/app.]'
  '-rtmp[_listen <int> .D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]'
  '-listen[.D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]:int:'
  '-timeout[.D....... Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)]:int:'
  '-rtmp[_app <string> ED....... Name of application to connect to on the RTMP server]'
  '-rtmp[_buffer <int> ED....... Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)]'
  '-rtmp[_conn <string> ED....... Append arbitrary AMF data to the Connect message]'
  '-rtmp[_flashver <string> ED....... Version of the Flash plugin used to run the SWF player.]'
  '-rtmp[_live <int> .D....... Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)]'
  '-rtmp[_pageurl <string> .D....... URL of the web page in which the media was embedded. By default no value will be sent.]'
  '-rtmp[_playpath <string> ED....... Stream identifier to play or to publish]'
  '-rtmp[_subscribe <string> .D....... Name of live stream to subscribe to. Defaults to rtmp_playpath.]'
  '-rtmp[_swfhash <binary> .D....... SHA256 hash of the decompressed SWF file (32 bytes).]'
  '-rtmp[_swfsize <int> .D....... Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)]'
  '-rtmp[_swfurl <string> ED....... URL of the SWF player. By default no value will be sent]'
  '-rtmp[_swfverify <string> .D....... URL to player swf file, compute hash/size automatically.]'
  '-rtmp[_tcurl <string> ED....... URL of the target stream. Defaults to proto://host\[:port\]/app.]'
  '-rtmp[_listen <int> .D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]'
  '-listen[.D....... Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)]:int:'
  '-timeout[.D....... Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)]:int:'
  '-ttl[ED....... Time to live (in milliseconds, multicast only) (from -1 to INT_MAX) (default -1)]:int:'
  '-buffer[_size <int> ED....... Send/Receive buffer size (in bytes) (from -1 to INT_MAX) (default -1)]'
  '-rtcp[_port <int> ED....... Custom rtcp port (from -1 to INT_MAX) (default -1)]'
  '-local[_rtpport <int> ED....... Local rtp port (from -1 to INT_MAX) (default -1)]'
  '-local[_rtcpport <int> ED....... Local rtcp port (from -1 to INT_MAX) (default -1)]'
  '-connect[ED....... Connect socket (default false)]:boolean:'
  '-write[_to_source <boolean> ED....... Send packets to the source address of the latest received packet (default false)]'
  '-pkt[_size <int> ED....... Maximum packet size (from -1 to INT_MAX) (default -1)]'
  '-dscp[ED....... DSCP class (from -1 to INT_MAX) (default -1)]:int:'
  '-sources[ED....... Source list]:string:'
  '-block[ED....... Block list]:string:'
  '-srtp[_in_suite <string> .D.......]'
  '-srtp[_in_params <string> .D.......]'
  '-start[.D....... start offset (from 0 to I64_MAX) (default 0)]:int64:'
  '-end[.D....... end offset (from 0 to I64_MAX) (default 0)]:int64:'
  '-listen[ED....... Listen for incoming connections (from 0 to 2) (default 0)]:int:'
  '-timeout[ED....... set timeout (in microseconds) of socket I/O operations (from -1 to INT_MAX) (default -1)]:int:'
  '-listen[_timeout <int> ED....... Connection awaiting timeout (in milliseconds) (from -1 to INT_MAX) (default -1)]'
  '-send[_buffer_size <int> ED....... Socket send buffer size (in bytes) (from -1 to INT_MAX) (default -1)]'
  '-recv[_buffer_size <int> ED....... Socket receive buffer size (in bytes) (from -1 to INT_MAX) (default -1)]'
  '-tcp[_nodelay <boolean> ED....... Use TCP_NODELAY to disable nagles algorithm (default false)]'
  '-tcp[_mss <int> ED....... Maximum segment size for outgoing TCP packets (from -1 to INT_MAX) (default -1)]'
  '-ca[_file <string> ED....... Certificate Authority database file]'
  '-cafile[ED....... Certificate Authority database file]:string:'
  '-tls[_verify <int> ED....... Verify the peer certificate (from 0 to 1) (default 0)]'
  '-cert[_file <string> ED....... Certificate file]'
  '-key[_file <string> ED....... Private key file]'
  '-listen[ED....... Listen for incoming connections (from 0 to 1) (default 0)]:int:'
  '-verifyhost[ED....... Verify against a specific hostname]:string:'
  '-buffer[_size <int> ED....... System data size (in bytes) (from -1 to INT_MAX) (default -1)]'
  '-localport[ED....... Local port (from -1 to INT_MAX) (default -1)]:int:'
  '-local[_port <int> ED....... Local port (from -1 to INT_MAX) (default -1)]'
  '-localaddr[ED....... Local address]:string:'
  '-udplite[_coverage <int> ED....... choose UDPLite head size which should be validated by checksum (from 0 to INT_MAX) (default 0)]'
  '-pkt[_size <int> ED....... Maximum UDP packet size (from -1 to INT_MAX) (default 1472)]'
  '-reuse[ED....... explicitly allow reusing UDP sockets (default auto)]:boolean:'
  '-reuse[_socket <boolean> ED....... explicitly allow reusing UDP sockets (default auto)]'
  '-connect[ED....... set if connect() should be called on socket (default false)]:boolean:'
  '-fifo[_size <int> .D....... set the UDP receiving circular buffer size, expressed as a number of packets with size of 188 bytes (from 0 to INT_MAX) (default 28672)]'
  '-overrun[_nonfatal <boolean> .D....... survive in case of UDP receiving circular buffer overrun (default false)]'
  '-timeout[.D....... set raise error timeout (only in read mode) (from 0 to INT_MAX) (default 0)]:int:'
  '-sources[ED....... Source list]:string:'
  '-block[ED....... Block list]:string:'
  '-buffer[_size <int> ED....... System data size (in bytes) (from -1 to INT_MAX) (default -1)]'
  '-localport[ED....... Local port (from -1 to INT_MAX) (default -1)]:int:'
  '-local[_port <int> ED....... Local port (from -1 to INT_MAX) (default -1)]'
  '-localaddr[ED....... Local address]:string:'
  '-udplite[_coverage <int> ED....... choose UDPLite head size which should be validated by checksum (from 0 to INT_MAX) (default 0)]'
  '-pkt[_size <int> ED....... Maximum UDP packet size (from -1 to INT_MAX) (default 1472)]'
  '-reuse[ED....... explicitly allow reusing UDP sockets (default auto)]:boolean:'
  '-reuse[_socket <boolean> ED....... explicitly allow reusing UDP sockets (default auto)]'
  '-connect[ED....... set if connect() should be called on socket (default false)]:boolean:'
  '-fifo[_size <int> .D....... set the UDP receiving circular buffer size, expressed as a number of packets with size of 188 bytes (from 0 to INT_MAX) (default 28672)]'
  '-overrun[_nonfatal <boolean> .D....... survive in case of UDP receiving circular buffer overrun (default false)]'
  '-timeout[.D....... set raise error timeout (only in read mode) (from 0 to INT_MAX) (default 0)]:int:'
  '-sources[ED....... Source list]:string:'
  '-block[ED....... Block list]:string:'
  '-listen[ED....... Open socket for listening (default false)]:boolean:'
  '-timeout[ED....... Timeout in ms (from -1 to INT_MAX) (default -1)]:int:'
  '-type[ED....... Socket type (from INT_MIN to INT_MAX) (default stream)]:int:'
  '-aa[_fixed_key <binary> .D....... Fixed key used for handling Audible AA files]'
  '-linespeed[.D....... set simulated line speed (bytes per second) (from 1 to INT_MAX) (default 6000)]:int:'
  '-video[_size <image_size> .D....... set video size, such as 640x480 or hd720.]'
  '-framerate[.D....... set framerate (frames per second) (default "25")]:video_rate:'
  '-ignore[_loop <boolean> .D....... ignore loop setting (default true)]'
  '-max[_fps <int> .D....... maximum framerate (0 is no limit) (from 0 to INT_MAX) (default 0)]'
  '-default[_fps <int> .D....... default framerate (0 is as fast as possible) (from 0 to INT_MAX) (default 15)]'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 48000)]'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 48000)]'
  '-subfps[.D...S... set the movie frame rate (from 0 to INT_MAX) (default 25/1)]:rational:'
  '-no[_resync_search <boolean> .D....... Dont try to resynchronize by looking for a certain optional start code (default false)]'
  '-export[_xmp <boolean> .D....... Export full XMP metadata (default false)]'
  '-use[_odml <boolean> .D....... use odml index (default true)]'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-linespeed[.D....... set simulated line speed (bytes per second) (from 1 to INT_MAX) (default 6000)]:int:'
  '-video[_size <image_size> .D....... set video size, such as 640x480 or hd720.]'
  '-framerate[.D....... set framerate (frames per second) (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-sample[_rate <int> .D....... (from 1 to INT_MAX) (default 11025)]'
  '-framerate[.D.......]:string:'
  '-frames[_per_packet <int> .D....... Number of frames to read at a time. Higher = faster decoding, lower granularity (from 1 to INT_MAX) (default 1)]'
  '-mode[.D....... codec2 mode \[mandatory\] (from -1 to 8) (default -1)]:int:'
  '-frames[_per_packet <int> .D....... Number of frames to read at a time. Higher = faster decoding, lower granularity (from 1 to INT_MAX) (default 1)]'
  '-safe[.D....... enable safe mode (default true)]:boolean:'
  '-auto[_convert <boolean> .D....... automatically convert bitstream format (default true)]'
  '-segment[_time_metadata <boolean> .D....... output file segment start time and duration as packet metadata (default false)]'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... set the framerate (default "1")]:video_rate:'
  '-flv[_metadata <boolean> .D.V..... Allocate streams according to the onMetaData array (default false)]'
  '-flv[_full_metadata <boolean> .D.V..... Dump full metadata of the onMetadata (default false)]'
  '-flv[_ignore_prevtag <boolean> .D.V..... Ignore the Size of previous tag (default false)]'
  '-missing[_streams <int> .D.V..XR. (from 0 to 255) (default 0)]'
  '-flv[_metadata <boolean> .D.V..... Allocate streams according to the onMetaData array (default false)]'
  '-flv[_full_metadata <boolean> .D.V..... Dump full metadata of the onMetadata (default false)]'
  '-flv[_ignore_prevtag <boolean> .D.V..... Ignore the Size of previous tag (default false)]'
  '-missing[_streams <int> .D.V..XR. (from 0 to 255) (default 0)]'
  '-code[_size <int> .D....... Bits per G.726 code (from 2 to 5) (default 4)]'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 8000)]'
  '-code[_size <int> .D....... Bits per G.726 code (from 2 to 5) (default 4)]'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 8000)]'
  '-bit[_rate <int> .D....... (from 0 to INT_MAX) (default 8000)]'
  '-min[_delay <int> .D....... minimum valid delay between frames (in hundredths of second) (from 0 to 6000) (default 2)]'
  '-max[_gif_delay <int> .D....... maximum valid delay between frames (in hundredths of seconds) (from 0 to 65535) (default 65535)]'
  '-default[_delay <int> .D....... default delay between frames (in hundredths of second) (from 0 to 6000) (default 10)]'
  '-ignore[_loop <boolean> .D....... ignore loop setting (netscape extension) (default true)]'
  '-sample[_rate <int> .D....... (from 1 to 6.50753e+07) (default 8000)]'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-live[_start_index <int> .D....... segment index to start live streams at (negative values are from the end) (from INT_MIN to INT_MAX) (default -3)]'
  '-allowed[_extensions <string> .D....... List of file extensions that hls is allowed to access (default "3gp,aac,avi,flac,mkv,m3u8,m4a,m4s,m4v,mpg,mov,mp2,mp3,mp4,mpeg,mpegts,ogg,ogv,oga,ts,vob,wav")]'
  '-max[_reload <int> .D....... Maximum number of times a insufficient list is attempted to be reloaded (from 0 to INT_MAX) (default 1000)]'
  '-http[_persistent <boolean> .D....... Use persistent HTTP connections (default true)]'
  '-http[_multiple <boolean> .D....... Use multiple HTTP connections for fetching segments (default auto)]'
  '-linespeed[.D....... set simulated line speed (bytes per second) (from 1 to INT_MAX) (default 6000)]:int:'
  '-video[_size <image_size> .D....... set video size, such as 640x480 or hd720.]'
  '-framerate[.D....... set framerate (frames per second) (default "25")]:video_rate:'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-subfps[.D...S... set the movie frame rate fallback (from 0 to INT_MAX) (default 0/1)]:rational:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-use[_absolute_path <boolean> .D.V..... allow using absolute path when opening alias, this is a possible security issue (default false)]'
  '-seek[_streams_individually <boolean> .D.V..... Seek each stream individually to the to the closest point (default true)]'
  '-ignore[_editlist <boolean> .D.V..... Ignore the edit list atom. (default false)]'
  '-advanced[_editlist <boolean> .D.V..... Modify the AVIndex according to the editlists. Use this option to decode in the order specified by the edits. (default true)]'
  '-ignore[_chapters <boolean> .D.V..... (default false)]'
  '-use[_mfra_for <int> .D.V..... use mfra for fragment timestamps (from -1 to 2) (default auto)]'
  '-export[_all <boolean> .D.V..... Export unrecognized metadata entries (default false)]'
  '-export[_xmp <boolean> .D.V..... Export full XMP metadata (default false)]'
  '-activation[_bytes <binary> .D....... Secret bytes for Audible AAX files]'
  '-audible[_fixed_key <binary> .D....... Fixed key used for handling Audible AAX files]'
  '-decryption[_key <binary> .D....... The media decryption key (hex)]'
  '-enable[_drefs <boolean> .D.V..... Enable external track support. (default false)]'
  '-usetoc[.D....... use table of contents (default false)]:boolean:'
  '-resync[_size <int> .D....... set size limit for looking up a new synchronization (from 0 to INT_MAX) (default 65536)]'
  '-fix[_teletext_pts <boolean> .D....... try to fix pts values of dvb teletext streams (default true)]'
  '-ts[_packetsize <int> .D....XR. output option carrying the raw packet size (from 0 to 0) (default 0)]'
  '-scan[_all_pmts <boolean> .D....... scan and combine all PMTs (default auto)]'
  '-skip[_unknown_pmt <boolean> .D....... skip PMTs for programs not advertised in the PAT (default false)]'
  '-merge[_pmt_versions <boolean> .D....... re-use streams when PMTs version/pids change (default false)]'
  '-resync[_size <int> .D....... set size limit for looking up a new synchronization (from 0 to INT_MAX) (default 65536)]'
  '-compute[_pcr <boolean> .D....... compute exact PCR for each transport stream packet (default false)]'
  '-ts[_packetsize <int> .D....XR. output option carrying the raw packet size (from 0 to 0) (default 0)]'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-strict[_mime_boundary <boolean> .D....... require MIME boundaries match (default false)]'
  '-eia608[_extract <boolean> .D....... extract eia 608 captions from s436m track (default false)]'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 44100)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-video[_size <image_size> .D....... set frame size]'
  '-pixel[_format <string> .D....... set pixel format (default "yuv420p")]'
  '-framerate[.D....... set frame rate (default "25")]:video_rate:'
  '-rtp[_flags <flags> .D....... set RTP flags (default 0)]'
  '-reorder[_queue_size <int> .D....... set number of packets to buffer for handling of reordered packets (from -1 to INT_MAX) (default -1)]'
  '-buffer[_size <int> ED....... Underlying protocol send/receive buffer size (from -1 to INT_MAX) (default -1)]'
  '-initial[_pause <boolean> .D....... do not start playing the stream immediately (default false)]'
  '-rtsp[_transport <flags> ED....... set RTSP transport protocols (default 0)]'
  '-rtsp[_flags <flags> .D....... set RTSP flags (default 0)]'
  '-allowed[_media_types <flags> .D....... set media types to accept from the server (default video+audio+data+subtitle)]'
  '-min[_port <int> ED....... set minimum local UDP port (from 0 to 65535) (default 5000)]'
  '-max[_port <int> ED....... set maximum local UDP port (from 0 to 65535) (default 65000)]'
  '-listen[_timeout <int> .D....... set maximum timeout (in seconds) to wait for incoming connections (-1 is infinite, imply flag listen) (from INT_MIN to INT_MAX) (default -1)]'
  '-timeout[.D....... set maximum timeout (in seconds) to wait for incoming connections (-1 is infinite, imply flag listen) (deprecated, use listen_timeout) (from INT_MIN to INT_MAX) (default -1)]:int:'
  '-stimeout[.D....... set timeout (in microseconds) of socket TCP I/O operations (from INT_MIN to INT_MAX) (default 0)]:int:'
  '-reorder[_queue_size <int> .D....... set number of packets to buffer for handling of reordered packets (from -1 to INT_MAX) (default -1)]'
  '-buffer[_size <int> ED....... Underlying protocol send/receive buffer size (from -1 to INT_MAX) (default -1)]'
  '-user[_agent <string> .D....... override User-Agent header (default "Lavf58.20.100")]'
  '-user-agent[.D....... override User-Agent header (deprecated, use user_agent) (default "Lavf58.20.100")]:string:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 0)]'
  '-frame[_size <int> .D....... (from 0 to INT_MAX) (default 0)]'
  '-max[_file_size <int> .D....... (from 0 to INT_MAX) (default 5e+06)]'
  '-sdp[_flags <flags> .D....... SDP flags (default 0)]'
  '-allowed[_media_types <flags> .D....... set media types to accept from the server (default video+audio+data+subtitle)]'
  '-reorder[_queue_size <int> .D....... set number of packets to buffer for handling of reordered packets (from -1 to INT_MAX) (default -1)]'
  '-buffer[_size <int> ED....... Underlying protocol send/receive buffer size (from -1 to INT_MAX) (default -1)]'
  '-framerate[.D....... set frame rate (default "25")]:video_rate:'
  '-sample[_rate <int> .D....... (from 0 to INT_MAX) (default 8000)]'
  '-channels[.D....... (from 0 to INT_MAX) (default 1)]:int:'
  '-start[_time <int64> .D...S... set the start time (offset) of the subtitles, in ms (from I64_MIN to I64_MAX) (default 15000)]'
  '-chars[_per_frame <int> .D....... (from 1 to INT_MAX) (default 6000)]'
  '-video[_size <image_size> .D....... A string describing frame size, such as 640x480 or hd720.]'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-video[_size <image_size> .D....... set frame size]'
  '-framerate[.D....... set frame rate (default "25")]:video_rate:'
  '-video[_size <image_size> .D....... set frame size]'
  '-framerate[.D....... set frame rate (default "25")]:video_rate:'
  '-framerate[.D....... (default "25")]:video_rate:'
  '-sub[_name <string> .D....... URI for .sub file]'
  '-ignore[_length <boolean> .D....... Ignore length (default false)]'
  '-live[.D....... flag indicating that the input is a live file that only has the headers. (default false)]:boolean:'
  '-bandwidth[.D....... bandwidth of this stream to be specified in the DASH manifest. (from 0 to INT_MAX) (default 0)]:int:'
  '-linespeed[.D....... set simulated line speed (bytes per second) (from 1 to INT_MAX) (default 6000)]:int:'
  '-video[_size <image_size> .D....... set video size, such as 640x480 or hd720.]'
  '-framerate[.D....... set framerate (frames per second) (default "25")]:video_rate:'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-framerate[.D....... set the video framerate (default "25")]:video_rate:'
  '-loop[.D....... force loop over input file sequence (default false)]:boolean:'
  '-pattern[_type <int> .D....... set pattern type (from 0 to INT_MAX) (default 4)]'
  '-pixel[_format <string> .D....... set video pixel format]'
  '-start[_number <int> .D....... set first number in the sequence (from INT_MIN to INT_MAX) (default 0)]'
  '-start[_number_range <int> .D....... set range for looking at the first sequence number (from 1 to INT_MAX) (default 5)]'
  '-video[_size <image_size> .D....... set video size]'
  '-frame[_size <int> .D....... force frame size in bytes (from 0 to INT_MAX) (default 0)]'
  '-ts[_from_file <int> .D....... set frame timestamp from files one (from 0 to 2) (default none)]'
  '-list[_devices <int> .D....... list available devices (from 0 to 1) (default false)]'
  '-video[_device_index <int> .D....... select video device by index for devices with same name (starts at 0) (from -1 to INT_MAX) (default -1)]'
  '-audio[_device_index <int> .D....... select audio device by index for devices with same name (starts at 0) (from -1 to INT_MAX) (default -1)]'
  '-pixel[_format <pix_fmt> .D....... set pixel format (default yuv420p)]'
  '-framerate[.D....... set frame rate (default "ntsc")]:video_rate:'
  '-video[_size <image_size> .D....... set video size]'
  '-capture[_cursor <int> .D....... capture the screen cursor (from 0 to 1) (default 0)]'
  '-capture[_mouse_clicks <int> .D....... capture the screen mouse clicks (from 0 to 1) (default 0)]'
  '-graph[.D....... set libavfilter graph]:string:'
  '-graph[_file <string> .D....... set libavfilter graph filename]'
  '-dumpgraph[.D....... dump graph to stderr]:string:'
  '-initial[_pause <boolean> .D....... do not start playing the stream immediately (default false)]'
  '-rtsp[_transport <flags> ED....... set RTSP transport protocols (default 0)]'
  '-rtsp[_flags <flags> .D....... set RTSP flags (default 0)]'
  '-allowed[_media_types <flags> .D....... set media types to accept from the server (default video+audio+data+subtitle)]'
  '-min[_port <int> ED....... set minimum local UDP port (from 0 to 65535) (default 5000)]'
  '-max[_port <int> ED....... set maximum local UDP port (from 0 to 65535) (default 65000)]'
  '-listen[_timeout <int> .D....... set maximum timeout (in seconds) to wait for incoming connections (-1 is infinite, imply flag listen) (from INT_MIN to INT_MAX) (default -1)]'
  '-timeout[.D....... set maximum timeout (in seconds) to wait for incoming connections (-1 is infinite, imply flag listen) (deprecated, use listen_timeout) (from INT_MIN to INT_MAX) (default -1)]:int:'
  '-stimeout[.D....... set timeout (in microseconds) of socket TCP I/O operations (from INT_MIN to INT_MAX) (default 0)]:int:'
  '-reorder[_queue_size <int> .D....... set number of packets to buffer for handling of reordered packets (from -1 to INT_MAX) (default -1)]'
  '-buffer[_size <int> ED....... Underlying protocol send/receive buffer size (from -1 to INT_MAX) (default -1)]'
  '-user[_agent <string> .D....... override User-Agent header (default "Lavf58.20.100")]'
  '-user-agent[.D....... override User-Agent header (deprecated, use user_agent) (default "Lavf58.20.100")]:string:'
  '*:filename:_files'
)

_arguments -s $arguments
