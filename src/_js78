#compdef js78

local arguments

arguments=(
  {-f,--file}'[file path to run, parsing file contents]'
  {-u,--utf16-file}'[file path to run, inflating the files]'
  {-m,--module}'[module path to run]'
  {-B,--binast}'[no-op]'
  '--binast-format[no-op]'
  {-e,--execute}'[inline code to run]'
  {-i,--shell}'[enter prompt after running code]'
  {-c,--compileonly}'[only compile, dont run (syntax checking]'
  {-w,--warnings}'[emit warnings]'
  {-W,--nowarnings}'[dont emit warnings]'
  {-D,--dump-bytecode}'[dump bytecode with exec count for all]'
  {-b,--print-timing}'[print sub-ms runtime for each file thats]'
  '--code-coverage[enable code coverage instrumentation.]'
  '--disable-parser-deferred-alloc[disable deferred allocation of GC objects]'
  '--cpu-count[set the number of CPUs (hardware threads)]'
  '--thread-count[alias for --cpu-count.]'
  '--ion[enable IonMonkey (default)]'
  '--no-ion[disable IonMonkey]'
  '--no-ion-for-main-context[disable IonMonkey for the main context]'
  '--warp[no-op on non-Nightly]'
  '--no-warp[disable WarpBuilder (default)]'
  '--no-asmjs[disable asm.js compilation]'
  '--wasm-compiler[choose to enable a subset of the wasm]'
  '--wasm-verbose[enable WebAssembly verbose logging]'
  '--disable-wasm-huge-memory[disable WebAssembly huge memory]'
  '--test-wasm-await-tier2[forcibly activate tiering and block]'
  '--no-wasm-reftypes[disable wasm reference types features]'
  '--wasm-gc[no-op]'
  '--no-wasm-multi-value[disable wasm multi-value features]'
  '--no-wasm-simd[no-op]'
  '--no-native-regexp[disable native regexp compilation]'
  '--regexp-warmup-threshold[wait for COUNT invocations before]'
  '--trace-regexp-parser[trace regexp parsing]'
  '--trace-regexp-assembler[trace regexp assembler]'
  '--trace-regexp-interpreter[trace regexp interpreter]'
  '--trace-regexp-peephole[trace regexp peephole optimization]'
  '--no-unboxed-objects[disable creating unboxed plain objects]'
  '--enable-streams[enable WHATWG Streams (default)]'
  '--no-streams[disable WHATWG Streams]'
  '--enable-readable-byte-streams[enable support for WHATWG ReadableStreams]'
  '--enable-byob-stream-readers[enable support for getting BYOB readers]'
  '--enable-writable-streams[enable support for WHATWG WritableStreams]'
  '--enable-readablestream-pipeto[enable support for WHATWG]'
  '--enable-weak-refs[enable weak references]'
  '--disable-tosource[disable toSource/uneval]'
  '--disable-property-error-message-fix[fix for the error message when]'
  '--enable-iterator-helpers[enable iterator helpers]'
  '--shared-memory[/off              SharedArrayBuffer and Atomics (default:]'
  '--spectre-mitigations[/off        Whether Spectre mitigations are enabled]'
  '--cache-ir-stubs[/off/call        Use CacheIR stubs (default: on, off to]'
  '--ion-shared-stubs[/off           Use shared stubs (default: on, off to]'
  '--ion-scalar-replacement[/off     Scalar Replacement (default: on, off to]'
  '--ion-gvn[specify Ion global value numbering:]'
  '--ion-licm[/off                   Loop invariant code motion (default: on]'
  '--ion-edgecase-analysis[/off      Find edge cases where Ion can avoid]'
  '--ion-pgo[/off                    Profile guided optimization (default: on]'
  '--ion-range-analysis[/off         Range analysis (default: on, off to]'
  '--ion-sink[/off                   Sink code motion (default: off, on to]'
  '--ion-optimization-levels[/off    Use multiple Ion optimization levels]'
  '--ion-loop-unrolling[/off         (NOP for fuzzers)]'
  '--ion-instruction-reordering[/off Instruction reordering (default: off, on]'
  '--ion-check-range-analysis[range analysis checking]'
  '--ion-extra-checks[perform extra dynamic validation checks]'
  '--ion-inlining[/off               Inline methods where possible (default:]'
  '--ion-osr[/off                    On-Stack Replacement (default: on, off to]'
  '--ion-limit-script-size[/off      Dont compile very large scripts]'
  '--ion-warmup-threshold[wait for COUNT calls or iterations before]'
  '--ion-full-warmup-threshold[wait for COUNT calls or iterations before]'
  '--ion-regalloc[specify Ion register allocation:]'
  '--ion-eager[always ion-compile methods (implies]'
  '--baseline-eager[)]'
  '--ion-offthread-compile[/off      Compile scripts off thread (default: on)]'
  '--ion-parallel-compile[/off       --ion-parallel compile is deprecated. Use]'
  '--ion-offthread-compile[.]'
  '--baseline[enable baseline compiler (default)]'
  '--no-baseline[disable baseline compiler]'
  '--baseline-eager[always baseline-compile methods]'
  '--baseline-warmup-threshold[wait for COUNT calls or iterations before]'
  '--blinterp[enable Baseline Interpreter (default)]'
  '--no-blinterp[disable Baseline Interpreter]'
  '--blinterp-eager[always Baseline-interpret scripts]'
  '--blinterp-warmup-threshold[wait for COUNT calls or iterations before]'
  '--non-writable-jitcode[(NOP for fuzzers) Allocate JIT code as]'
  '--no-sse3[pretend CPU does not support SSE3]'
  '--no-ssse3[pretend CPU does not support SSSE3 \[sic\]]'
  '--no-sse41[pretend CPU does not support SSE4.1]'
  '--no-sse4[alias for --no-sse41]'
  '--no-sse42[pretend CPU does not support SSE4.2]'
  '--enable-avx[AVX is disabled by default. Enable AVX.]'
  '--no-avx[no-op. AVX is currently disabled by]'
  '--more-compartments[make newGlobal default to creating a new]'
  '--fuzzing-safe[dont expose functions that arent safe]'
  '--disable-oom-functions[disable functions that cause artificial]'
  '--no-threads[disable helper threads]'
  '--no-ggc[disable Generational GC]'
  '--no-cgc[disable Compacting GC]'
  '--no-incremental-gc[disable Incremental GC]'
  '--nursery-strings[/off            Allocate strings in the nursery]'
  '--nursery-bigints[/off            Allocate BigInts in the nursery]'
  '--available-memory[select GC settings based on available]'
  '--arm-hwcap[specify ARM code generation features, or]'
  '--arm-asm-nop-fill[insert the given number of NOP]'
  '--asm-pool-max-offset[the maximum pc relative OFFSET permitted]'
  '--arm-sim-icache-checks[enable icache flush checks in the ARM]'
  '--arm-sim-stop-at[stop the ARM simulator after the given]'
  '--mips-sim-icache-checks[enable icache flush checks in the MIPS]'
  '--mips-sim-stop-at[stop the MIPS simulator after the given]'
  '--nursery-size[set the maximum nursery size in MB]'
  {-z,--gc-zeal}'[(;LEVEL)*\[,N\]     option ignored in non-gc-zeal builds]'
  '--module-load-path[set directory to load modules from]'
  '--no-source-pragmas[disable source(Mapping)URL pragma parsing]'
  '--no-async-stacks[disable async stacks]'
  '--dll[dynamically load LIBRARY]'
  '--suppress-minidump[suppress crash minidumps]'
  '--smoosh[no-op]'
  '--wasm-compile-and-serialize[compile the wasm bytecode from stdin and]'
  '*:filename:_files'
)

_arguments -s $arguments
