#compdef ovftool

local arguments

arguments=(
  '--acceptAllEulas[Accept all end-user licenses agreements]'
  '--allowAllExtraConfig[Whether we allow all the ExtraConfig]'
  '--allowExtraConfig[Whether we allow ExtraConfig options. These]'
  '--annotation[Add annotation to vi, vmx, vapprun, vCloud]'
  '--authdPortSource[Use this to override default vmware authd]'
  '--authdPortTarget[Use this to override default vmware authd]'
  '--chunkSize[Specifies the chunk size to use for files in]'
  '--compress[Compress the disks in an OVF package. Value]'
  '--computerName[Sets the computer name in the guest for a VM]'
  '--coresPerSocket[Specifies the distribution of the total]'
  '--coresPerSocket[<VM ID>=<value>. Only]'
  {-ds,--datastore}'[Target datastore name for a VI locator.]'
  '--decodeBase64[Decode option values with Base64.]'
  '--defaultStorageProfile[The storage profile for all VMs in the OVF]'
  '--defaultStorageRawProfile[The storage profile for all VMs in the OVF]'
  '--defaultStorageProfile[. Only applies to VI]'
  '--deploymentOption[Selects what deployment option to use (if]'
  '--disableVerification[Skip validation of signature and]'
  {-dm,--diskMode}'[Select target disk format. Supported formats]'
  '--diskSize[Sets the size of a VM disk in megabytes]'
  '--eula[EULA to be inserted in the first virtual]'
  '--exportDeviceSubtypes[Enables export of resource subtype for]'
  '--exportFlags[Specifies one or more export flags to]'
  '--extraConfig[Sets an ExtraConfig element for all]'
  '--extraConfig[<key>=<value>. Applies to vi]'
  '--fencedMode[If a parent network exists on the vCloud]'
  '-h[Prints this message.]'
  '--hideEula[In OVF probe mode, hides the EULA.]'
  '--importAsTemplate[Import VM as a Template when deployed on a]'
  '--ipAllocationPolicy[IP allocation policy for a deployed OVF]'
  '--ipProtocol[Select what IP protocol to use (IPv4, IPv6).]'
  '--lax[Relax OVF specification conformance and]'
  '--locale[Selects locale for target.]'
  '--machineOutput[Output OVF Tool messages in a machine]'
  '--makeDeltaDisks[Build delta disk hierarchy from the given]'
  '--maxVirtualHardwareVersion[the maximal virtual hardware version to]'
  '--memorySize[Sets the memory size in megabytes of a VM]'
  '-n[Specifies target name (defaults to source]'
  '--net[Set a network assignment in the deployed OVF]'
  {-nw,--network}'[Target network for a VI deployment.]'
  '--nic[Specifies NIC configuration in a VM using]'
  '--noDisks[Disable disk conversion.]'
  '--noImageFiles[Do not include image files in destination.]'
  '--noSSLVerify[Skip SSL verification for VI connections.]'
  '--numberOfCpus[Sets the number of CPUs for a VM using the]'
  '-o[Force overwrites of existing files.]'
  '--powerOffSource[Ensures a VM/vApp is powered off before]'
  '--powerOffTarget[Ensures a VM/vApp is powered off before]'
  '--powerOn[Powers on a VM/vApp deployed on a VI target.]'
  '--privateKey[Sign OVF package with the given private key]'
  '--privateKeyPassword[Password for the private key. Should be used]'
  '--prop[Set a property in the deployed OVF package.]'
  '--proxy[Proxy used for HTTP\[S\] access.]'
  '--proxyNTLMAuth[Enable NTLM authentication for proxy.]'
  '-q[No output to screen except errors.]'
  '--schemaValidate[Validate OVF descriptor against OVF schema.]'
  '--shaAlgorithm[Select SHA digest algorithm when creating]'
  '--skipManifestCheck[Skip validation of OVF package manifest.]'
  '--skipManifestGeneration[Skip generation of OVF package manifest.]'
  '--sourcePEM[File path to PEM formatted file used to]'
  '--sourceSSLThumbprint[SSL fingerprint of SOURCE. OVF Tool verifies]'
  {-st,--sourceType}'[Explicitly express that source is OVF, OVA]'
  '--sslCipherList[Use this to override default OpenSSL ciphers]'
  '--sslVersion[Use this to set preferred TLS/SSL version]'
  '--storageProfile[Sets the storage profile for a VM using the]'
  '--targetPEM[File path to PEM formatted file used to]'
  '--targetSSLThumbprint[SSL fingerprint of TARGET. OVF Tool verifies]'
  {-tt,--targetType}'[Explicitly express that target is OVF, OVA]'
  '--vCloudTemplate[Create only a vApp template. Default value]'
  '--vService[Set a vService assignment in the deployed]'
  '--vService[<dependencyId>=<providerId>.]'
  '--verifyOnly[Do not upload the source but only verify it]'
  '-v[Prints the version of this tool.]'
  '--viCpuResource[Specify the CPU resource settings for]'
  '--viMemoryResource[Specify the CPU resource settings for]'
  {-vf,--vmFolder}'[Target VM folder in VI inventory (relative]'
  '*:filename:_files'
)

_arguments -s $arguments
