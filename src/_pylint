#compdef pylint

local arguments

arguments=(
  {-h,--help}'[show this help message and exit]'
  '--rcfile[specify a configuration file to load.]'
  '--output[specify an output file.]'
  '--help-msg[\[HELP_MSG ...\]]'
  '--list-msgs[display a list of all pylints messages divided by]'
  '--list-msgs-enabled[display a list of what messages are enabled, disabled]'
  '--list-groups[list pylints message groups.]'
  '--list-conf-levels[generate pylints confidence levels.]'
  '--list-extensions[list available extensions.]'
  '--full-documentation[generate pylints full documentation.]'
  '--generate-rcfile[generate a sample configuration file according to the]'
  '--generate-toml-config[generate a sample configuration file according to the]'
  '--long-help[show more verbose help.]'
  '--init-hook[python code to execute, usually for sys.path]'
  {--errors-only,-E}'[in error mode, messages with a category besides ERROR]'
  {--verbose,-v}'[in verbose mode, extra non-checker-related info will]'
  '--enable-all-extensions[load and enable all available extensions. Use --list-]'
  '--ignore[<file>...\]]'
  '--ignore-patterns[<pattern>...\]]'
  '--ignore-paths[<pattern>...\]]'
  '--persistent[or n>]'
  '--load-plugins[list of plugins (as comma separated values of python]'
  '--fail-under[specify a score threshold under which the program will]'
  '--fail-on[ids>   Return non-zero exit code if any of these]'
  {--jobs,-j}'[use multiple processes to speed up Pylint. Specifying]'
  '--limit-inference-results[control the amount of potential inferred values when]'
  '--extension-pkg-allow-list[pkg\]>]'
  '--extension-pkg-whitelist[pkg\]>]'
  '--suggestion-mode[or n>]'
  '--exit-zero[always return a 0 (non-error) status code, even if]'
  '--from-stdin[interpret the stdin as a python script, whose filename]'
  '--source-roots[<path>...\]]'
  '--recursive[discover python modules and packages in the file]'
  '--py-version[minimum Python version to use for version dependent]'
  '--ignored-modules[names>]'
  '--analyse-fallback-blocks[or n>]'
  '--clear-cache-post-run[or n>]'
  {--output-format,-f}'[set the output format. Available formats are text]'
  '--reports[or n>, -r <y or n>]'
  '--evaluation[python expression which should return a score less]'
  '--score[or n>, -s <y or n>]'
  '--msg-template[template used to display messages. This is a python]'
  '--confidence[only show warnings with the listed confidence levels.]'
  '--enable[ids>, -e <msg ids>]'
  '--disable[ids>, -d <msg ids>]'
  {--enable,--disable}'[".]'
  '--logging-modules[separated list>]'
  '--logging-format-style[(%) or new ({)>]'
  '--spelling-dict[name>]'
  '--spelling-ignore-words[separated words>]'
  '--spelling-private-dict-file[to file>]'
  '--spelling-store-unknown-words[or n>]'
  '--max-spelling-suggestions[limits count of emitted suggestions for spelling]'
  '--spelling-ignore-comment-directives[separated words>]'
  '--notes[separated values>]'
  '--notes-rgx[regular expression of note tags to take in]'
  '--ignore-on-opaque-inference[or n>]'
  '--mixin-class-rgx[regex pattern to define which classes are considered]'
  '--ignore-mixin-members[or n>]'
  '--ignored-checks-for-mixins[of messages names>]'
  '--ignore-none[or n>]'
  '--ignored-classes[names>]'
  '--generated-members[names>]'
  '--contextmanager-decorators[names>]'
  '--missing-member-hint-distance[hint edit distance>]'
  '--missing-member-max-choices[hint max choices>]'
  '--missing-member-hint[member hint>]'
  '--signature-mutators[names>]'
  '--defining-attr-methods[names>]'
  '--valid-classmethod-first-arg[names>]'
  '--valid-metaclass-classmethod-first-arg[names>]'
  '--exclude-protected[access exclusions>]'
  '--check-protected-access-in-special-methods[or n>]'
  '--init-import[or n>]'
  '--dummy-variables-rgx[A regular expression matching the name of dummy]'
  '--additional-builtins[separated list>]'
  '--callbacks[list of strings which can identify a callback function]'
  '--redefining-builtins-modules[separated list>]'
  '--ignored-argument-names[argument names that match this expression will be]'
  '--allow-global-unused-variables[or n>]'
  '--allowed-redefined-builtins[separated list>]'
  '--max-line-length[maximum number of characters on a single line.]'
  '--ignore-long-lines[regexp for a line that is allowed to be longer than]'
  '--single-line-if-stmt[or n>]'
  '--single-line-class-stmt[or n>]'
  '--max-module-lines[maximum number of lines in a module. (default: 1000)]'
  '--indent-string[string used as indentation unit. This is usually " "]'
  '--indent-after-paren[number of spaces of indent required inside a hanging]'
  '--expected-line-ending-format[or LF or CRLF>]'
  '--deprecated-modules[deprecated modules which should not be used, separated]'
  '--preferred-modules[couples of modules and preferred modules, separated by]'
  '--import-graph[.gv>]'
  '--ext-import-graph[.gv>]'
  '--int-import-graph[.gv>]'
  '--known-standard-library[force import order to recognize a module as part of]'
  '--known-third-party[force import order to recognize a module as part of a]'
  '--allow-any-import-level[list of modules that can be imported at any level, not]'
  '--allow-wildcard-with-all[or n>]'
  '--allow-reexport-from-package[or n>]'
  '--timeout-methods[separated list>]'
  '--overgeneral-exceptions[class names>]'
  '--max-nested-blocks[maximum number of nested blocks for function / method]'
  '--never-returning-functions[names>]'
  '--min-similarity-lines[minimum lines number of a similarity. (default: 4)]'
  '--ignore-comments[or n>]'
  '--ignore-docstrings[or n>]'
  '--ignore-imports[or n>]'
  '--ignore-signatures[or n>]'
  '--max-args[maximum number of arguments for function / method.]'
  '--max-locals[maximum number of locals for function / method body.]'
  '--max-returns[maximum number of return / yield for function / method]'
  '--max-branches[maximum number of branch for function / method body.]'
  '--max-statements[maximum number of statements in function / method]'
  '--max-parents[maximum number of parents for a class (see R0901).]'
  '--ignored-parents[separated list of class names>]'
  '--max-attributes[maximum number of attributes for a class (see R0902).]'
  '--min-public-methods[minimum number of public methods for a class (see]'
  '--max-public-methods[maximum number of public methods for a class (see]'
  '--max-bool-expr[maximum number of boolean expressions in an if]'
  '--exclude-too-few-public-methods[<pattern>...\]]'
  '--check-str-concat-over-line-jumps[or n>]'
  '--check-quote-consistency[or n>]'
  '--good-names[good variable names which should always be accepted]'
  '--good-names-rgxs[good variable names regexes, separated by a comma. If]'
  '--bad-names[bad variable names which should always be refused]'
  '--bad-names-rgxs[bad variable names regexes, separated by a comma. If]'
  '--name-group[1:name2>]'
  '--include-naming-hint[or n>]'
  '--property-classes[names>]'
  '--argument-naming-style[naming style matching correct argument names.]'
  '--argument-rgx[regular expression matching correct argument names.]'
  '--attr-naming-style[naming style matching correct attribute names.]'
  '--attr-rgx[regular expression matching correct attribute names.]'
  '--class-naming-style[naming style matching correct class names. (default:]'
  '--class-rgx[regular expression matching correct class names.]'
  '--class-attribute-naming-style[naming style matching correct class attribute names.]'
  '--class-attribute-rgx[regular expression matching correct class attribute]'
  '--class-const-naming-style[naming style matching correct class constant names.]'
  '--class-const-rgx[regular expression matching correct class constant]'
  '--const-naming-style[naming style matching correct constant names.]'
  '--const-rgx[regular expression matching correct constant names.]'
  '--function-naming-style[naming style matching correct function names.]'
  '--function-rgx[regular expression matching correct function names.]'
  '--inlinevar-naming-style[naming style matching correct inline iteration names.]'
  '--inlinevar-rgx[regular expression matching correct inline iteration]'
  '--method-naming-style[naming style matching correct method names. (default:]'
  '--method-rgx[regular expression matching correct method names.]'
  '--module-naming-style[naming style matching correct module names. (default:]'
  '--module-rgx[regular expression matching correct module names.]'
  '--typealias-rgx[regular expression matching correct type alias names.]'
  '--typevar-rgx[regular expression matching correct type variable]'
  '--variable-naming-style[naming style matching correct variable names.]'
  '--variable-rgx[regular expression matching correct variable names.]'
  '--no-docstring-rgx[regular expression which should only match function or]'
  '--docstring-min-length[minimum line length for functions/classes that require]'
  '*:filename:_files'
)

_arguments -s $arguments
