#compdef ocaml

local arguments

arguments=(
  '-absname[show absolute filenames in error messages]'
  '-I[add <dir> to the list of include directories]'
  '-init[load <file> instead of default init file]'
  '-labels[use commuting label mode]'
  '-alias-deps[do record dependencies for module aliases]'
  '-no-alias-deps[do not record dependencies for module aliases]'
  '-app-funct[activate applicative functors]'
  '-no-app-funct[deactivate applicative functors]'
  '-noassert[do not compile assertion checks]'
  '-noinit[do not load any init file]'
  '-nolabels[ignore non-optional labels in types]'
  '-noprompt[suppress all prompts]'
  '-nopromptcont[suppress prompts for continuation lines of multi-line inputs]'
  '-nostdlib[do not add default directory to the list of include directories]'
  '-open[opens the module <module> before typing]'
  '-ppx[pipe abstract syntax trees through preprocessor <command>]'
  '-plugin[load dynamic plugin <plugin>]'
  '-principal[check principality of type inference]'
  '-no-principal[do not check principality of type inference (default)]'
  '-rectypes[allow arbitrary recursive types]'
  '-no-rectypes[do not allow arbitrary recursive types (default)]'
  '-safe-string[make strings immutable]'
  '-short-paths[shorten paths in types]'
  '-stdin[read script from standard input]'
  '-strict-sequence[left-hand part of a sequence must have type unit]'
  '-no-strict-sequence[left-hand part of a sequence need not have type unit (default)]'
  '-strict-formats[reject invalid formats accepted by legacy implementations]'
  '-no-strict-formats[accept invalid formats accepted by legacy implementations (default)]'
  '-unboxed-types[unannotated unboxable types will be unboxed]'
  '-no-unboxed-types[unannotated unboxable types will not be unboxed (default)]'
  '-unsafe[do not compile bounds checking on array and string access]'
  '-unsafe-string[make strings mutable (default)]'
  '-version[print version and exit]'
  '--version[print version and exit]'
  '-no-version[do not print version at startup]'
  '-vnum[print version number and exit]'
  '-w[enable or disable warnings according to <list>:]'
  '-warn-error[enable or disable error status for warnings according]'
  '-warn-help[show description of warning numbers]'
  '-dsource[(undocumented)]'
  '-dparsetree[(undocumented)]'
  '-dtypedtree[(undocumented)]'
  '-drawlambda[(undocumented)]'
  '-dlambda[(undocumented)]'
  '-dinstr[(undocumented)]'
  '-args[read additional newline-terminated command line arguments]'
  '-args0[read additional null character terminated command line arguments]'
  '-help[display this list of options]'
  '--help[display this list of options]'
  '*:filename:_files'
)

_arguments -s $arguments
