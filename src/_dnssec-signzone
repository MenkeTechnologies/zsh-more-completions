#compdef dnssec-signzone

local arguments

arguments=(
  '-S[smart signing: automatically finds key files]'
  '-K[directory to find key files (.)]'
  '-d[directory to find dsset-* files (.)]'
  '-g[update DS records based on child zones dsset-* files]'
  '-s[+offset\]:]'
  '-e[+offset|"now"+offset\]:]'
  '-X[+offset|"now"+offset\]:]'
  '-i[cycle interval - resign if < interval from end ( (end-start)/4 )]'
  '-j[randomize signature end time up to jitter seconds]'
  '-v[(0)]'
  '-V[print version information]'
  '-o[zone origin (name of zonefile)]'
  '-f[file the signed zone is written in (zonefile + .signed)]'
  '-I[file format of input zonefile (text)]'
  '-O[file format of signed zone file (text)]'
  '-N[soa serial format of signed zone file (keep)]'
  '-D[:]'
  '-r[a file containing random data]'
  '-a[verify generated signatures]'
  '-c[(IN)]'
  '-E[name of an OpenSSL engine to use]'
  '-p[use pseudorandom data (faster but less secure)]'
  '-P[disable post-sign verification]'
  '-Q[remove signatures from keys that are no longer active]'
  '-R[remove signatures from keys that no longer exist]'
  '-T[TTL for newly added DNSKEYs]'
  '-t[print statistics]'
  '-u[update or replace an existing NSEC/NSEC3 chain]'
  '-x[sign DNSKEY record with KSKs only, not ZSKs]'
  '-z[sign all records with KSKs]'
  '-C[generate a keyset file, for compatibility]'
  '-n[(number of cpus present)]'
  '-k[]'
  '-l[]'
  '-3[3 salt]'
  '-H[3 iterations (10)]'
  '-A[3 optout]'
  '*:filename:_files'
)

_arguments -s $arguments
