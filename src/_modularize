#compdef modularize

local arguments

arguments=(
  '--color[- Use colors in output (default=autodetect)]'
  '-I[- Include path for coverage check.]'
  '--aarch64-neon-syntax[- Choose style of NEON code to emit from AArch64 backend:]'
  '--amdgpu-disable-loop-alignment[- Do not align and prefetch loops]'
  '--amdgpu-disable-power-sched[- Disable scheduling to minimize mAI power bursts]'
  '--amdgpu-dpp-combine[- Enable DPP combiner]'
  '--amdgpu-dump-hsa-metadata[- Dump AMDGPU HSA Metadata]'
  '--amdgpu-enable-global-sgpr-addr[- Enable use of SGPR regs for GLOBAL LOAD/STORE instructions]'
  '--amdgpu-enable-merge-m0[- Merge and hoist M0 initializations]'
  '--amdgpu-sdwa-peephole[- Enable SDWA peepholer]'
  '--amdgpu-spill-sgpr-to-smem[- Use scalar stores to spill SGPRs if supported by subtarget]'
  '--amdgpu-verify-hsa-metadata[- Verify AMDGPU HSA Metadata]'
  '--amdgpu-vgpr-index-mode[- Use GPR indexing mode instead of movrel for vector indexing]'
  '--arm-add-build-attributes[-]'
  '--arm-implicit-it[- Allow conditional instructions outdside of an IT block]'
  '--atomic-counter-update-promoted[- Do counter update using atomic fetch add  for promoted counters only]'
  '--block-check-header-list-only[- Only warn if #include directives are inside extern or namespace blocks if the included header is in the header list.]'
  '--bounds-checking-single-trap[- Use one trap block per function]'
  '--cost-kind[- Target cost kind]'
  '--coverage-check-only[- Only do the coverage check.]'
  '--cvp-dont-add-nowrap-flags[-]'
  '--disable-promote-alloca-to-lds[- Disable promote alloca to LDS]'
  '--disable-promote-alloca-to-vector[- Disable promote alloca to vector]'
  '--display-file-lists[- Display lists of good files (no compile errors), problem files, and a combined list with problem files preceded by a #.]'
  '--do-counter-promotion[- Do counter register promotion]'
  '--emscripten-cxx-exceptions-whitelist[- The list of function names in which Emscripten-style exception handling is enabled (see emscripten EMSCRIPTEN_CATCHING_WHITELIST options)]'
  '--enable-cse-in-irtranslator[- Should enable CSE in irtranslator]'
  '--enable-cse-in-legalizer[- Should enable CSE in Legalizer]'
  '--enable-emscripten-cxx-exceptions[- WebAssembly Emscripten-style exception handling]'
  '--enable-emscripten-sjlj[- WebAssembly Emscripten-style setjmp/longjmp handling]'
  '--enable-gvn-memdep[-]'
  '--enable-load-pre[-]'
  '--enable-loop-simplifycfg-term-folding[-]'
  '--enable-name-compression[- Enable name string compression]'
  '--execute-concurrency[- The number of threads used to process all files in parallel. Set to 0 for hardware concurrency. This flag only applies to all-TUs.]'
  '--executor[- The name of the executor to use.]'
  '--expensive-combines[- Enable expensive instruction combines]'
  '--filter[- Only process files that match this filter. This flag only applies to all-TUs.]'
  '--gpsize[- Global Pointer Addressing Size.  The default size is 8.]'
  '--hash-based-counter-split[- Rename counter variable of a comdat function based on cfg hash]'
  '--import-all-index[- Import all external functions in index.]'
  '--instcombine-code-sinking[- Enable code sinking]'
  '--instcombine-guard-widening-window[- How wide an instruction window to bypass looking for another guard]'
  '--instcombine-max-num-phis[- Maximum number phis to handle in intptr/ptrint folding]'
  '--instcombine-maxarray-size[- Maximum array size considered when doing a combine]'
  '--instrprof-atomic-counter-update-all[- Make all profile counter updates atomic (for testing only)]'
  '--internalize-public-api-file[- A file containing list of symbol names to preserve]'
  '--internalize-public-api-list[- A list of symbol names to preserve]'
  '--iterative-counter-promotion[- Allow counter promotion across the whole loop nest.]'
  '--lto-pass-remarks-filter[- Only record optimization remarks from passes whose names match the given regular expression]'
  '--lto-pass-remarks-format[- The format used for serializing remarks (default: YAML)]'
  '--lto-pass-remarks-output[- Output filename for pass remarks]'
  '--max-counter-promotions[- Max number of allowed counter promotions]'
  '--max-counter-promotions-per-loop[- Max number counter promotions per loop to avoid increasing register pressure too much]'
  '--memop-size-large[- Set large value thresthold in memory intrinsic size profiling. Value of 0 disables the large value profiling.]'
  '--memop-size-range[- Set the range of size in memory intrinsic calls to be profiled precisely, in a format of <start_val>:<end_val>]'
  '--merror-missing-parenthesis[- Error for missing parenthesis around predicate registers]'
  '--merror-noncontigious-register[- Error for register names that arent contigious]'
  '--mhvx[- Enable Hexagon Vector eXtensions]'
  '--mhvx[- Enable Hexagon Vector eXtensions]'
  '--mips-compact-branches[- MIPS Specific: Compact branch policy.]'
  '--mips16-constant-islands[- Enable mips16 constant islands.]'
  '--mips16-hard-float[- Enable mips16 hard float.]'
  '--mno-compound[- Disable looking for compound instructions for Hexagon]'
  '--mno-fixup[- Disable fixing up resolved relocations for Hexagon]'
  '--mno-ldc1-sdc1[- Expand double precision loads and stores to their single precision counterparts]'
  '--mno-pairing[- Disable looking for duplex instructions for Hexagon]'
  '--module-map-path[- Turn on module map output and specify output path or file name. If no path is specified and if prefix option is specified, use prefix for file path.]'
  '--mwarn-missing-parenthesis[- Warn for missing parenthesis around predicate registers]'
  '--mwarn-noncontigious-register[- Warn for register names that arent contigious]'
  '--mwarn-sign-mismatch[- Warn for mismatching a signed and unsigned value]'
  '--no-coverage-check[- Dont do the coverage check.]'
  '--no-discriminators[- Disable generation of discriminator information.]'
  '--nvptx-sched4reg[- NVPTX Specific: schedule for register pressue]'
  '--poison-checking-function-local[- Check that returns are non-poison (for testing)]'
  '--prefix[- Prepend header file paths with this prefix. If not specified, the files are considered to be relative to the header list file.]'
  '--problem-files-list[- List of files with compilation or modularization problems for assistant mode.  This will be excluded.]'
  '--r600-ir-structurize[- Use StructurizeCFG IR pass]'
  '--rdf-dump[-]'
  '--rdf-limit[-]'
  '--remarks-section[- Emit a section containing remark diagnostics metadata]'
  '--root-module[- Specify the name of the root module.]'
  '--safepoint-ir-verifier-print-only[-]'
  '--sample-profile-check-record-coverage[- Emit a warning if less than N% of records in the input profile are matched to the IR.]'
  '--sample-profile-check-sample-coverage[- Emit a warning if less than N% of samples in the input profile are matched to the IR.]'
  '--sample-profile-max-propagate-iterations[- Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.]'
  '--speculative-counter-promotion-max-exiting[- The max number of exiting blocks of a loop to allow  speculative counter promotion]'
  '--speculative-counter-promotion-to-loop[- When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.]'
  '--summary-file[- The summary file to use for function importing.]'
  '--threads[-]'
  '--time-trace-granularity[- Minimum time granularity (in microseconds) traced by time profiler]'
  '--verify-region-info[- Verify region info (time consuming)]'
  '--vp-counters-per-site[- The average number of profile counters allocated per value profiling site.]'
  '--vp-static-alloc[- Do static counter allocation for value profiler]'
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '*:filename:_files'
)

_arguments -s $arguments
