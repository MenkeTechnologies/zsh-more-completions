#compdef openvpn

local arguments

arguments=(
  '--config[Read configuration options from file.]'
  '--help[Show options.]'
  '--version[Show copyright and version information.]'
  '--local[Local host name or ip address. Implies --bind.]'
  '--remote[\[port\] : Remote host name or ip address.]'
  '--remote-random[if multiple --remote options specified, choose one randomly.]'
  '--remote-random-hostname[add a random string to remote DNS name.]'
  '--mode[Major mode, m = p2p (default, point-to-point) or server.]'
  '--proto[Use protocol p for communicating with peer.]'
  '--proto-force[only consider protocol p in list of connection profiles.]'
  '--connect-retry[\[m\] : For client, number of seconds to wait between]'
  '--connect-retry-max[Maximum connection attempt retries, default infinite.]'
  '--http-proxy[p \[up\] \[auth\] : Connect to remote host]'
  '--http-proxy[p auto\[-nct\] : Like the above directive, but automatically]'
  '--http-proxy-option[\[parm\] : Set extended HTTP proxy options.]'
  '--socks-proxy[\[p\] \[up\] : Connect to remote host through a Socks5 proxy at]'
  '--socks-proxy-retry[retry indefinitely on Socks proxy errors.]'
  '--resolv-retry[if hostname resolve fails for --remote, retry]'
  '--float[Allow remote to change its IP address/port, such as through]'
  '--ipchange[Run command cmd on remote ip address initial]'
  '--port[TCP/UDP port # for both local and remote.]'
  '--lport[TCP/UDP port # for local (default=1194). Implies --bind.]'
  '--rport[TCP/UDP port # for remote (default=1194).]'
  '--bind[Bind to local address and port. (This is the default unless]'
  '--proto[or --http-proxy or --socks-proxy is used).]'
  '--nobind[Do not bind to local address and port.]'
  '--dev[tun/tap device (X can be omitted for dynamic device.]'
  '--dev-type[Which device type are we using? (dt = tun or tap) Use]'
  '--dev-node[Explicitly set the device node rather than using]'
  '--lladdr[Set the link layer address of the tap device.]'
  '--topology[Set --dev tun topology: net30, p2p, or subnet.]'
  '--iproute[Use this command instead of default /sbin/ip.]'
  '--ifconfig[rn : TUN: configure device to use IP address l as a local]'
  '--ifconfig-ipv6[r : configure device to use IPv6 address l as local]'
  '--ifconfig-noexec[dont actually execute ifconfig/netsh command, instead]'
  '--ifconfig-nowarn[dont warn if the --ifconfig option on this side of the]'
  '--route[\[netmask\] \[gateway\] \[metric\] :]'
  '--route-ipv6[/bits \[gateway\] \[metric\] :]'
  '--route-gateway[dhcp : Specify a default gateway for use with --route.]'
  '--route-metric[Specify a default metric for use with --route.]'
  '--route-delay[\[w\] : Delay n seconds after connection initiation before]'
  '--route-up[Run command cmd after routes are added.]'
  '--route-pre-down[Run command cmd before routes are removed.]'
  '--route-noexec[Dont add routes automatically. Instead pass routes to]'
  '--route-up[using environmental variables.]'
  '--route-nopull[When used with --client or --pull, accept options pushed]'
  '--allow-pull-fqdn[allow client to pull DNS names from server for]'
  {--ifconfig,--route}'[and --route-gateway.]'
  '--redirect-gateway[automatically execute routing]'
  '--redirect-private[like --redirect-gateway, but omit actually changing]'
  '--client-nat[network netmask alias : on client add 1-to-1 NAT rule.]'
  '--push-peer-info[(client only) push client info to server.]'
  '--setenv[value : Set a custom environmental variable to pass to script.]'
  '--setenv[1 : Relax config file syntax checking to allow]'
  '--ignore-unkown-option[1 opt2 ...: Relax config file syntax. Allow]'
  '--script-security[where level can be:]'
  '--shaper[Restrict output to peer to n bytes per second.]'
  '--keepalive[m : Helper option for setting timeouts in server mode. Send]'
  '--inactive[\[bytes\] : Exit after n seconds of activity on tun/tap device]'
  '--ping-exit[Exit if n seconds pass without reception of remote ping.]'
  '--ping-restart[restart if n seconds pass without reception of remote ping.]'
  '--ping-timer-rem[Run the --ping-exit/--ping-restart timer only if we have a]'
  '--ping[Ping remote once every n seconds over TCP/UDP port.]'
  '--multihome[Configure a multi-homed UDP server.]'
  '--fast-io[(experimental) Optimize TUN/TAP/UDP writes.]'
  '--remap-usr1[On SIGUSR1 signals, remap signal (s=SIGHUP or SIGTERM).]'
  '--persist-tun[Keep tun/tap device open across SIGUSR1 or --ping-restart.]'
  '--persist-remote-ip[keep remote IP address across SIGUSR1 or --ping-restart.]'
  '--persist-local-ip[Keep local IP address across SIGUSR1 or --ping-restart.]'
  '--persist-key[Dont re-read key files across SIGUSR1 or --ping-restart.]'
  '--passtos[TOS passthrough (applies to IPv4 only).]'
  '--tun-mtu[Take the tun/tap device MTU to be n and derive the]'
  '--tun-mtu-extra[Assume that tun/tap device might return as many]'
  '--link-mtu[Take the TCP/UDP device MTU to be n and derive the tun MTU]'
  '--mtu-disc[Should we do Path MTU discovery on TCP/UDP channel?]'
  '--mtu-test[Empirically measure and report MTU.]'
  '--fragment[Enable internal datagram fragmentation so that no UDP]'
  '--mssfix[Set upper bound on TCP MSS, default = tun-mtu size]'
  '--sndbuf[Set the TCP/UDP send buffer size.]'
  '--rcvbuf[Set the TCP/UDP receive buffer size.]'
  '--mark[Mark encrypted packets being sent with value. The mark value]'
  '--txqueuelen[Set the tun/tap TX queue length to n (Linux only).]'
  '--memstats[Write live usage stats to memory mapped binary file.]'
  '--mlock[Disable Paging -- ensures key material and tunnel]'
  '--up[Run command cmd after successful tun device open.]'
  '--up-delay[Delay tun/tap open and possible --up script execution]'
  '--down[Run command cmd after tun device close.]'
  '--down-pre[Run --down command before TUN/TAP close.]'
  '--up-restart[Run up/down commands for all restarts including those]'
  '--user[Set UID to user after initialization.]'
  '--group[Set GID to group after initialization.]'
  '--chroot[Chroot to this directory after initialization.]'
  '--cd[Change to this directory before initialization.]'
  '--daemon[Become a daemon after initialization.]'
  '--syslog[Output to syslog, but do not become a daemon.]'
  '--inetd[\[wait|nowait\] : Run as an inetd or xinetd server.]'
  '--log[Output log to file which is created/truncated on open.]'
  '--log-append[Append log to file, or create file if nonexistent.]'
  '--suppress-timestamps[dont log timestamps to stdout/stderr.]'
  '--machine-readable-output[always log timestamp, message flags to stdout/stderr.]'
  '--writepid[Write main process ID to file.]'
  '--nice[Change process priority (>0 = lower, <0 = higher).]'
  '--echo[...\] : Echo parameters to log output.]'
  '--verb[Set output verbosity to n (default=1):]'
  '--mute[Log at most n consecutive messages in the same category.]'
  '--status[n : Write operational status to file every n seconds.]'
  '--status-version[Choose the status file format version number.]'
  '--disable-occ[Disable options consistency check between peers.]'
  '--gremlin[Special stress testing mode (for debugging only).]'
  '--compress[Use compression algorithm alg]'
  '--comp-lzo[Use LZO compression -- may add up to 1 byte per]'
  '--comp-noadapt[Dont use adaptive compression when --comp-lzo]'
  '--management[port \[pass\] : Enable a TCP server on ip:port to handle]'
  '--management-client[management interface will connect as a TCP client to]'
  '--management-query-passwords[query management channel for private key]'
  '--management-query-proxy[query management channel for proxy information.]'
  '--management-query-remote[query management channel for --remote directive.]'
  '--management-hold[start OpenVPN in a hibernating state, until a client]'
  '--management-signal[issue SIGUSR1 when management disconnect event occurs.]'
  '--management-forget-disconnect[forget passwords when management disconnect]'
  '--management-up-down[report tunnel up/down events to management interface.]'
  '--management-log-cache[Cache n lines of log file history for usage]'
  '--management-client-user[When management interface is a unix socket, only]'
  '--management-client-group[When management interface is a unix socket, only]'
  '--management-client-auth[gives management interface client the responsibility]'
  '--management-client-pf[management interface clients must specify a packet]'
  '--plugin[\[str\]: Load plug-in module m passing str as an argument]'
  '--server[netmask : Helper option to easily configure server mode.]'
  '--server-ipv6[/bits : Configure IPv6 server mode.]'
  '--server-bridge[netmask pool-start-IP pool-end-IP\] : Helper option to]'
  '--push[" : Push a config file option back to the peer for remote]'
  '--push-reset[Dont inherit global push list for specific]'
  '--ifconfig-pool[end-IP \[netmask\] : Set aside a pool of subnets]'
  '--ifconfig-pool-linear[(DEPRECATED) Use individual addresses rather]'
  '--ifconfig-pool-persist[\[seconds\] : Persist/unpersist ifconfig-pool]'
  '--ifconfig-ipv6-pool[/bits : set aside an IPv6 network block]'
  '--ifconfig-push[remote-netmask : Push an ifconfig option to remote]'
  '--ifconfig-ipv6-push[/bits remote : Push an ifconfig-ipv6 option to]'
  '--iroute[\[netmask\] : Route subnet to client.]'
  '--iroute-ipv6[/bits : Route IPv6 subnet to client.]'
  '--disable[Client is disabled.]'
  '--client-cert-not-required[(DEPRECATED) Dont require client certificate, client]'
  '--verify-client-cert[perform no, optional or]'
  '--username-as-common-name[For auth-user-pass authentication, use]'
  '--auth-user-pass-verify[method: Query client for username/password and]'
  '--auth-gen-token[\[lifetime\] Generate a random authentication token which is pushed]'
  '--reneg-[* options are enabled. Optionally a lifetime in seconds]'
  '--opt-verify[Clients that connect with options that are incompatible]'
  '--auth-user-pass-optional[allow connections by clients that dont]'
  '--no-name-remapping[(DEPRECATED) Allow Common Name and X509 Subject to include]'
  '--client-to-client[internally route client-to-client traffic.]'
  '--duplicate-cn[Allow multiple clients with the same common name to]'
  '--client-connect[Run command cmd on client connection.]'
  '--client-disconnect[Run command cmd on client disconnection.]'
  '--client-config-dir[Directory for custom client config files.]'
  '--ccd-exclusive[refuse connection unless custom client config is found.]'
  '--tmp-dir[Temporary directory, used for --client-connect return file and plugin communication.]'
  '--hash-size[v : Set the size of the real address hash table to r and the]'
  '--bcast-buffers[Allocate n broadcast buffers.]'
  '--tcp-queue-limit[Maximum number of queued TCP output packets.]'
  '--tcp-nodelay[Macro that sets TCP_NODELAY socket flag on the server]'
  '--learn-address[Run command cmd to validate client virtual addresses.]'
  '--connect-freq[s : Allow a maximum of n new connections per s seconds.]'
  '--max-clients[Allow a maximum of n simultaneously connected clients.]'
  '--max-routes-per-client[Allow a maximum of n internal routes per client.]'
  '--stale-routes-check[\[t\] : Remove routes with a last activity timestamp]'
  '--explicit-exit-notify[In UDP server mode send \[RESTART\] command on exit/restart to connected]'
  '--port-share[port \[dir\] : When run in TCP mode, proxy incoming HTTPS]'
  '--client[Helper option to easily configure client mode.]'
  '--auth-user-pass[Authenticate with server using username/password.]'
  '--pull[Accept certain config file options from the peer as if they]'
  '--pull-filter[t : Filter each option received from the]'
  '--auth-retry[How to handle auth failures. Set t to]'
  '--static-challenge[e : Enable static challenge/response protocol using]'
  '--connect-timeout[when polling possible remote servers to connect to]'
  '--allow-recursive-routing[when this option is set, OpenVPN will not drop]'
  '--explicit-exit-notify[On exit/restart, send exit signal to]'
  '--secret[\[d\] : Enable Static Key encryption mode (non-TLS).]'
  '--auth[Authenticate packets with HMAC using message]'
  '--cipher[Encrypt packets with cipher algorithm alg]'
  '--ncp-ciphers[List of ciphers that are allowed to be negotiated.]'
  '--ncp-disable[Disable cipher negotiation.]'
  '--prng[\[nsl\] : For PRNG, use digest algorithm alg, and]'
  '--keysize[(DEPRECATED) Size of cipher key in bits (optional).]'
  '--engine[Enable OpenSSL hardware crypto engine functionality.]'
  '--no-replay[(DEPRECATED) Disable replay protection.]'
  '--mute-replay-warnings[silence the output of replay warnings to log file.]'
  '--replay-window[\[t\] : Use a replay protection sliding window of size n]'
  '--no-iv[Disable cipher IV -- only allowed with CBC mode ciphers.]'
  '--replay-persist[Persist replay-protection state across sessions]'
  '--test-crypto[Run a self-test of crypto features enabled.]'
  '--tls-server[Enable TLS and assume server role during TLS handshake.]'
  '--tls-client[Enable TLS and assume client role during TLS handshake.]'
  '--key-method[(DEPRECATED) Data channel key exchange method. m should be a method]'
  '--ca[Certificate authority file in .pem format containing]'
  '--capath[A directory of trusted certificates (CAs and CRLs).]'
  '--dh[File containing Diffie Hellman parameters]'
  '--cert[Local certificate in .pem format -- must be signed]'
  '--extra-certs[one or more PEM certs that complete the cert chain.]'
  '--key[Local private key in .pem format.]'
  '--tls-version-min[\[or-highest\] : sets the minimum TLS version we]'
  '--tls-version-max[sets the maximum TLS version we will use.]'
  '--pkcs12[PKCS#12 file containing local private key, local certificate]'
  '--x509-username-field[field in x509 certificate containing the username.]'
  '--verify-hash[\[algo\] : Specify fingerprint for level-1 certificate.]'
  '--tls-cipher[A list l of allowable TLS ciphers separated by : (optional).]'
  '--tls-cert-profile[Set the allowed certificate crypto algorithm profile]'
  '--tls-timeout[Packet retransmit timeout on TLS control channel]'
  '--reneg-bytes[Renegotiate data chan. key after n bytes sent and recvd.]'
  '--reneg-pkts[Renegotiate data chan. key after n packets sent and recvd.]'
  '--reneg-sec[Renegotiate data chan. key after n seconds (default=3600).]'
  '--hand-window[Data channel key exchange must finalize within n seconds]'
  '--tran-window[Transition window -- old key can live this many seconds]'
  '--single-session[Allow only one session (reset state on restart).]'
  '--tls-exit[Exit on TLS negotiation failure.]'
  '--tls-auth[\[d\]: Add an additional layer of authentication on top of the TLS]'
  '--tls-crypt[Add an additional layer of authenticated encryption on top]'
  '--askpass[get PEM password from controlling tty before we daemonize.]'
  '--auth-nocache[Dont cache --askpass or --auth-user-pass passwords.]'
  '--crl-verify[\[dir\]: Check peer certificate against a CRL.]'
  '--tls-verify[run command cmd to verify the X509 name of a]'
  '--tls-export-cert[Get peer cert in PEM format and store it]'
  '--verify-x509-name[accept connections only from a host with X509 subject]'
  '--ns-cert-type[(DEPRECATED) Require that peer certificate was signed with]'
  '--x509-track[Save peer X509 attribute x in environment for use by]'
  '--keying-material-exporter[len : Save Exported Keying Material (RFC5705)]'
  '--remote-cert-ku[... : Require that the peer certificate was signed with]'
  '--remote-cert-eku[Require that the peer certificate was signed with]'
  '--remote-cert-tls[require that peer certificate was signed with explicit]'
  '--pkcs11-providers[... : PKCS#11 provider to load.]'
  '--pkcs11-protected-authentication[0|1\] ... : Use PKCS#11 protected authentication]'
  '--pkcs11-private-mode[... : PKCS#11 private key mode mask.]'
  '--pkcs11-cert-private[0|1\] ... : Set if login should be performed before]'
  '--pkcs11-pin-cache[Number of seconds to cache PIN. The default is -1]'
  '--pkcs11-id-management[Acquire identity from management interface.]'
  '--pkcs11-id[id : Identity to use, get using standalone --show-pkcs11-ids]'
  '--show-ciphers[Show cipher algorithms to use with --cipher option.]'
  '--show-digests[Show message digest algorithms to use with --auth option.]'
  '--show-engines[Show hardware crypto accelerator engines (if available).]'
  '--show-tls[Show all TLS ciphers (TLS used only as a control channel).]'
  '--genkey[Generate a random key to be used as a shared secret]'
  '--secret[Write key to file.]'
  '--mktun[Create a persistent tunnel.]'
  '--rmtun[Remove a persistent tunnel.]'
  '--dev[tun/tap device]'
  '--dev-type[Device type. See tunnel options above for details.]'
  '--user[User to set privilege to.]'
  '--group[Group to set privilege to.]'
  '--show-pkcs11-ids[\[cert_private\] : Show PKCS#11 available ids.]'
  '--verb[can be added *BEFORE* this.]'
  '--show-gateway[show info about default gateway.]'
  '*:filename:_files'
)

_arguments -s $arguments
