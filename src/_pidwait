#compdef pgrep

# Autogenerated from man page /usr/share/man/man1/pgrep.1.gz

local arguments

arguments=(
    '--signal[TQ --signal signal Defines the signal to send to each matched process.]'
    {-c,--count}'[Suppress normal output; instead print a count of matching processes.]'
    {-d,--delimiter}'[Sets the string used to delimit each process ID in the output (by default a n…]':delimiter
    {-e,--echo}'[Display name and PID of the process being killed. RB ( pkill only. ).]'
    {-f,--full}'[The pattern is normally only matched against the process name.]'
    {-g,--pgroup}'[Only match processes in the process group IDs listed.]':pgrp...
    {-G,--group}'[Only match processes whose real group ID is listed.]':gid...
    {-i,--ignore-case}'[Match processes case-insensitively.]'
    {-l,--list-name}'[List the process name as well as the process ID. RB ( pgrep only. ).]'
    {-a,--list-full}'[List the full command line as well as the process ID. RB ( pgrep only. ).]'
    {-n,--newest}'[Select only the newest (most recently started) of the matching processes.]'
    {-o,--oldest}'[Select only the oldest (least recently started) of the matching processes.]'
    {-O,--older}'[Select processes older than secs.]':secs
    {-P,--parent}'[Only match processes whose parent process ID is listed.]':ppid...
    {-s,--session}'[Only match processes whose process session ID is listed.]':sid...
    {-t,--terminal}'[Only match processes whose controlling terminal is listed.]':term...
    {-u,--euid}'[Only match processes whose effective user ID is listed.]':euid...
    {-U,--uid}'[Only match processes whose real user ID is listed.]':uid...
    {-v,--inverse}'[Negates the matching.]'
    {-w,--lightweight}'[Shows all thread ids instead of pids in pgrep \s or pidwait \s context.]'
    {-x,--exact}'[Only match processes whose names (or command lines if -f is specified) exact…]'
    {-F,--pidfile}'[Read PIDs from file.]':file
    {-L,--logpidfile}'[Fail if pidfile (see -F) not locked.]'
    {-r,--runstates}'[Match only processes which match the process state.]':DRSZ...
    '--ns[Match processes that belong to the same namespaces.]:pid'
    '--nslist[Match only the provided namespaces.]:name...'
    {-q,--queue}'[Use sigqueue(3) rather than kill(2) and the value argument is used to speci…]':value
    {-V,--version}'[Display version information and exit.]'
    '--signal[Defines the signal to send to each matched process.]:signal'
    {-h,--help}'[Display help and exit.]'
    '*:filename:_files'
)
_arguments -s $arguments
