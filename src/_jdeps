#compdef jdeps

local arguments

arguments=(
  '-dotoutput[]'
  '--dot-output[destination directory for DOT file output]'
  {-s,-summary}'[print dependency summary only.]'
  {-v,-verbose}'[print all class level dependences]'
  '-verbose[Print package-level dependences excluding]:package:'
  '-verbose[Print class-level dependences excluding]:class:'
  '-apionly[]'
  '--api-only[restrict analysis to APIs i.e. dependences]'
  '-jdkinternals[]'
  '--jdk-internals[finds class-level dependences on JDK internal]'
  '-cp[]'
  '-classpath[]'
  '--class-path[specify where to find class files]'
  '--module-path[path> Specify module path]'
  '--upgrade-module-path[path> Specify upgrade module path]'
  '--system[specify an alternate system module path]'
  '--add-modules[<module-name>...\]]'
  '--multi-release[specifies the version when processing]'
  {-q,-quiet}'[suppress warning messages]'
  {-version,--version}'[version information]'
  '-m[]'
  '--module[specify the root module for analysis]'
  '--generate-module-info[generate module-info.java under the specified]'
  {--dot-output,--class-path}'[. Use]'
  '--generate-open-module[for open modules.]'
  '--generate-open-module[generate module-info.java for the specified]'
  {--dot-output,--class-path}'[.]'
  '--check[<module-name>...]'
  '--list-deps[lists the module dependences. It also prints]'
  '--list-reduced-deps[same as --list-deps with not listing]'
  '--print-module-deps[same as --list-reduced-deps with printing]'
  '-p[]'
  '-package[]'
  '--package[finds dependences matching the given package]'
  '-e[]'
  '-regex[]'
  '--regex[finds dependences matching the given pattern.]'
  '--require[finds dependences matching the given module]'
  {--regex,--require}'[mutual exclusive.]'
  {-f,-filter}'[filter dependences matching the given]'
  '-filter[Filter dependences within the same package.]:package:'
  '-filter[Filter dependences within the same archive.]:archive:'
  '-filter[Filter dependences within the same module.]:module:'
  '-filter[No -filter:package and -filter:archive]:none:'
  '-filter[still applies.]'
  '-include[restrict analysis to classes matching pattern]'
  {-p,-e}'[apply pattern to the dependences]'
  {-P,-profile}'[show profile containing a package]'
  {-R,-recursive}'[recursively traverse all run-time dependences.]'
  {-e,-f}'[is specified, only the matching]'
  {-I,--inverse}'[analyzes the dependences per other given options]'
  '--compile-time[compile-time view of transitive dependences]'
  '*:filename:_files'
)

_arguments -s $arguments
