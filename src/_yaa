#compdef yaa

local arguments

arguments=(
  '-v[increase verbosity level to stderr. Default is silent operation]'
  '-h[show usage and quit]'
  '-t[number of threads to run for compression/decompression, default is 12 on this machine]'
  '-wt[number of writer threads to run, default is nWorkerThreads (extract only)]'
  '-d[target directory, default is current directory]'
  '-o[output file, default is stdout]'
  '-a[compression algorithm for archive payload]'
  '-b[compression block size for archive payload]'
  '-i[input file, default is stdin]'
  '-ioffset[bytes to skip at the beginning of inFile, default is 0]'
  '-isize[bytes to read from inFile, default -1 = read the entire file]'
  '-iindex[input index file, must be a YAA index of the input archive]'
  '-ignore-eperm[ignore EPERM errors when setting files attributes]'
  '-include-path-list[file containing a list of paths to include (one per line, empty lines ignored); this option can be specified multiple times]'
  '-exclude-path-list[file containing a list of paths to exclude (one per line, empty lines ignored); this option can be specified multiple times]'
  '-include-path[include entry prefix PATH; this option can be specified multiple times]'
  '-exclude-path[exclude entry prefix PATH; this option can be specified multiple times]'
  '-exclude-name[exclude entry paths matching NAME (exact match of a path component); this option can be specified multiple times]'
  '-include-type[include entries matching <types> and exclude all other types]'
  '-exclude-type[exclude entries matching <types> and include all other types]'
  '-include-field[exclude <fields> from archive entries; this option can be specified multiple times]'
  '-exclude-field[include <fields> from archive entries; this option can be specified multiple times]'
  '-manifest[alias for the following options:]'
  '-exclude-field[]'
  '-include-field[1,cks,siz]'
  {-a,-b}'[]'
  '-index[alias for the following options:]'
  '-exclude-field[]'
  '-include-field[]'
  {-a,-b}'[]'
  '*:filename:_files'
)

_arguments -s $arguments
