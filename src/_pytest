#compdef pytest

local arguments

arguments=(
  '-k[only run tests which match the given substring]'
  '-k[or test_other matches all test]'
  '-m[only run tests matching given mark expression.]'
  '--markers[show markers (builtin, plugin and per-project ones).]'
  {-x,--exitfirst}'[exit instantly on first error or failed test.]'
  '--maxfail[exit after first num failures or errors.]'
  '--strict[marks not registered in configuration file raise]'
  '-c[load configuration from `file` instead of trying to]'
  '--continue-on-collection-errors[force test execution even if collection errors occur.]'
  '--rootdir[define root directory for tests. Can be relative path:]'
  {--fixtures,--funcargs}'[show available fixtures, sorted by plugin appearance]'
  '--fixtures-per-test[show fixtures per test]'
  '--import-mode[append}]'
  '--pdb[start the interactive Python debugger on errors or]'
  '--pdbcls[start a custom interactive Python debugger on errors.]'
  '--pdbcls[.terminal.debugger:TerminalPdb]'
  '--trace[immediately break when running each test.]'
  '--capture[per-test capturing method: one of fd|sys|no.]'
  '-s[shortcut for --capture=no.]'
  '--runxfail[run tests even if they are marked xfail]'
  {--lf,--last-failed}'[rerun only the tests that failed at the last run (or]'
  {--ff,--failed-first}'[run all tests but run the last failures first. This]'
  {--nf,--new-first}'[run tests from new files first, then the rest of the]'
  '--cache-show[show cache contents, dont perform collection or tests]'
  '--cache-clear[remove all cache contents at start of test run.]'
  '--lfnf[none}, --last-failed-no-failures={all,none}]'
  {--sw,--stepwise}'[exit on test fail and continue from last failing test]'
  '--stepwise-skip[ignore the first failing test but stop on the next]'
  {-v,--verbose}'[increase verbosity.]'
  {-q,--quiet}'[decrease verbosity.]'
  '--verbosity[set verbosity]'
  '-r[show extra test summary info as specified by chars]'
  '--disable-warnings[set]'
  {--disable-warnings,--disable-pytest-warnings}'[disable warnings summary]'
  {-l,--showlocals}'[show locals in tracebacks (disabled by default).]'
  '--tb[traceback print mode (auto/long/short/line/native/no).]'
  '--show-capture[stdout,stderr,log,all}]'
  '--full-trace[dont cut any tracebacks (default is to cut).]'
  '--color[color terminal output (yes/no/auto).]'
  '--durations[show N slowest setup/test durations (N=0 for all).]'
  '--pastebin[send failed|all info to bpaste.net pastebin service.]'
  '--junit-xml[create junit-xml style report file at given path.]'
  '--junit-prefix[prepend prefix to classnames in junit-xml output]'
  '--result-log[DEPRECATED path for machine-readable result log.]'
  '--collect-only[only collect tests, dont execute them.]'
  '--pyargs[try to interpret all arguments as python packages.]'
  '--ignore[ignore path during collection (multi-allowed).]'
  '--deselect[deselect item during collection (multi-allowed).]'
  '--confcutdir[only load conftest.pys relative to specified dir.]'
  '--noconftest[dont load any conftest.py files.]'
  '--keep-duplicates[keep duplicate tests.]'
  '--collect-in-virtualenv[dont ignore tests in a local virtualenv directory]'
  '--doctest-modules[run doctests in all .py modules]'
  '--doctest-report[cdiff,ndiff,udiff,only_first_failure}]'
  '--doctest-glob[doctests file matching pattern, default: test*.txt]'
  '--doctest-ignore-import-errors[ignore doctest ImportErrors]'
  '--doctest-continue-on-failure[for a given doctest, continue to run after the first]'
  '--basetemp[base temporary directory for this test run.(warning:]'
  '--version[display pytest lib version and import information.]'
  '(- * :)'{-h,--help}'[show help message and configuration info]'
  '-p[early-load given plugin (multi-allowed). To avoid]'
  '--trace-config[trace considerations of conftest.py files.]'
  '--debug[store internal tracing debug information in]'
  {-o,--override-ini}'[override ini option with "option=value" style, e.g.]'
  '--assert[control assertion debugging tools. plain performs no]'
  '--setup-only[only setup fixtures, do not execute tests.]'
  '--setup-show[show setup of fixtures while executing tests.]'
  '--setup-plan[show what fixtures and tests would be executed but]'
  {-W,--pythonwarnings}'[set which warnings to report, see -W option of python]'
  '--no-print-logs[disable printing caught logs on failed tests.]'
  '--log-level[logging level used by the logging module]'
  '--log-format[log format as used by the logging module.]'
  '--log-date-format[log date format as used by the logging module.]'
  '--log-cli-level[cli logging level.]'
  '--log-cli-format[log format as used by the logging module.]'
  '--log-cli-date-format[log date format as used by the logging module.]'
  '--log-file[path to a file when logging will be written to.]'
  '--log-file-level[log file logging level.]'
  '--log-file-format[log format as used by the logging module.]'
  '--log-file-date-format[log date format as used by the logging module.]'
  '*:filename:_files'
)

_arguments -s $arguments
