#compdef fsharpi

local arguments

arguments=(
  '--use[Use the given file on startup as initial input]:<file>:'
  '--load[#load the given file on startup]:<file>:'
  '--reference[Reference an assembly (Short form: -r)]:<file>:'
  '--debug[emit debug information (Short form: -g)]'
  '--debug[:{full|pdbonly|portable|embedded} Specify debugging type: full, portable]'
  '--optimize[enable optimizations (Short form: -O)]'
  '--tailcalls[enable or disable tailcalls]'
  '--deterministic[produce a deterministic assembly (including]'
  '--crossoptimize[enable or disable cross-module optimizations]'
  '--warnaserror[report all warnings as errors]'
  '--warnaserror[;...> Report specific warnings as errors]'
  '--warn[Set a warning level (0-5)]:<n>:'
  '--nowarn[Disable specific warning messages]:<warn;...>:'
  '--warnon[Enable specific warnings that may be off by]:<warn;...>:'
  '--consolecolors[output warning and error messages in color]'
  '--checked[generate overflow checks]'
  '--define[Define conditional compilation symbols (Short]:<string>:'
  '--mlcompatibility[ignore ML compatibility warnings]'
  '--nologo[suppress compiler copyright message]'
  '--help[display this usage message (Short form: -\?)]'
  '--codepage[Specify the codepage used to read source files]:<n>:'
  '--utf8output[output messages in UTF-8 encoding]'
  '--preferreduilang[Specify the preferred output language culture]:<string>:'
  '--fullpaths[output messages with fully qualified paths]'
  '--lib[Specify a directory for the include path which]:<dir;...>:'
  '--simpleresolution[resolve assembly references using]'
  '--targetprofile[Specify target framework profile of this]:<string>:'
  '--noframework[do not reference the default CLI assemblies by]'
  '--exec[exit fsi after loading the files or running the]'
  '--gui[execute interactions on a Windows Forms event]'
  '--quiet[suppress fsi writing to stdout]'
  '--readline[support TAB completion in console (on by]'
  '--quotations-debug[emit debug information in quotations]'
  '--shadowcopyreferences[prevents references from being locked by the F#]'
  '*:filename:_files'
)

_arguments -s $arguments
