#compdef zstd-frugal

local arguments

arguments=(
  '-d[: decompression]'
  '-D[use DICT as Dictionary for compression or decompression]'
  '-o[result stored into `file` (only 1 output file)]'
  '-f[: disable input and output checks. Allows overwriting existing files]'
  '--rm[: remove source file(s) after successful de/compression]'
  '-k[: preserve source file(s) (default)]'
  '-h[/-H  : display help/long help and exit]'
  '-V[: display Version number and exit]'
  '-c[: force write to standard output, even if it is the console]'
  '-v[: verbose mode; specify multiple times to increase verbosity]'
  '-q[: suppress warnings; specify twice to suppress errors too]'
  '-r[: operate recursively on directories]'
  '--filelist[: read list of files to operate upon from FILE]'
  '--output-dir-flat[: processed files are stored into DIR]'
  '--output-dir-mirror[: processed files are stored into DIR respecting original directory structure]'
  '--ultra[enable levels beyond 19, up to 22 (requires more memory)]'
  '--long[enable long distance matching with given window log (default: 27)]'
  '--fast[switch to very fast compression levels (default: 1)]'
  '--adapt[dynamically adapt compression level to I/O conditions]'
  '-T[#    : spawns # compression threads (default: 1, 0==# cores)]'
  '-B[#    : select size of each job (default: 0==automatic)]'
  '--single-thread[use a single thread for both I/O and compression (result slightly different than -T1)]'
  '--rsyncable[compress using a rsync-friendly method (-B sets block size)]'
  '--exclude-compressed[: only compress files that are not already compressed]'
  '--stream-size[: specify size of streaming input from `stdin`]'
  '--size-hint[optimize compression parameters for streaming input of approximately this size]'
  '--target-compressed-block-size[: generate compressed block of approximately targeted size]'
  '--no-dictID[dont write dictID into header (dictionary compression only)]'
  '--format[: compress files to the .zst format (default)]'
  '-l[: print information about zstd compressed files]'
  '--test[: test compressed file integrity]'
  '-M[#    : Set a memory usage limit for decompression]'
  '*:filename:_files'
)

_arguments -s $arguments
