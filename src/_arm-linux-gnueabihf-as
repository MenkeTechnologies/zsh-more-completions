#compdef arm-linux-gnueabihf-as

local arguments

arguments=(
  '-a[...\]	  turn on listings]'
  '--alternate[initially turn on alternate macro syntax]'
  '--compress-debug-sections[compress DWARF debug sections using zlib]'
  '--nocompress-debug-sections[dont compress DWARF debug sections]'
  '-D[produce assembler debugging messages]'
  '--debug-prefix-map[NEW]'
  '--defsym[VAL        define symbol SYM to given value]'
  '--execstack[require executable stack for this object]'
  '--noexecstack[dont require executable stack for this object]'
  '--size-check[ELF .size directive check (default --size-check=error)]'
  '-f[skip whitespace and comment preprocessing]'
  {-g,--gen-debug}'[generate debugging information]'
  '--gstabs[generate STABS debugging information]'
  '--gstabs[+               generate STABS debug info with GNU extensions]'
  '--gdwarf-2[generate DWARF2 debugging information]'
  '--gdwarf-sections[generate per-function section names for DWARF line information]'
  '--hash-size[set the hash table size close to <value>]'
  '--help[show this message and exit]'
  '--target-help[show target specific options]'
  '-I[add DIR to search list for .include directives]'
  '-J[dont warn about signed overflow]'
  '-K[warn when differences altered for long displacements]'
  {-L,--keep-locals}'[keep local symbols (e.g. starting with `L)]'
  {-M,--mri}'[assemble in MRI compatibility mode]'
  '--MD[write dependency information in FILE (default none)]'
  '-nocpp[ignored]'
  '-o[name the object-file output OBJFILE (default a.out)]'
  '-R[fold data section into text section]'
  '--reduce-memory-overheads[prefer smaller memory use at the cost of longer]'
  '--statistics[print various measured statistics from execution]'
  '--strip-local-absolute[strip local absolute symbols]'
  '--traditional-format[use same format as native assembler when possible]'
  '--version[print assembler version number and exit]'
  {-W,--no-warn}'[suppress warnings]'
  '--warn[dont suppress warnings]'
  '--fatal-warnings[treat warnings as errors]'
  '-w[ignored]'
  '-X[ignored]'
  '-Z[generate object file even after errors]'
  '--listing-lhs-width[set the width in words of the output data column of]'
  '--listing-lhs-width2[set the width in words of the continuation lines]'
  '--listing-rhs-width[set the max width in characters of the lines from]'
  '--listing-cont-lines[set the maximum number of continuation lines used]'
  '-k[generate PIC code]'
  '-mthumb[assemble Thumb code]'
  '-mthumb-interwork[support ARM/Thumb interworking]'
  '-mapcs-32[code uses 32-bit program counter]'
  '-mapcs-26[code uses 26-bit program counter]'
  '-mapcs-float[floating point args are in fp regs]'
  '-mapcs-reentrant[re-entrant code]'
  '-matpcs[code is ATPCS conformant]'
  '-mbig-endian[assemble for big-endian]'
  '-mlittle-endian[assemble for little-endian]'
  '-mapcs-frame[use frame pointer]'
  '-mapcs-stack-check[use stack size checking]'
  '-mno-warn-deprecated[do not warn on use of deprecated feature]'
  '-mcpu[name>	  assemble for CPU <cpu name>]'
  '-march[name>	  assemble for architecture <arch name>]'
  '-mfpu[name>	  assemble for FPU architecture <fpu name>]'
  '-mfloat-abi[assemble for floating point ABI <abi>]'
  '-meabi[assemble for eabi version <ver>]'
  '-mimplicit-it[controls implicit insertion of IT instructions]'
  '-mccs[TI CodeComposer Studio syntax compatibility mode]'
  '-EB[assemble code for a big-endian cpu]'
  '-EL[assemble code for a little-endian cpu]'
  '--fix-v4bx[allow BX in ARMv4 code]'
  '*:filename:_files'
)

_arguments -s $arguments
