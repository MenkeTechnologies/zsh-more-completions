#compdef bogoutil-bdb

local arguments

arguments=(
  {-C,--no-config-file}'[dont read standard config files.]'
  {-D,--debug-to-stdout}'[direct debug output to stdout.]'
  {-k,--db-cachesize}'[set Berkeley DB cache size (MB).]'
  {-v,--verbosity}'[set debug verbosity level.]'
  {-x,--debug-flags}'[set flags to display debug information.]'
  {-y,--timestamp-date}'[set default date (format YYYYMMDD).]'
  '(- * :)'{-h,--help}'[print this help message and exit.]'
  {-V,--version}'[print version information and exit.]'
  {-d,--dump}'[dump data from file to stdout.]'
  {-l,--load}'[load data from stdin into file.]'
  {-u,--upgrade}'[upgrade wordlist version.]'
  '-w[display counts for words from stdin.]'
  '-p[display word counts and probabilities.]'
  {-I,--input-file}'[read file instead of standard input.]'
  '-H[display histogram and statistics for wordlist.]'
  '-r[compute Robinsons X for the specified file.]'
  '-R[compute Robinsons X and save it in wordlist.]'
  '-m[enable maintenance works (expiring tokens).]'
  '-n[replace non-ascii characters with ?.]'
  '-a[exclude tokens with older ages.]'
  '-c[exclude tokens with lower counts.]'
  '-s[h - exclude tokens with lengths between l and h]'
  '--unicode[/no - convert wordlist to/from unicode]'
  '--min-token-len[min len for single tokens]'
  '--max-token-len[max len for single tokens]'
  '--max-multi-token-len[max len for multi-word tokens]'
  '--multi-token-count[number of tokens per multi-word token]'
  '--db-transaction[enable or disable transactions]'
  '--db-verify[verify data file.]'
  '--db-checkpoint[flush buffer cache and checkpoint database]'
  '--db-list-logfiles[\[FLAGS\]]'
  '--db-prune[remove inactive log files in dir.]'
  '--db-recover[run recovery on database in dir.]'
  '--db-recover-harder[run catastrophic recovery on database.]'
  '--db-remove-environment[remove environment.]'
  '--db-lk-max-locks[set max lock count.]'
  '--db-lk-max-objects[set max object count.]'
  '--db-log-autoremove[set autoremoving of logs.]'
  '*:filename:_files'
)

_arguments -s $arguments
