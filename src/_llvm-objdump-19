#compdef llvm-objdump-19

# Autogenerated from man page /usr/share/man/man1/llvm-objdump-19.1.gz

local arguments

arguments=(
    '--a3[Target specific attributes (B--mattrR=I\\,help\\/R for details).]:Ia1R+a2-a3...'
    '--adjust-vma[Increase the displayed address by the specified offset.]:offset'
    '--all-headers[Display all available header information, relocation entries and the symbol t…]'
    '--arch-name[Target arch to disassemble for, see --version for available targets.]:value'
    '--archive-headers[Display archive header information.]'
    '-a[Alias for --archive-headers.]'
    '--build-id[Build ID to look up. Once found, added as an input file.]:hex'
    '-C[Alias for --demangle.]'
    '--debug-file-directory[Path to directory where to look for debug files.]:dir'
    '--debug-vars-indent[Distance to indent the source-level variable display, relative to the start o…]:value'
    '--debug-vars[Print the locations (in registers or memory) of source-level variables alongs…]:value'
    '--debuginfod[Use debuginfod to find debug files.]'
    '--demangle[Demangle symbol names.]'
    '--disassemble-all[Disassemble all sections found in the input files.]'
    '--disassemble-symbols[List of symbols to disassemble.]:value'
    '--disassemble-zeroes[Do not skip blocks of zeroes when disassembling.]'
    '--disassembler-color[Enable or disable disassembler color output.]:mode'
    '--disassembler-options[Pass target specific disassembler options.]:options'
    '--disassemble[Disassemble all executable sections found in the input files.]'
    '--dwarf[Dump the specified DWARF debug sections.]:value'
    '--dynamic-reloc[Display the dynamic relocation entries in the file.]'
    '--dynamic-syms[Display the contents of the dynamic symbol table.]'
    '-D[Alias for --disassemble-all.]'
    '-d[Alias for --disassemble.]'
    '--fault-map-section[Display the content of the fault map section.]'
    '--file-headers[Display the contents of the overall file header.]'
    '--full-contents[Display the content of each section.]'
    '-f[Alias for --file-headers.]'
    '--headers[Alias for --section-headers.]'
    '--help[Display available options (--help-hidden for more).]'
    '-h[Alias for --section-headers.]'
    '-j[Alias for --section.]:value'
    '--line-numbers[When disassembling, display source line numbers. Implies --disassemble.]'
    '-l[Alias for --line-numbers.]'
    '--macho[Use MachO specific object file parser.]'
    '--mattr[Target specific attributes (--mattr=,help/ for details).]:a1+a2-a3...'
    '--mcpu[Target a specific cpu type (--mcpu=,help/ for details).]:cpu-name'
    '--mllvm[Specify an argument to forward to LLVM\s CommandLine library.]:arg'
    '-M[Alias for --disassembler-options=.]:value'
    '-m[Alias for --macho.]'
    '--no-addresses[Alias for --no-leading-addr.]'
    '--no-debuginfod[Don\t use debuginfod to find debug files.]'
    '--no-leading-addr[When disassembling, do not print leading addresses for instructions or inline…]'
    '--no-print-imm-hex[Do not use hex format for immediate values.]'
    '--no-show-raw-insn[When disassembling instructions, do not print the instruction bytes.]'
    '--offloading[Display the content of the offloading section.]'
    '--prefix-strip[Strip out initial directories from absolute paths.]:prefix'
    '--prefix[Add prefix to absolute paths.]:prefix'
    '--pretty-pgo-analysis-map[Display PGO analysis values with formatting rather than raw numbers.]'
    '--print-imm-hex[Use hex format for immediate values (default).]'
    '--private-headers[Display format specific file headers.]'
    '-p[Alias for --private-headers.]'
    '--raw-clang-ast[Dump the raw binary contents of the clang AST section.]'
    '--reloc[Display the relocation entries in the file.]'
    '-R[Alias for --dynamic-reloc.]'
    '-r[Alias for --reloc.]'
    '--section-headers[Display summaries of the headers for each section.]'
    '--section[Operate on the specified sections only. With --macho dump segment,section.]:value'
    '--show-all-symbols[Show all symbols during disassembly, even if multiple symbols are defined at …]'
    '--show-lma[Display LMA column when dumping ELF section headers.]'
    '--source[When disassembling, display source interleaved with the disassembly.]'
    '--start-address[.]'
    '--stop-address[Set the stop address for disassembling, printing relocations and printing sym…]:address'
    '--symbol-description[Add symbol description for disassembly. This option is for XCOFF files only.]'
    '--symbolize-operands[Symbolize instruction operands when disassembling.]'
    '--syms[Display the symbol table.]'
    '-S[Alias for --source.]'
    '-s[Alias for --full-contents.]'
    '--traceback-table[Decode traceback table in disassembly. Implies --disassemble.]'
    '--triple[Target triple to disassemble for, see --version for available targets.]:value'
    '-T[Alias for --dynamic-syms.]'
    '-t[Alias for --syms.]'
    '--unwind-info[Display unwind information.]'
    '-u[Alias for --unwind-info.]'
    '--version[Display the version of this program.]'
    '-v[Alias for --version.]'
    '--wide[Ignored for compatibility with GNU objdump.]'
    '--x86-asm-syntax[Emit AT&T-style disassembly.]:att'
    '-x[Alias for --all-headers.]'
    '-z[Alias for --disassemble-zeroes llvm-objdump MachO Specific Options:.]'
    '--arch[architecture(s) from a Mach-O file to dump.]:value'
    '--archive-member-offsets[Print the offset to each archive member for Mach-O archives (requires --macho…]'
    '--bind[Display mach-o binding info.]'
    '--chained-fixups[Print chained fixup information (requires --macho).]'
    '--data-in-code[Print the data in code table for Mach-O objects (requires --macho).]'
    '--dis-symname[disassemble just this symbol\s instructions (requires --macho).]:value'
    '--dsym[Use . dSYM file for debug info.]:value'
    '--dyld-info[Print bind and rebase information used by dyld to resolve external references…]'
    '--dylib-id[Print the shared library\s id for the dylib Mach-O file (requires --macho).]'
    '--dylibs-used[Print the shared libraries used for linked Mach-O files (requires --macho).]'
    '--exports-trie[Display mach-o exported symbols.]'
    '--full-leading-addr[Print full leading address.]'
    '--function-starts[Print the function starts table for Mach-O objects.]:value'
    '-g[Print line information from debug info if available.]'
    '--indirect-symbols[Print indirect symbol table for Mach-O objects (requires --macho).]'
    '--info-plist[Print the info plist section as strings for Mach-O objects (requires --macho).]'
    '--lazy-bind[Display mach-o lazy binding info.]'
    '--link-opt-hints[Print the linker optimization hints for Mach-O objects (requires --macho).]'
    '--no-leading-headers[Print no leading headers.]'
    '--no-symbolic-operands[.]'
    '--non-verbose[Print the info for Mach-O objects in non-verbose or numeric form (requires --…]'
    '--objc-meta-data[Print the Objective-C runtime meta data for Mach-O files (requires --macho).]'
    '--private-header[Display only the first format specific file header.]'
    '--rebase[Display mach-o rebasing info.]'
    '--rpaths[Print the runtime search paths for the Mach-O file (requires --macho).]'
    '--universal-headers[Print Mach-O universal headers (requires --macho).]'
    '--weak-bind[Display mach-o weak binding info.]'
    '*:filename:_files'
)
_arguments -s $arguments
