#compdef highlight

local arguments

arguments=(
  {-B,--batch-recursive}'[convert all matching files, searches subdirs]'
  {-D,--data-dir}'[set path to data directory]'
  '--config-file[set path to a lang or theme file]'
  {-d,--outdir}'[name of output directory]'
  '(- * :)'{-h,--help}'[print this help]'
  {-i,--input}'[name of single input file]'
  {-o,--output}'[name of single output file]'
  {-P,--progress}'[print progress bar in batch mode]'
  {-q,--quiet}'[supress progress info in batch mode]'
  {-S,--syntax}'[specify type of source code]'
  {-v,--verbose}'[print debug info]'
  '--force[generate output if input syntax is unknown]'
  '--list-scripts[list installed scripts]'
  '--plug-in[execute Lua plug-in script; repeat option to]'
  '--plug-in-param[set plug-in input parameter]'
  '--print-config[print path configuration]'
  '--print-style[print stylesheet only (see --style-outfile)]'
  '--skip[ignore listed unknown file types]'
  '--start-nested[define nested language which starts input]'
  '--stdout[output to stdout (batch mode, --print-style)]'
  '--validate-input[test if input is text, remove Unicode BOM]'
  '--version[print version and copyright information]'
  {-O,--out-format}'[output file in given format]'
  {-c,--style-outfile}'[name of style file or print to stdout, if]'
  {-e,--style-infile}'[to be included in style-outfile (deprecated)]'
  {-f,--fragment}'[omit document header and footer]'
  {-F,--reformat}'[reformats and indents output in given style]'
  '--reformat-option[apply an astyle cmd line option (assumes -F)]'
  {-I,--include-style}'[include style definition in output file]'
  {-J,--line-length}'[line length before wrapping (see -V, -W)]'
  {-j,--line-number-length}'[line number width incl. left padding (default: 5)]'
  '--line-range[output only lines from number <start> to <end>]'
  {-k,--font}'[set font (specific to output format)]'
  {-K,--font-size}'[set font size (specific to output format)]'
  {-l,--line-numbers}'[print line numbers in output file]'
  {-m,--line-number-start}'[start line numbering with cnt (assumes -l)]'
  {-s,--style}'[set colour style (theme)]'
  {-t,--replace-tabs}'[replace tabs by <num> spaces]'
  {-T,--doc-title}'[document title]'
  {-u,--encoding}'[set output encoding which matches input file]'
  {-V,--wrap-simple}'[wrap lines after 80 (default) characters w/o]'
  {-W,--wrap}'[wrap lines after 80 (default) characters]'
  '--wrap-no-numbers[omit line numbers of wrapped lines]'
  {-z,--zeroes}'[pad line numbers with 0s]'
  '--delim-cr[set CR as end-of-line delimiter (MacOS 9)]'
  '--keep-injections[output plug-in injections in spite of -f]'
  '--kw-case[change case of case insensitive keywords]'
  '--no-trailing-nl[omit trailing newline]'
  '--no-version-info[omit version info comment]'
  {-a,--anchors}'[attach anchor to line numbers]'
  {-y,--anchor-prefix}'[set anchor name prefix]'
  {-N,--anchor-filename}'[use input file name as anchor prefix]'
  {-C,--print-index}'[print index with hyperlinks to output files]'
  {-n,--ordered-list}'[print lines as ordered list items]'
  '--class-name[set CSS class name prefix;]'
  '--inline-css[output CSS within each tag (verbose output)]'
  '--enclose-pre[enclose fragmented output with pre tag]'
  {-b,--babel}'[disable Babel package shorthands]'
  {-r,--replace-quotes}'[replace double quotes by \dq{}]'
  '--beamer[adapt output for the Beamer package]'
  '--pretty-symbols[improve appearance of brackets and other symbols]'
  '--page-color[include page color attributes]'
  {-x,--page-size}'[set page size]'
  '--char-styles[include character stylesheets]'
  '--height[set image height (units allowed)]'
  '--width[set image width (see --height)]'
  '--canvas[set background colour padding (default: 80)]'
  '--doc[create stand alone document]'
  '--no-doc[cancel the --doc option]'
  '--css[the external style sheet filename]'
  '--src-lang[source language]'
  {-t,--tab}'[specify tab length]'
  {-n,--line-number}'[0\] number all output lines, optional padding]'
  '--line-number-ref[number all output lines and generate an anchor]'
  '--output-dir[output directory]'
  '--failsafe[if no language definition is found for the]'
  '*:filename:_files'
)

_arguments -s $arguments
