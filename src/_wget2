#compdef wget2

local arguments

arguments=(
  {-a,--append-output}'[file where messages are appended to, - for STDOUT]'
  {-b,--background}'[go to background immediately after startup. If no]'
  {-B,--base}'[base for relative URLs read from input-file]'
  '--config[path to initialization file (default: ~/.config/wget/wget2rc)]'
  {-d,--debug}'[print debugging messages.(default: off)]'
  {-e,--execute}'[wget compatibility option, not needed for Wget]'
  '--force-atom[treat input file as Atom Feed. (default: off) (NEW!)]'
  '--force-css[treat input file as CSS. (default: off) (NEW!)]'
  {-F,--force-html}'[treat input file as HTML. (default: off)]'
  '--force-metalink[treat input file as Metalink. (default: off) (NEW!)]'
  '--force-rss[treat input file as RSS Feed. (default: off) (NEW!)]'
  '--force-sitemap[treat input file as Sitemap. (default: off) (NEW!)]'
  '--fsync-policy[use fsync() to wait for data being written to]'
  {-h,--help}'[print this help.]'
  '--hyperlink[enable terminal hyperlink support]'
  '--input-encoding[character encoding of the file contents read with]'
  '--input-file[. (default: local encoding)]'
  {-i,--input-file}'[file where URLs are read from, - for STDIN.]'
  '--local-db[read or load databases]'
  {-o,--output-file}'[file where messages are printed to]'
  {-q,--quiet}'[print no messages except debugging messages.]'
  '--stats-dns[print DNS stats. (default: off)]'
  '--stats-dns[]'
  '--stats-ocsp[print OCSP stats. (default: off)]'
  '--stats-ocsp[]'
  '--stats-server[print server stats. (default: off)]'
  '--stats-server[]'
  '--stats-site[print site stats. (default: off)]'
  '--stats-site[]'
  '--stats-tls[print TLS stats. (default: off)]'
  '--stats-tls[]'
  '--unlink[remove files before clobbering. (default: off)]'
  {-v,--verbose}'[print more messages. (default: on)]'
  {-V,--version}'[display the version of Wget and exit.]'
  {-A,--accept}'[comma-separated list of file name suffixes or]'
  '--accept-regex[regex matching accepted URLs.]'
  '--ask-password[print prompt for password]'
  '--backups[make backups instead of overwriting/increasing]'
  '--bind-address[bind to sockets to local address.]'
  '--bind-interface[bind sockets to the input Network Interface.]'
  '--body-data[data to be sent in a request.]'
  '--body-file[file with data to be sent in a request.]'
  '--cache[enabled using of server cache. (default: on)]'
  '--chunk-size[download large files in multithreaded chunks.]'
  '--clobber[enable file clobbering. (default: on)]'
  '--connect-timeout[connect timeout in seconds.]'
  '--content-on-error[save response body even on error status.]'
  {-c,--continue}'[continue download for given files. (default: off)]'
  '--convert-file-only[convert only filename part of embedded URLs.]'
  {-k,--convert-links}'[convert embedded URLs to local URLs.]'
  '--cut-file-get-vars[cut HTTP GET vars from file names. (default: off)]'
  '--cut-url-get-vars[cut HTTP GET vars from URLs. (default: off)]'
  '--delete-after[dont save downloaded files. (default: off)]'
  '--dns-cache[caching of domain name lookups. (default: on)]'
  '--dns-cache-preload[file to be used to preload the DNS cache.]'
  '--dns-timeout[DNS lookup timeout in seconds.]'
  {-D,--domains}'[comma-separated list of domains to follow.]'
  '--download-attr[recognize HTML5 download attributes.]'
  {-X,--exclude-directories}'[comma-separated list of directories NOT to download.]'
  '--exclude-domains[comma-separated list of domains NOT to follow.]'
  '--filter-mime-type[specify a list of mime types to be saved or ignored]'
  '--filter-urls[apply the accept and reject filters on the URL]'
  '--follow-sitemaps[scan sitemaps found in robots.txt. (default: on)]'
  '--follow-tags[scan additional tag/attributes for URLs]'
  '--force-progress[force progress bar.]'
  '--http2-request-window[max. number of parallel streams per HTTP/2]'
  '--if-modified-since[do not send If-Modified-Since header in -N mode.]'
  '--ignore-case[ignore case when matching files. (default: off)]'
  '--ignore-length[ignore content-length header field]'
  '--ignore-tags[ignore tag/attributes for URL scanning]'
  {-I,--include-directories}'[comma-separated list of directories TO download.]'
  {-4,--inet4-only}'[use IPv4 connections only. (default: off)]'
  {-6,--inet6-only}'[use IPv6 connections only. (default: off)]'
  '--iri[wget dummy option, you cant switch off]'
  '--keep-extension[if file exists: Use pattern basename_N.ext]'
  {-l,--level}'[maximum recursion depth. (default: 5)]'
  '--local-encoding[character encoding of environment and filenames.]'
  '--max-redirect[max. number of redirections to follow.]'
  '--max-threads[max. concurrent download threads.]'
  {-m,--mirror}'[turn on mirroring options -r -N -l inf]'
  '--netrc[load credentials from ~/.netrc if not given.]'
  {-O,--output-document}'[file where downloaded content is written to]'
  {-p,--page-requisites}'[download all necessary files to display a]'
  '--parent[ascend above parent directory. (default: on)]'
  '--password[password for Authentication.]'
  '--post-data[data to be sent in a POST request.]'
  '--post-file[file with data to be sent in a POST request.]'
  '--prefer-family[prefer IPv4 or IPv6. (default: none)]'
  '--progress[type of progress bar (bar, none).]'
  '--proxy[enable support for *_proxy environment variables.]'
  '--random-wait[wait 0.5 up to 1.5*<--wait> seconds between]'
  '--read-timeout[read and write timeout in seconds.]'
  {-r,--recursive}'[recursive download. (default: off)]'
  '--regex-type[regular expression type. Possible types are]'
  {-R,--reject}'[comma-separated list of file name suffixes or]'
  '--reject-regex[regex matching rejected URLs.]'
  '--remote-encoding[character encoding of remote files]'
  '--report-speed[output bandwidth as TYPE. TYPE can be bytes]'
  '--restrict-file-names[unix, windows, nocontrol, ascii, lowercase]'
  '--retry-on-http-error[specify a list of http statuses in which the download will be retried]'
  '--robots[respect robots.txt standard for recursive]'
  '--save-content-on[specify a list of response codes that requires its]'
  {-S,--server-response}'[print the server response headers. (default: off)]'
  {-H,--span-hosts}'[span hosts that were not given on the]'
  '--spider[enable web spider mode. (default: off)]'
  '--start-pos[start downloading at zero-based position, 0 = option disabled. (default: 0)]'
  '--strict-comments[A dummy option. Parsing always works non-strict.]'
  '--tcp-fastopen[enable TCP Fast Open (TFO). (default: on)]'
  {-T,--timeout}'[general network timeout in seconds.]'
  {-N,--timestamping}'[just retrieve younger files than the local ones.]'
  {-t,--tries}'[number of tries for each download. (default 20)]'
  '--trust-server-names[on redirection use the servers filename.]'
  '--use-askpass[prompt for a user and password using]'
  '--use-server-timestamps[set local files timestamp to servers timestamp.]'
  '--user[username for Authentication.]'
  {-w,--wait}'[wait number of seconds between downloads]'
  '--waitretry[wait up to number of seconds after error]'
  '--xattr[save extended file attributes. (default: off)]'
  {-E,--adjust-extension}'[append extension to saved file (.html or .css).]'
  '--auth-no-challenge[send Basic HTTP Authentication before challenge]'
  {-K,--backup-converted}'[when converting, keep the original file with]'
  '--compression[customize Accept-Encoding with]'
  '--content-disposition[take filename from Content-Disposition.]'
  '--cookie-suffixes[load public suffixes from file.]'
  '--cookies[enable use of cookies. (default: on)]'
  '--default-http-port[set default port for HTTP. (default: 80)]'
  '--default-https-port[set default port for HTTPS. (default: 443)]'
  '--default-page[default file name. (default: index.html)]'
  '--header[insert input string as a HTTP header in]'
  '--html-extension[obsoleted by --adjust-extension]'
  '--http-keep-alive[keep connection open for further requests.]'
  '--http-password[password for HTTP Authentication.]'
  '--http-proxy[set HTTP proxy/proxies, overriding environment]'
  '--http-proxy-password[password for HTTP Proxy Authentication.]'
  '--http-proxy-user[username for HTTP Proxy Authentication.]'
  '--http-user[username for HTTP Authentication.]'
  '--keep-session-cookies[also save session cookies. (default: off)]'
  '--limit-rate[limit rate of download per second, 0 = no limit. (default: 0)]'
  '--load-cookies[load cookies from file.]'
  '--metalink[follow a metalink file instead of storing it]'
  '--method[HTTP method to use for request.]'
  '--netrc-file[set file for login/password to use instead of]'
  {-Q,--quota}'[download quota, 0 = no quota. (default: 0)]'
  '--referer[include Referer: url in HTTP request.]'
  '--retry-connrefused[consider "connection refused" a transient error.]'
  '--save-cookies[save cookies to file.]'
  '--save-headers[save the response headers in front of the response]'
  {-U,--user-agent}'[HTTP User Agent string.]'
  '--ca-certificate[file with bundle of PEM CA certificates.]'
  '--ca-directory[directory with PEM CA certificates.]'
  '--certificate[file with client certificate.]'
  '--certificate-type[certificate type: PEM or DER (known as ASN1).]'
  '--check-certificate[check the servers certificate. (default: on)]'
  '--check-hostname[check the servers certificates hostname.]'
  '--crl-file[file with PEM CRL certificates.]'
  '--dane[enable DANE certificate checking.(default: off)]'
  '--egd-file[file to be used as socket for random data from]'
  '--hpkp[use HTTP Public Key Pinning (HPKP). (default: on)]'
  '--hpkp-file[set file for storing HPKP data]'
  '--hsts[use HTTP Strict Transport Security (HSTS).]'
  '--hsts-file[set file for HSTS caching. (default: $XDG_DATA_HOME/wget/.wget-hsts)]'
  '--hsts-preload[use HTTP Strict Transport Security (HSTS).]'
  '--hsts-preload-file[set name for the HSTS Preload file (DAFSA format).]'
  '--http2[use HTTP/2 protocol if possible. (default: on)]'
  '--http2-only[only use HTTP/2 protocol, error if server doesnt offer it. (default: off)]'
  '--https-enforce[use secure HTTPS instead of HTTP. Legal types are]'
  '--https-only[do not follow non-secure URLs. (default: off).]'
  '--https-proxy[set HTTPS proxy/proxies, overriding environment]'
  '--ocsp[use OCSP server access to verify servers]'
  '--ocsp-date[check if OCSP response date is too old.]'
  '--ocsp-file[set file for OCSP chaching.]'
  '--ocsp-nonce[allow nonce checking when verifying OCSP]'
  '--ocsp-server[set OCSP server address.]'
  '--ocsp-stapling[use OCSP stapling to verify the servers]'
  '--private-key[file with private key.]'
  '--private-key-type[type of the private key (PEM or DER).]'
  '--random-file[file to be used as source of random data.]'
  '--secure-protocol[set protocol to be used (auto, SSLv3, TLSv1, TLSv1_1, TLSv1_2, TLS1_3, PFS).]'
  '--tls-false-start[enable TLS False Start (needs GnuTLS 3.5+).]'
  '--tls-resume[enable TLS Session Resumption. (default: off)]'
  '--tls-session-file[set file for TLS Session caching.]'
  '--cut-dirs[skip creating given number of directory]'
  '--directories[create hierarchy of directories when retrieving]'
  {-P,--directory-prefix}'[set directory prefix.]'
  {-x,--force-directories}'[create hierarchy of directories when not]'
  '--host-directories[create host directories when retrieving]'
  '--protocol-directories[force creating protocol directories.]'
  '--gnupg-homedir[specify a directory to use as the GnuPG home]'
  '--signature-extensions[the extension of the signature file which should be]'
  '--verify-save-failed[save target files even when their signatures fail]'
  {-s,--verify-sig}'[download .sig file and verify. (default: off)]'
  '--list-plugins[lists all the plugins in the plugin search paths.]'
  '--local-plugin[loads a plugin with a given path.]'
  '--plugin[load a plugin with a given name.]'
  '--plugin-dirs[specify alternative directories to look]'
  '--plugin-help[print help message for all loaded plugins]'
  '--plugin-opt[forward an option to a loaded plugin.]'
  '--quiet[is the same as --no-quiet or --quiet=off or --quiet off]'
  '--user-agent[/1.3.5 or --user-agent "SpecialAgent/1.3.5"]'
  '*:filename:_files'
)

_arguments -s $arguments
