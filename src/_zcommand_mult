#compdef z zshz

local curcontext="$curcontext" state state_descr line expl arguments zcmd tmp ret=1

exists(){
    #alternative is command -v
    type "$1" &>/dev/null || return 1 && \
    type "$1" 2>/dev/null | \
    command grep -qv "suffix alias" 2>/dev/null
}

if exists zshz; then
    zcmd=zshz
elif exists _z; then
    zcmd=_z
else
    printf "where is the zshz or _z command?" >&2
    return 1
fi

__z_dirs_comp(){

    if  ! (( $+__z_dirs )) && ! _retrieve_cache z_dirs_cache; then
        __z_dirs=( $($zcmd -l |& perl -e '@l=reverse<>;do{print "$2:$1 " if m{^\s*(\S+)\s+(\S+)\s*$}}for@l') )
        _store_cache z_dirs_cache __z_dirs
    fi

    _describe -t zdir "z ranked directories" __z_dirs
}

__fasd_dirs_comp(){

    if ! (( $+__fasd_dirs )) && ! _retrieve_cache fasd_dirs_cache; then
        __fasd_dirs=( $(fasd -d |& perl -e '@l=reverse<>;do{print "$2:$1 " if m{^\s*(\S+)\s+(\S+)\s*$} }for@l') )
        _store_cache fasd_dirs_cache __fasd_dirs
    fi

    _describe -t fasd "fasd ranked directories" __fasd_dirs
}

arguments=(
       '-c[restrict matches to subdirectories of the current directory]'
       '-e[echo the best match, do not cd]'
       '-h[show a brief help message]'
       '-l[list only]'
       '-r[match by rank only]'
       '-t[match by recent access only]'
       '-x[remove the current directory from the datafile]'
       '-b[branch name]:branch'
        '*:command:->command'
)


__display(){
    if exists fasd;then
        _alternative \
            'zdir:z ranked directories:__z_dirs_comp' \
            'fasd:fasd ranked directories:__fasd_dirs_comp' \
            'files:directory:_path_files -g ".*(/) *(/)"'
    else
        _alternative \
            'zdir:z ranked directories:__z_dirs_comp' \
            'files:directory:_path_files -g ".*(/) *(/)"'
    fi
}

_arguments -s -C : $arguments && return 0

case "$state" in
    command)
        __display && return 0
        ;;
esac

