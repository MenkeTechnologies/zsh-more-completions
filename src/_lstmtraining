#compdef lstmtraining

local arguments

arguments=(
  '--debug[_interval  How often to display the alignment.  (type:int default:0)]'
  '--net[_mode  Controls network behavior.  (type:int default:192)]'
  '--perfect[_sample_delay  How many imperfect samples between perfect ones.  (type:int default:0)]'
  '--max[_image_MB  Max memory to use for images.  (type:int default:6000)]'
  '--append[_index  Index in continue_from Network at which to attach the new network defined by net_spec  (type:int default:-1)]'
  '--max[_iterations  If set, exit after this many iterations  (type:int default:0)]'
  '--debug[_level  Level of Trainer debugging  (type:int default:0)]'
  '--load[_images  Load images with tr files  (type:int default:0)]'
  '--target[_error_rate  Final error rate in percent.  (type:double default:0.01)]'
  '--weight[_range  Range of initial random weights.  (type:double default:0.1)]'
  '--learning[_rate  Weight factor for new deltas.  (type:double default:0.001)]'
  '--momentum[decay factor for repeating deltas.  (type:double default:0.5)]'
  '--adam[_beta  Decay factor for repeating deltas.  (type:double default:0.999)]'
  '--clusterconfig[_min_samples_fraction  Min number of samples per proto as % of total  (type:double default:0.625)]'
  '--clusterconfig[_max_illegal  Max percentage of samples in a cluster which have more than 1 feature in that cluster  (type:double default:0.05)]'
  '--clusterconfig[_independence  Desired independence between dimensions  (type:double default:1)]'
  '--clusterconfig[_confidence  Desired confidence in prototypes created  (type:double default:1e-06)]'
  '--reset[_learning_rate  Resets all stored learning rates to the value specified by --learning_rate.  (type:bool default:false)]'
  '--stop[_training  Just convert the training model to a runtime model.  (type:bool default:false)]'
  '--convert[_to_int  Convert the recognition model to an integer model.  (type:bool default:false)]'
  '--sequential[_training  Use the training files sequentially instead of round-robin.  (type:bool default:false)]'
  '--debug[_network  Get info on distribution of weight values  (type:bool default:false)]'
  '--randomly[_rotate  Train OSD and randomly turn training samples upside-down  (type:bool default:false)]'
  '--net[_spec  Network specification  (type:string default:)]'
  '--continue[_from  Existing model to extend  (type:string default:)]'
  '--model[_output  Basename for output models  (type:string default:lstmtrain)]'
  '--train[_listfile  File listing training files in lstmf training format.  (type:string default:)]'
  '--eval[_listfile  File listing eval files in lstmf training format.  (type:string default:)]'
  '--traineddata[combined Dawgs/Unicharset/Recoder for language model  (type:string default:)]'
  '--old[_traineddata  When changing the character set, this specifies the old character set that is to be replaced  (type:string default:)]'
  '--configfile[file to load more configs from  (type:string default:)]'
  '--D[directory to write output files to  (type:string default:)]'
  '--F[file listing font properties  (type:string default:font_properties)]'
  '--X[file listing font xheights  (type:string default:)]'
  '--U[file to load unicharset from  (type:string default:unicharset)]'
  '--O[file to write unicharset to  (type:string default:)]'
  '--output[_trainer  File to write trainer to  (type:string default:)]'
  '--test[_ch  UTF8 test character string  (type:string default:)]'
  '--fonts[_dir    (type:string default:)]'
  '--fontconfig[_tmpdir    (type:string default:)]'
  '*:filename:_files'
)

_arguments -s $arguments
