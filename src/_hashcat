#compdef hashcat

local arguments

arguments=(
  {-m,--hash-type}'[| Num  | Hash-type, see references below                      | -m 1000]'
  {-a,--attack-mode}'[| Num  | Attack-mode, see references below                    | -a 3]'
  {-V,--version}'[|      | Print version                                        |]'
  {-h,--help}'[|      | Print help                                           |]'
  '--quiet[|      | Suppress output                                      |]'
  '--hex-charset[|      | Assume charset is given in hex                       |]'
  '--hex-salt[|      | Assume salt is given in hex                          |]'
  '--hex-wordlist[|      | Assume words in wordlist are given in hex            |]'
  '--force[|      | Ignore warnings                                      |]'
  '--status[|      | Enable automatic update of the status screen         |]'
  '--status-timer[| Num  | Sets seconds between status screen updates to X      | --status-timer=1]'
  '--machine-readable[|      | Display the status view in a machine-readable format |]'
  '--keep-guessing[|      | Keep guessing the hash after it has been cracked     |]'
  '--self-test-disable[|      | Disable self-test functionality on startup           |]'
  '--loopback[|      | Add new plains to induct directory                   |]'
  '--markov-hcstat[| File | Specify hcstat file to use                           | --markov-hc=my.hcstat]'
  '--markov-disable[|      | Disables markov-chains, emulates classic brute-force |]'
  '--markov-classic[|      | Enables classic markov-chains, no per-position       |]'
  {-t,--markov-threshold}'[| Num  | Threshold X when to stop accepting new markov-chains | -t 50]'
  '--runtime[| Num  | Abort session after X seconds of runtime             | --runtime=10]'
  '--session[| Str  | Define specific session name                         | --session=mysession]'
  '--restore[|      | Restore session from --session                       |]'
  '--restore-disable[|      | Do not write restore file                            |]'
  '--restore-file-path[| File | Specific path to restore file                        | --restore-file-path=x.restore]'
  {-o,--outfile}'[| File | Define outfile for recovered hash                    | -o outfile.txt]'
  '--outfile-format[| Num  | Define outfile-format X for recovered hash           | --outfile-format=7]'
  '--outfile-autohex-disable[|      | Disable the use of $HEX\[\] in output plains           |]'
  '--outfile-check-timer[| Num  | Sets seconds between outfile checks to X             | --outfile-check=30]'
  '--wordlist-autohex-disable[| Disable the conversion of $HEX\[\] from the wordlist   |]'
  {-p,--separator}'[| Char | Separator char for hashlists and outfile             | -p :]'
  '--stdout[|      | Do not crack a hash, instead print candidates only   |]'
  '--show[|      | Compare hashlist with potfile; show cracked hashes   |]'
  '--left[|      | Compare hashlist with potfile; show uncracked hashes |]'
  '--username[|      | Enable ignoring of usernames in hashfile             |]'
  '--remove[|      | Enable removal of hashes once they are cracked       |]'
  '--remove-timer[| Num  | Update input hash file each X seconds                | --remove-timer=30]'
  '--potfile-disable[|      | Do not write potfile                                 |]'
  '--potfile-path[| Dir  | Specific path to potfile                             | --potfile-path=my.pot]'
  '--encoding-from[| Code | Force internal wordlist encoding from X              | --encoding-from=iso-8859-15]'
  '--encoding-to[| Code | Force internal wordlist encoding to X                | --encoding-to=utf-32le]'
  '--debug-mode[| Num  | Defines the debug mode (hybrid only by using rules)  | --debug-mode=4]'
  '--debug-file[| File | Output file for debugging rules                      | --debug-file=good.log]'
  '--induction-dir[| Dir  | Specify the induction directory to use for loopback  | --induction=inducts]'
  '--outfile-check-dir[| Dir  | Specify the outfile directory to monitor for plains  | --outfile-check-dir=x]'
  '--logfile-disable[|      | Disable the logfile                                  |]'
  '--hccapx-message-pair[| Num  | Load only message pairs from hccapx matching X       | --hccapx-message-pair=2]'
  '--nonce-error-corrections[| Num  | The BF size range to replace APs nonce last bytes   | --nonce-error-corrections=16]'
  '--truecrypt-keyfiles[| File | Keyfiles to use, separated with commas               | --truecrypt-key=x.png]'
  '--veracrypt-keyfiles[| File | Keyfiles to use, separated with commas               | --veracrypt-key=x.txt]'
  '--veracrypt-pim[| Num  | VeraCrypt personal iterations multiplier             | --veracrypt-pim=1000]'
  {-b,--benchmark}'[|      | Run benchmark of selected hash-modes                 |]'
  '--benchmark-all[|      | Run benchmark of all hash-modes (requires -b)        |]'
  '--speed-only[|      | Return expected speed of the attack, then quit       |]'
  '--progress-only[|      | Return ideal progress step size and time to process  |]'
  {-c,--segment-size}'[| Num  | Sets size in MB to cache from the wordfile to X      | -c 32]'
  '--bitmap-min[| Num  | Sets minimum bits allowed for bitmaps to X           | --bitmap-min=24]'
  '--bitmap-max[| Num  | Sets maximum bits allowed for bitmaps to X           | --bitmap-max=24]'
  '--cpu-affinity[| Str  | Locks to CPU devices, separated with commas          | --cpu-affinity=1,2,3]'
  '--example-hashes[|      | Show an example hash for each hash-mode              |]'
  {-I,--opencl-info}'[|      | Show info about detected OpenCL platforms/devices    | -I]'
  '--opencl-platforms[| Str  | OpenCL platforms to use, separated with commas       | --opencl-platforms=2]'
  {-d,--opencl-devices}'[| Str  | OpenCL devices to use, separated with commas         | -d 1]'
  {-D,--opencl-device-types}'[| Str  | OpenCL device-types to use, separated with commas    | -D 1]'
  '--opencl-vector-width[| Num  | Manually override OpenCL vector-width to X           | --opencl-vector=4]'
  {-O,--optimized-kernel-enable}'[|      | Enable optimized kernels (limits password length)    |]'
  {-w,--workload-profile}'[| Num  | Enable a specific workload profile, see pool below   | -w 3]'
  {-n,--kernel-accel}'[| Num  | Manual workload tuning, set outerloop step size to X | -n 64]'
  {-u,--kernel-loops}'[| Num  | Manual workload tuning, set innerloop step size to X | -u 256]'
  '--nvidia-spin-damp[| Num  | Workaround NVIDIAs CPU burning loop bug, in percent  | --nvidia-spin-damp=50]'
  '--gpu-temp-disable[|      | Disable temperature and fanspeed reads and triggers  |]'
  '--gpu-temp-abort[| Num  | Abort if GPU temperature reaches X degrees Celsius   | --gpu-temp-abort=100]'
  '--scrypt-tmto[| Num  | Manually override TMTO value for scrypt to X         | --scrypt-tmto=3]'
  {-s,--skip}'[| Num  | Skip X words from the start                          | -s 1000000]'
  {-l,--limit}'[| Num  | Limit X words from the start + skipped words         | -l 1000000]'
  '--keyspace[|      | Show keyspace base:mod values and quit               |]'
  {-j,--rule-left}'[| Rule | Single rule applied to each word from left wordlist  | -j c]'
  {-k,--rule-right}'[| Rule | Single rule applied to each word from right wordlist | -k ^-]'
  {-r,--rules-file}'[| File | Multiple rules applied to each word from wordlists   | -r rules/best64.rule]'
  {-g,--generate-rules}'[| Num  | Generate X random rules                              | -g 10000]'
  '--generate-rules-func-min[| Num  | Force min X functions per rule                       |]'
  '--generate-rules-func-max[| Num  | Force max X functions per rule                       |]'
  '--generate-rules-seed[| Num  | Force RNG seed set to X                              |]'
  {-1,--custom-charset1}'[| CS   | User-defined charset ?1                              | -1 ?l?d?u]'
  {-2,--custom-charset2}'[| CS   | User-defined charset ?2                              | -2 ?l?d?s]'
  {-3,--custom-charset3}'[| CS   | User-defined charset ?3                              |]'
  {-4,--custom-charset4}'[| CS   | User-defined charset ?4                              |]'
  {-i,--increment}'[|      | Enable mask increment mode                           |]'
  '--increment-min[| Num  | Start mask incrementing at X                         | --increment-min=4]'
  '--increment-max[| Num  | Stop mask incrementing at X                          | --increment-max=8]'
  '*:filename:_files'
)

_arguments -s $arguments
