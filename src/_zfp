#compdef zfp

local arguments

arguments=(
  '-h[read/write array and compression parameters from/to compressed header]'
  '-q[quiet mode; suppress output]'
  '-s[print error statistics]'
  '-i[: uncompressed binary input file ("-" for stdin)]'
  '-o[: decompressed binary output file ("-" for stdout)]'
  '-z[: compressed input (w/o -i) or output file ("-" for stdin/stdout)]'
  '-f[single precision (float type)]'
  '-d[double precision (double type)]'
  '-t[32|i64|f32|f64> : integer or floating scalar type]'
  '-1[: dimensions for 1D array a\[nx\]]'
  '-2[<ny> : dimensions for 2D array a\[ny\]\[nx\]]'
  '-3[<ny> <nz> : dimensions for 3D array a\[nz\]\[ny\]\[nx\]]'
  '-4[<ny> <nz> <nw> : dimensions for 4D array a\[nw\]\[nz\]\[ny\]\[nx\]]'
  '-R[reversible (lossless) compression]'
  '-r[: fixed rate (# compressed bits per floating-point value)]'
  '-p[: fixed precision (# uncompressed bits per value)]'
  '-a[: fixed accuracy (absolute error tolerance)]'
  '-c[<maxbits> <maxprec> <minexp> : advanced usage]'
  '-x[: serial compression (default)]'
  '-x[threads\[,chunk_size\]\] : OpenMP parallel compression]'
  '-x[: CUDA fixed rate parallel compression/decompression]'
  '-i[: read uncompressed file and compress to memory]'
  '-z[: read compressed file and decompress to memory]'
  {-i,-z}'[: read uncompressed ifile, write compressed zfile]'
  {-z,-o}'[: read compressed zfile, write decompressed ofile]'
  {-i,-o}'[: read ifile, compress, decompress, write ofile]'
  {-i,-s}'[read uncompressed file, compress to memory, print stats]'
  '-i[- -o - -s : read stdin, compress, decompress, write stdout, print stats]'
  {-f,-3}'[00 100 100 -r 16 : 2x fixed-rate compression of 100x100x100 floats]'
  {-d,-1}'[000000 -r 32 : 2x fixed-rate compression of 1M doubles]'
  {-d,-2}'[000 1000 -p 32 : 32-bit precision compression of 1000x1000 doubles]'
  {-d,-1}'[000000 -a 1e-9 : compression of 1M doubles with < 1e-9 max error]'
  {-d,-1}'[000000 -c 64 64 0 -1074 : 4x fixed-rate compression of 1M doubles]'
  '-x[16,256 : parallel compression with 16 threads, 256-block chunks]'
  '*:filename:_files'
)

_arguments -s $arguments
