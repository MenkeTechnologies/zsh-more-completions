#compdef certutil

local arguments

arguments=(
  '-A[add a certificate to the database (create if needed)]'
  '-B[run a series of certutil commands from a batch file]'
  '-i[specify the batch file]'
  '-E[add an Email certificate to the database (create if needed)]'
  '-n[specify the nickname of the certificate to add]'
  '-t[set the certificate trust attributes:]'
  '-f[specify the password file]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-a[the input certificate is encoded in ASCII (RFC1113)]'
  '-i[specify the certificate file (default is stdin)]'
  '-C[create a new binary certificate from a BINARY cert request]'
  '-c[the nickname of the issuer cert]'
  '-i[the BINARY certificate request file]'
  '-o[output binary cert to this file (default is stdout)]'
  '-x[self sign]'
  '--pss-sign[sign the certificate with RSA-PSS (the issuer key must be rsa)]'
  '-m[cert serial number]'
  '-w[time Warp]'
  '-v[months valid (default is 3)]'
  '-f[specify the password file]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-Z[specify the hash algorithm to use. Possible keywords:]'
  {-1,--keyUsage}'[keyword,...]'
  '-2[create basic constraint extension]'
  '-3[create authority key ID extension]'
  '-4[create crl distribution point extension]'
  {-5,--nsCertType}'[keyword,...]'
  {-6,--extKeyUsage}'[keyword,...]'
  '-7[create an email subject alt name extension]'
  '-8[create an dns subject alt name extension]'
  '-a[the input certificate request is encoded in ASCII (RFC1113)]'
  '-G[generate a new key pair]'
  '-h[name of token in which to generate key (default is internal)]'
  '-k[type of key pair to generate ("dsa", "ec", "rsa" (default))]'
  '-g[key size in bits, (min 512, max 8192, default 2048) (not for ec)]'
  '-y[set the public exponent value (3, 17, 65537) (rsa only)]'
  '-f[specify the password file]'
  '-z[specify the noise file to be used]'
  '-q[read PQG value from pqgfile (dsa only)]'
  '-q[elliptic curve name (ec only)]'
  '-d[key database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '--keyAttrFlags[PKCS #11 key Attributes.]'
  '--keyOpFlagsOn[]'
  '--keyOpFlagsOff[PKCS #11 key Operation Flags.]'
  '-D[delete a certificate from the database]'
  '-n[the nickname of the cert to delete]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '--rename[change the database nickname of a certificate]'
  '-n[the old nickname of the cert to rename]'
  '--new-n[the new nickname of the cert to rename]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-F[delete a key and associated certificate from the database]'
  '-n[the nickname of the key to delete]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-U[list all modules]'
  '-d[module database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-X[force the database to open R/W]'
  '-K[list all private keys]'
  '-h[name of token to search ("all" for all tokens)]'
  '-k[key type ("all" (default), "dsa", "ec", "rsa")]'
  '-n[the nickname of the key or associated certificate]'
  '-f[specify the password file]'
  '-d[key database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-X[force the database to open R/W]'
  '-L[list all certs, or print out a single named cert (or a subset)]'
  '-h[name of token to search ("all" for all tokens)]'
  '-n[pretty print named cert (list all if unspecified)]'
  '--email[pretty print cert with email address (list all if unspecified)]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-X[force the database to open R/W]'
  '-r[for single cert, print binary DER encoding]'
  '-a[for single cert, print ASCII encoding (RFC1113)]'
  '--dump-ext-val[for single cert, print binary DER encoding of extension OID]'
  '--build-flags[print enabled build flags relevant for NSS test execution]'
  '-M[modify trust attributes of certificate]'
  '-n[the nickname of the cert to modify]'
  '-t[set the certificate trust attributes (see -A above)]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-N[create a new certificate database]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-f[specify the password file]'
  '--empty-password[use empty password when creating a new database]'
  '-T[reset the Key database or token]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-h[token to reset (default is internal)]'
  '-0[set tokens Site Security Officer password]'
  '-O[print the chain of a certificate]'
  '-n[the nickname of the cert to modify]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-a[input the certificate in ASCII (RFC1113); default is binary]'
  '-P[cert & Key database prefix]'
  '-X[force the database to open R/W]'
  '-R[generate a certificate request (stdout)]'
  '-s[specify the subject name (using RFC1485)]'
  '-o[output the cert request to this file]'
  '-k[type of key pair to generate ("dsa", "ec", "rsa" (default))]'
  '-h[name of token in which to generate key (default is internal)]'
  '-g[key size in bits, RSA keys only (min 512, max 8192, default 2048)]'
  '--pss[create a certificate request restricted to RSA-PSS (rsa only)]'
  '-q[name of file containing PQG parameters (dsa only)]'
  '-q[elliptic curve name (ec only)]'
  '-f[specify the password file]'
  '-d[key database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-p[specify the contact phone number ("123-456-7890")]'
  '-Z[specify the hash algorithm to use. Possible keywords:]'
  '-a[output the cert request in ASCII (RFC1113); default is binary]'
  '-V[validate a certificate]'
  '-n[the nickname of the cert to Validate]'
  '-b[validity time ("YYMMDDHHMMSS\[+HHMM|-HHMM|Z\]")]'
  '-e[check certificate signature]'
  '-u[specify certificate usage:]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-a[input the certificate in ASCII (RFC1113); default is binary]'
  '-P[cert & Key database prefix]'
  '-X[force the database to open R/W]'
  '-W[change the key database password]'
  '-d[cert and key database directory]'
  '-f[specify a file with the current password]'
  '--upgrade-merge[an old database and merge it into a new one]'
  '-d[cert database directory to merge into (default is ~/.netscape)]'
  '-P[cert & Key database prefix of the target database]'
  '-f[specify the password file for the target database]'
  '--source-dir[cert database directory to upgrade from]'
  '--source-prefix[cert & Key database prefix of the upgrade database]'
  '--upgrade-id[unique identifier for the upgrade database]'
  '--upgrade-token-name[name of the token while it is in upgrade state]'
  '--merge[merge source database into the target database]'
  '-d[cert database directory of target (default is ~/.netscape)]'
  '-P[cert & Key database prefix of the target database]'
  '-f[specify the password file for the target database]'
  '--source-dir[cert database directory of the source database]'
  '--source-prefix[cert & Key database prefix of the source database]'
  '-S[make a certificate and add to database]'
  '-n[specify the nickname of the cert]'
  '-s[specify the subject name (using RFC1485)]'
  '-c[the nickname of the issuer cert]'
  '-t[set the certificate trust attributes (see -A above)]'
  '-k[type of key pair to generate ("dsa", "ec", "rsa" (default))]'
  '-h[name of token in which to generate key (default is internal)]'
  '-g[key size in bits, RSA keys only (min 512, max 8192, default 2048)]'
  '--pss[create a certificate restricted to RSA-PSS (rsa only)]'
  '-q[name of file containing PQG parameters (dsa only)]'
  '-q[elliptic curve name (ec only)]'
  '-x[self sign]'
  '--pss-sign[sign the certificate with RSA-PSS (the issuer key must be rsa)]'
  '-m[cert serial number]'
  '-w[time Warp]'
  '-v[months valid (default is 3)]'
  '-f[specify the password file]'
  '-d[cert database directory (default is ~/.netscape)]'
  '-P[cert & Key database prefix]'
  '-p[specify the contact phone number ("123-456-7890")]'
  '-Z[specify the hash algorithm to use. Possible keywords:]'
  '-1[create key usage extension]'
  '-2[create basic constraint extension]'
  '-3[create authority key ID extension]'
  '-4[create crl distribution point extension]'
  '-5[create netscape cert type extension]'
  '-6[create extended key usage extension]'
  '-7[create an email subject alt name extension]'
  '-8[create a DNS subject alt name extension]'
  '--extAIA[create an Authority Information Access extension]'
  '--extSIA[create a Subject Information Access extension]'
  '--extCP[create a Certificate Policies extension]'
  '--extPM[create a Policy Mappings extension]'
  '--extPC[create a Policy Constraints extension]'
  '--extIA[create an Inhibit Any Policy extension]'
  '--extSKID[create a subject key ID extension]'
  '--extNC[create a name constraints extension]'
  '--extSAN[type:name\]...]'
  '--extGeneric[OID:critical-flag:filename\]...]'
  '*:filename:_files'
)

_arguments -s $arguments
