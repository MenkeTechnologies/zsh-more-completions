#compdef fsharpc

local arguments

arguments=(
  '--out[:<file>                             Name of the output file (Short form: -o)]'
  '--target[:exe                             Build a console executable]'
  '--target[:winexe                          Build a Windows executable]'
  '--target[:library                         Build a library (Short form: -a)]'
  '--target[:module                          Build a module that can be added to another]'
  '--delaysign[delay-sign the assembly using only the public]'
  '--publicsign[public-sign the assembly using only the public]'
  '--doc[:<file>                             Write the xmldoc of the assembly to the given]'
  '--keyfile[:<file>                         Specify a strong name key file]'
  '--keycontainer[:<string>                  Specify a strong name key container]'
  '--platform[:<string>                      Limit which platforms this code can run on: x86]'
  '--nooptimizationdata[only include optimization information essential]'
  '--nointerfacedata[dont add a resource to the generated assembly]'
  '--sig[:<file>                             Print the inferred interface of the assembly to]'
  '--nocopyfsharpcore[dont copy FSharp.Core.dll along the produced]'
  '--reference[:<file>                       Reference an assembly (Short form: -r)]'
  '--win32res[:<file>                        Specify a Win32 resource file (.res)]'
  '--win32manifest[:<file>                   Specify a Win32 manifest file]'
  '--nowin32manifest[do not include the default Win32 manifest]'
  '--resource[:<resinfo>                     Embed the specified managed resource]'
  '--linkresource[:<resinfo>                 Link the specified resource to this assembly]'
  '--debug[emit debug information (Short form: -g)]'
  '--debug[:{full|pdbonly|portable|embedded} Specify debugging type: full, portable]'
  '--embed[embed all source files in the portable PDB file]'
  '--embed[:<file;...>                       Embed specific source files in the portable PDB]'
  '--sourcelink[:<file>                      Source link information file to embed in the]'
  '--optimize[enable optimizations (Short form: -O)]'
  '--tailcalls[enable or disable tailcalls]'
  '--deterministic[produce a deterministic assembly (including]'
  '--crossoptimize[enable or disable cross-module optimizations]'
  '--warnaserror[report all warnings as errors]'
  '--warnaserror[;...>            Report specific warnings as errors]'
  '--warn[:<n>                               Set a warning level (0-5)]'
  '--nowarn[:<warn;...>                      Disable specific warning messages]'
  '--warnon[:<warn;...>                      Enable specific warnings that may be off by]'
  '--consolecolors[output warning and error messages in color]'
  '--checked[generate overflow checks]'
  '--define[:<string>                        Define conditional compilation symbols (Short]'
  '--mlcompatibility[ignore ML compatibility warnings]'
  '--nologo[suppress compiler copyright message]'
  '--help[display this usage message (Short form: -?)]'
  '--codepage[:<n>                           Specify the codepage used to read source files]'
  '--utf8output[output messages in UTF-8 encoding]'
  '--preferreduilang[:<string>               Specify the preferred output language culture]'
  '--fullpaths[output messages with fully qualified paths]'
  '--lib[:<dir;...>                          Specify a directory for the include path which]'
  '--simpleresolution[resolve assembly references using]'
  '--targetprofile[:<string>                 Specify target framework profile of this]'
  '--baseaddress[:<address>                  Base address for the library to be built]'
  '--noframework[do not reference the default CLI assemblies by]'
  '--standalone[statically link the F# library and all]'
  '--staticlink[:<file>                      Statically link the given assembly and all]'
  '--resident[use a resident background compilation service to]'
  '--pdb[:<string>                           Name the output debug file]'
  '--highentropyva[enable high-entropy ASLR]'
  '--subsystemversion[:<string>              Specify subsystem version of this assembly]'
  '--quotations-debug[emit debug information in quotations]'
  '*:filename:_files'
)

_arguments -s $arguments
