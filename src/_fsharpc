#compdef fsharpc

local arguments

arguments=(
  '--out[Name of the output file (Short form: -o)]:<file>:'
  '--target[Build a console executable]:exe:'
  '--target[Build a Windows executable]:winexe:'
  '--target[Build a library (Short form: -a)]:library:'
  '--target[Build a module that can be added to another]:module:'
  '--delaysign[delay-sign the assembly using only the public]'
  '--publicsign[public-sign the assembly using only the public]'
  '--doc[Write the xmldoc of the assembly to the given]:<file>:'
  '--keyfile[Specify a strong name key file]:<file>:'
  '--keycontainer[Specify a strong name key container]:<string>:'
  '--platform[Limit which platforms this code can run on: x86]:<string>:'
  '--nooptimizationdata[only include optimization information essential]'
  '--nointerfacedata[dont add a resource to the generated assembly]'
  '--sig[Print the inferred interface of the assembly to]:<file>:'
  '--nocopyfsharpcore[dont copy FSharp.Core.dll along the produced]'
  '--reference[Reference an assembly (Short form: -r)]:<file>:'
  '--win32res[Specify a Win32 resource file (.res)]:<file>:'
  '--win32manifest[Specify a Win32 manifest file]:<file>:'
  '--nowin32manifest[do not include the default Win32 manifest]'
  '--resource[Embed the specified managed resource]:<resinfo>:'
  '--linkresource[Link the specified resource to this assembly]:<resinfo>:'
  '--debug[emit debug information (Short form: -g)]'
  '--debug[:{full|pdbonly|portable|embedded} Specify debugging type: full, portable]'
  '--embed[embed all source files in the portable PDB file]'
  '--embed[Embed specific source files in the portable PDB]:<file;...>:'
  '--sourcelink[Source link information file to embed in the]:<file>:'
  '--optimize[enable optimizations (Short form: -O)]'
  '--tailcalls[enable or disable tailcalls]'
  '--deterministic[produce a deterministic assembly (including]'
  '--crossoptimize[enable or disable cross-module optimizations]'
  '--warnaserror[report all warnings as errors]'
  '--warnaserror[;...> Report specific warnings as errors]'
  '--warn[Set a warning level (0-5)]:<n>:'
  '--nowarn[Disable specific warning messages]:<warn;...>:'
  '--warnon[Enable specific warnings that may be off by]:<warn;...>:'
  '--consolecolors[output warning and error messages in color]'
  '--checked[generate overflow checks]'
  '--define[Define conditional compilation symbols (Short]:<string>:'
  '--mlcompatibility[ignore ML compatibility warnings]'
  '--nologo[suppress compiler copyright message]'
  '--help[display this usage message (Short form: -\?)]'
  '--codepage[Specify the codepage used to read source files]:<n>:'
  '--utf8output[output messages in UTF-8 encoding]'
  '--preferreduilang[Specify the preferred output language culture]:<string>:'
  '--fullpaths[output messages with fully qualified paths]'
  '--lib[Specify a directory for the include path which]:<dir;...>:'
  '--simpleresolution[resolve assembly references using]'
  '--targetprofile[Specify target framework profile of this]:<string>:'
  '--baseaddress[Base address for the library to be built]:<address>:'
  '--noframework[do not reference the default CLI assemblies by]'
  '--standalone[statically link the F# library and all]'
  '--staticlink[Statically link the given assembly and all]:<file>:'
  '--resident[use a resident background compilation service to]'
  '--pdb[Name the output debug file]:<string>:'
  '--highentropyva[enable high-entropy ASLR]'
  '--subsystemversion[Specify subsystem version of this assembly]:<string>:'
  '--quotations-debug[emit debug information in quotations]'
  '*:filename:_files'
)

_arguments -s $arguments
