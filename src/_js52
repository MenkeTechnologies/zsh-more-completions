#compdef js52

local arguments

arguments=(
  {-f,--file}'[file path to run]'
  {-m,--module}'[module path to run]'
  {-e,--execute}'[inline code to run]'
  {-i,--shell}'[enter prompt after running code]'
  {-c,--compileonly}'[only compile, dont run (syntax]'
  {-w,--warnings}'[emit warnings]'
  {-W,--nowarnings}'[dont emit warnings]'
  {-s,--strict}'[check strictness]'
  {-D,--dump-bytecode}'[dump bytecode with exec count for all]'
  {-b,--print-timing}'[print sub-ms runtime for each file]'
  '--js-cache[enable the JS cache by specifying the]'
  '--no-js-cache-per-process[deactivates cache per process.]'
  '--code-coverage[enable code coverage instrumentation.]'
  '--thread-count[use COUNT auxiliary threads (default:]'
  '--ion[enable IonMonkey (default)]'
  '--no-ion[disable IonMonkey]'
  '--no-asmjs[disable asm.js compilation]'
  '--no-wasm[disable WebAssembly compilation]'
  '--no-native-regexp[disable native regexp compilation]'
  '--no-unboxed-objects[disable creating unboxed plain]'
  '--unboxed-arrays[allow creating unboxed arrays]'
  '--wasm-always-baseline[enable wasm baseline compiler when]'
  '--wasm-check-bce[always generate wasm bounds check]'
  '--shared-memory[/off SharedArrayBuffer and Atomics]'
  '--cache-ir-stubs[/off Use CacheIR stubs (default: on, off]'
  '--ion-shared-stubs[/off Use shared stubs (default: on, off to]'
  '--ion-scalar-replacement[/off Scalar Replacement (default: on, off]'
  '--ion-gvn[specify Ion global value numbering:]'
  '--ion-licm[/off Loop invariant code motion (default:]'
  '--ion-aa[/flow-insensitive Specify wheter or not to use flow]'
  '--ion-edgecase-analysis[/off Find edge cases where Ion can avoid]'
  '--ion-pgo[/off Profile guided optimization (default:]'
  '--ion-range-analysis[/off Range analysis (default: on, off to]'
  '--ion-sincos[/off Replace sin(x)/cos(x) to sincos(x)]'
  '--ion-sink[/off Sink code motion (default: off, on to]'
  '--ion-loop-unrolling[/off Loop unrolling (default: off, on to]'
  '--ion-instruction-reordering[/off Instruction reordering (default: off]'
  '--ion-check-range-analysis[range analysis checking]'
  '--ion-extra-checks[perform extra dynamic validation]'
  '--ion-inlining[/off Inline methods where possible]'
  '--ion-osr[/off On-Stack Replacement (default: on]'
  '--ion-limit-script-size[/off Dont compile very large scripts]'
  '--ion-warmup-threshold[wait for COUNT calls or iterations]'
  '--ion-regalloc[specify Ion register allocation:]'
  '--ion-eager[always ion-compile methods (implies]'
  '--baseline-eager[)]'
  '--ion-offthread-compile[/off Compile scripts off thread (default:]'
  '--ion-parallel-compile[/off --ion-parallel compile is deprecated.]'
  '--baseline[enable baseline compiler (default)]'
  '--no-baseline[disable baseline compiler]'
  '--baseline-eager[always baseline-compile methods]'
  '--baseline-warmup-threshold[wait for COUNT calls or iterations]'
  '--non-writable-jitcode[(NOP for fuzzers) Allocate JIT code]'
  '--no-sse3[pretend CPU does not support SSE3]'
  '--no-sse4[pretend CPU does not support SSE4]'
  '--enable-avx[AVX is disabled by default. Enable]'
  '--no-avx[no-op. AVX is currently disabled by]'
  '--fuzzing-safe[dont expose functions that arent]'
  '--disable-oom-functions[disable functions that cause]'
  '--no-threads[disable helper threads]'
  '--no-ggc[disable Generational GC]'
  '--no-cgc[disable Compacting GC]'
  '--no-incremental-gc[disable Incremental GC]'
  '--available-memory[select GC settings based on available]'
  '--nursery-size[set the maximum nursery size in MB]'
  '--module-load-path[set directory to load modules from]'
  '*:filename:_files'
)

_arguments -s $arguments
