#compdef otool

local arguments

arguments=(
    '-f[print the fat headers]'
    '-a[print the archive header]'
    '-h[print the mach header]'
    '-l[print the load commands]'
    '-L[print the shared libraries used]:executable:_files -g "*(-*)"'
    '-D[print the shared library id name]'
    '-t[print the text section (disassemble with -v)]'
    '-p[start dissassemble from routine name]:routine name:'
    '-s[print contents of section]:sectname:'
    '-d[the data section]'
    '-o[the Objective-C segment]'
    '-r[the relocation entries]'
    '-S[the table of contents of a library]'
    '-T[the table of contents of a dynamic shared library]'
    '-M[the module table of a dynamic shared library]'
    '-R[the reference table of a dynamic shared library]'
    '-I[the indirect symbol table]'
    '-H[the two-level hints table]'
    '-G[the data in code table]'
    '-v[verbosely (symbolically) when possible]'
    '-V[disassembled operands symbolically]'
    '-c[argument strings of a core file]'
    '-X[no leading addresses or headers]'
    '-m[t use archive(member) syntax]'
    '-B[Thumb disassembly (ARM objects only)]'
    '-q[llvms disassembler (the default)]'
    '-Q[otool(1)s disassembler]'
    '-mcpu=[use arg as the cpu for disassembly]:cpu for disassembly:((
    x86_64\:"ARM 64 bit ISA"
    x86\:"32 bit ISA introduced by Intel 80386"
    sparc\:"RISC"
    avr\:"RISC"
    mips\:"RISC"
    arm\:"RISC"
    ))'
    '-j[opcode bytes]'
    '-P[the info plist section as strings]'
    '-C[linker optimization hints]'
    '--version[the version of /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/otool]'
    '*:filename:_files'
)

_arguments -s $arguments
