#compdef otool

local arguments


_cpus(){
    compadd x86-64 x86 ia64 arm mips ia32 avr
}

arguments=(
'-f[print the fat headers]'
'-a[print the archive header]'
'-h[print the mach header]'
'-l[print the load commands]'
'-L[print the shared libraries used]'
'-D[print the shared library id name]'
'-t[print the text section (disassemble with -v)]'
'-p[<routine name>  start dissassemble from routine name]'
'-s[<sectname> print contents of section]'
'-d[the data section]'
'-o[the Objective-C segment]'
'-r[the relocation entries]'
'-S[the table of contents of a library]'
'-T[the table of contents of a dynamic shared library]'
'-M[the module table of a dynamic shared library]'
'-R[the reference table of a dynamic shared library]'
'-I[the indirect symbol table]'
'-H[the two-level hints table]'
'-G[the data in code table]'
'-v[verbosely (symbolically) when possible]'
'-V[disassembled operands symbolically]'
'-c[argument strings of a core file]'
'-X[no leading addresses or headers]'
'-m[t use archive(member) syntax]'
'-B[Thumb disassembly (ARM objects only)]'
'-q[llvms disassembler (the default)]'
'-Q[otool(1)s disassembler]'
'-mcpu=[use arg as the cpu for disassembly]:cpu for disassembly:(x86_64 x86 ia32 ia64 arm mips sparc avr)'
'-j[opcode bytes]'
'-P[the info plist section as strings]'
'-C[linker optimization hints]'
'--version[the version of /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/otool]'
'*:filename:_files'
)

_arguments -s $arguments
