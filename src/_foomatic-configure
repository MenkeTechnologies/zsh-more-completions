#compdef foomatic-configure

local arguments

arguments=(
  '-n[configure/create/delete/query this print queue]'
  '-N[/Descr. Long name/Short Description. An empty string ("") deletes]'
  '-L[short phrase describing this printers location. An empty]'
  '-c[printer is connected thusly (ex file:/dev/lp0), must]'
  '--ppd[set up the queue using the PPD file ppdfile (can be a]'
  '-d[foomatic database name for desired printer driver or "raw"]'
  '-p[foomatic id for printer. When a non-raw queue is created]'
  '-s[explicit spooler type (cups, lpd, lprng, pdq, ppr, direct)]'
  '-o[value Use value as the default for option in this queue]'
  '-o[set the switch option by default in this queue]'
  '--backend-dont-disable[1: Do not disable CUPS queue when backend]'
  '--backend-attempts[try that often when backend fails, for infinite]'
  '--backend-delay[delay in seconds between retries of failed backend.]'
  '-C[sourcequeue Create a copy of a queue. All]'
  '-D[set this queue as the queue used by default.]'
  '-R[remove this whole queue entirely (just give -n queuename)]'
  '-Q[query existing configuration (gives XML summary). Supplying]'
  '-r[list also remote queues (CUPS only).]'
  '-P[query existing configuration (gives Perl data structure of]'
  '-O[print XML Overview of all known printer/drivers]'
  '-X[print XML data for -p printer and/or -d driver object]'
  '-f[force rebuild of PPD file from database]'
  '-w[generate PPD which is compatible to the CUPS PostScript]'
  '-q[run quietly and non-interactive]'
  '(- * :)'{-h,--help}'[show this help message]'
  '*:filename:_files'
)

_arguments -s $arguments
