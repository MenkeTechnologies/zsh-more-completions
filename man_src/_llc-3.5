#compdef llc-3

# Autogenerated from man page /usr/share/man/man1/llc-3.5.1.gz

local arguments

arguments=(
    '--help[Print a summary of command line options.]'
    '-O[Generate code at different optimization levels.]:uint'
    '--mtriple[Override the target triple specified in the input file with the specified str…]:triple>'
    '--march[Specify the architecture for which to generate assembly, overriding the targe…]:<arch>'
    '--mcpu[Specify a specific chip in the current architecture to generate code for.]:<cpuname>'
    '--filetype[Specify what kind of output llc should generated.]'
    {--mattr,--a3}'[Override or control specific attributes of the target, such as whether SIMD o…]':a1+a2-a3...
    '--disable-fp-elim[Disable frame pointer elimination optimization.]'
    '--disable-excess-fp-precision[Disable optimizations that may produce excess precision for floating point.]'
    '--enable-no-infs-fp-math[Enable optimizations that assume no Inf values.]'
    '--enable-no-nans-fp-math[Enable optimizations that assume no NAN values.]'
    '--enable-unsafe-fp-math[Enable optimizations that make unsafe assumptions about IEEE math (e. g.]'
    '--stats[Print statistics recorded by code-generation passes.]'
    '--time-passes[Record the amount of time needed for each pass and print a report to standard…]'
    '--load[Dynamically load dso_path (a path to a dynamically shared object) that implem…]:<dso_path>'
    '--print-machineinstrs[Print generated machine code between compilation phases (useful for debugging…]'
    '--regalloc[Specify the register allocator to use. Valid register allocators are: .]:<allocator>'
    '--spiller[Specify the spiller to use for register allocators that support it.]:<spiller>'
    '--x86-asm-syntax[Specify whether to emit assembly code in AT&T syntax (the default) or Intel s…]:att|intel'
    {--O0,--O1,--O2,--O3}'[clang.]'
    '*:filename:_files'
)
_arguments -s $arguments
