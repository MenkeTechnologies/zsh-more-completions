#compdef julia

# Autogenerated from man page /usr/local/share/man/man1/julia.1

local arguments

arguments=(
    {-v,--version}'[Display version information.]'
    {-h,--help}'[Print help message.]'
    '--project[Set <dir> as the home project/environment. The default @.]:dir>@.'
    {-J,--sysimage}'[Start up with the given system image file.]':file
    '--sysimage-native-code[Use precompiled code from system image if available.]:{yes|no}'
    {-H,--home}'[Set location of julia executable.]':dir
    '--startup-file[Load ~/. julia/config/startup. jl.]:{yes|no}'
    '--handle-signals[Enable or disable Julia\s default signal handlers.]:{yes|no}'
    {-e,--eval}'[Evaluate <expr>.]':expr
    {-E,--print}'[Evaluate <expr> and display the result.]':expr
    {-L,--load}'[Load <file> immediately on all processors.]':file
    {-t,--threads}'[Enable n threads.]':n
    {-p,--procs}'[Run n local processes.]':n
    '--machine-file[Run processes on hosts listed in <file>.]:file'
    '-i[Interactive mode; REPL runs and isinteractive() is true.]'
    '--banner[Enable or disable startup banner.]:{yes|no|auto}'
    '--color[Enable or disable color text.]:{yes|no|auto}'
    '--history-file[Load or save history.]:{yes|no}'
    '--compile[Enable or disable compiler, or request exhaustive or minimal compilation.]:{yes|no|all|min}'
    {-C,--cpu-target}'[Limit usage of cpu features up to <target>.]':target
    {-O,--optimize}'[Run time-intensive code optimizations.]'
    '--min-optlevel[Set the minimum optimization level to <n>, overriding per-module settings.]:n'
    '-g[Enable generation of full debug info.]'
    '--inline[Control whether inlining is permitted (overrides functions declared as @inlin…]:{yes|no}'
    '--check-bounds[Emit bounds checks always, never, or respect @inbounds declarations.]:{yes|no|auto}'
    '--math-mode[Always use IEEE semantics for math (ignoring declarations), or adhere to decl…]:{ieee|user}'
    '--depwarn[Enable or disable syntax and method deprecation warnings (\error\ turns warni…]:{yes|no|error}'
    '--warn-overwrite[Enable or disable method overwrite warnings.]:{yes|no}'
    '--output-o[Generate an object file (including system image data).]:name'
    '--output-ji[Generate a system image data file (. ji).]:name'
    '--output-bc[Generate LLVM bitcode (. bc).]:name'
    '--output-incremental[Generate an incremental output file (rather than complete).]:{yes|no}'
    {--code-coverage,--code-coverage}'[Count executions of source lines (omitting setting is equivalent to \user\).]'
    {--track-allocation,--track-allocation}'[Count bytes allocated by each source line.]'
    '*:filename:_files'
)
_arguments -s $arguments
