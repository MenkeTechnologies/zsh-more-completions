#compdef mokutil

# Autogenerated from man page /usr/share/man/man1/mokutil.1.gz

local arguments

arguments=(
    {-l,--list-enrolled}'[List the keys the already stored in the database.]'
    {-N,--list-new}'[List the keys to be enrolled.]'
    {-D,--list-delete}'[List the keys to be deleted.]'
    {-i,--import}'[Collect the followed files and form a enrolling request to shim.]'
    {-d,--delete}'[Collect the followed files and form a deleting request to shim.]'
    '--revoke-import[Revoke the current import request (MokNew).]'
    '--revoke-delete[Revoke the current delete request (MokDel).]'
    {-x,--export}'[Export the keys stored in MokListRT.]'
    {-p,--password}'[Setup the password for MokManager (MokPW).]'
    {-c,--clear-password}'[Clear the password for MokManager (MokPW).]'
    '--disable-validation[Disable the validation process in shim.]'
    '--enrolled-validation[Enable the validation process in shim.]'
    '--sb-state[Show SecureBoot State.]'
    {-t,--test-key}'[Test if the key is enrolled or not.]'
    '--reset[Reset MOK list.]'
    '--generate-hash[Generate the password hash.]'
    '--hash-file[Use the password hash from a specific file.]'
    {-P,--root-pw}'[Use the root password hash from /etc/shadow.]'
    {-s,--simple-hash}'[Use the old SHA256 password hash method to hash the password .]'
    '--ignore-db[Tell shim to not use the keys in db to verify EFI images.]'
    '--use-db[Tell shim to use the keys in db to verify EFI images (default).]'
    {-X,--mokx}'[Manipulate the MOK blacklist (MOKX) instead of the MOK list.]'
    '--import-hash[Create an enrolling request for the hash of a key in DER format.]'
    '--delete-hash[Create an deleting request for the hash of a key in DER format.]'
    '--set-verbosity[Set the SHIM_VERBOSE to make shim more or less verbose.]'
    '--pk[List the keys in the public Platform Key (PK).]'
    '--kek[List the keys in the Key Exchange Key Signature database (KEK).]'
    '--db[List the keys in the secure boot signature store (db).]'
    '--dbx[List the keys in the secure boot blacklist signature store (dbx).]'
    '*:filename:_files'
)
_arguments -s $arguments
