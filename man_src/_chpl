#compdef chpl

# Autogenerated from man page /opt/homebrew/share/man/man1/chpl.1

local arguments

arguments=(
    '--count-tokens[Prints the total number of static lexical tokens in the Chapel code files nam…]'
    '--main-module[For programs that supply multiple possible entry points (main() functions or …]:module'
    {-M,--module-dir}'[Add the specified directory to the module search path.]':directory
    '--print-code-size[Prints out the size of the Chapel code files named on the command line in gre…]'
    '--print-module-files[Prints the Chapel module source files parsed by the Chapel compiler.]'
    '--print-search-dirs[Print the module search path used to resolve module for further details.]'
    '--permit-unhandled-module-errors[Normally, the compiler ensures that all errors are handled for code inside of…]'
    '--warn-unstable[Enable \[disable\] warnings for code that has recently or will recently change …]'
    '--warnings[Enable \[disable\] the printing of compiler warnings.]'
    '--local[Compile code for single/\[multi-\] locale execution, changing on blocks to norm…]'
    '--no-local[Optimization Control Options.]'
    '--baseline[Turns off all optimizations in the Chapel compiler and generates naive C code…]'
    '--cache-remote[Enables the cache for remote data.]'
    '--copy-propagation[Enable \[disable\] copy propagation.]'
    '--dead-code-elimination[Enable \[disable\] dead code elimination.]'
    '--fast[Turns off all runtime checks using --no-checks, turns on -O and.]'
    '--specialize[.]'
    '--fast-followers[Enable \[disable\] the fast follower optimization in which fast implementations…]'
    '--ieee-float[Disable \[enable\] optimizations that may affect IEEE floating point conformanc…]'
    '--loop-invariant-code-motion[Enable \[disable\] the optimization that moves loop invariant code from loop ru…]'
    '--optimize-forall-unordered-ops[Enable \[disable\] optimization of the last statement in forall statements to u…]'
    '--ignore-local-classes[Disable \[enable\] local classes.]'
    '--inline[Enable \[disable\] function inlining.]'
    '--inline-iterators[Enable \[disable\] iterator inlining.]'
    '--inline-iterators-yield-limit[Limit on the number of yield statements permitted in an inlined iterator.]'
    '--live-analysis[Enable \[disable\] live variable analysis, which is currently only used to opti…]'
    '--optimize-range-iteration[Enable \[disable\] anonymous range iteration optimizations.]'
    '--optimize-loop-iterators[Enable \[disable\] optimizations to aggressively optimize iterators that are de…]'
    '--vectorize[Enable \[disable\] generating vectorization hints for the target compiler.]'
    '--optimize-on-clauses[Enable \[disable\] optimization of on clauses in which qualifying on statements…]'
    '--optimize-on-clause-limit[Limit on the function call depth to allow for on clause optimization.]'
    '--privatization[Enable \[disable\] privatization of distributed arrays and domains if the distr…]'
    '--remove-copy-calls[Enable \[disable\] removal of copy calls (including calls to what amounts to a …]'
    '--remote-value-forwarding[Enable \[disable\] remote value forwarding of read-only values to remote thread…]'
    '--remote-serialization[Enable \[disable\] serialization for globals and remote constants.]'
    '--scalar-replacement[Enable \[disable\] scalar replacement of records and classes for some compiler-…]'
    '--scalar-replace-limit[Limit on the size of tuples being replaced during scalar replacement.]'
    '--tuple-copy-opt[Enable \[disable\] the tuple copy optimization in which whole tuple copies of h…]'
    '--tuple-copy-limit[Limit on the size of tuples considered for the tuple copy optimization.]'
    '--infer-local-fields[Enable \[disable\] analysis to infer local fields in classes and records (exper…]'
    '--auto-local-access[Enable \[disable\] an optimization applied to forall loops over domains in whic…]'
    '--dynamic-auto-local-access[Enable \[disable\] the dynamic portion of the analysis described in.]'
    '--auto-aggregation[Enable \[disable\] optimization of the last statement in forall statements to u…]'
    '--checks[Enable \[disable\] all of the run-time checks in this section of the man page.]'
    '--bounds-checks[Enable \[disable\] run-time bounds checking, e. g.]'
    '--cast-checks[Enable \[disable\] run-time checks in safeCast calls for casts that wouldn\t pr…]'
    '--div-by-zero-checks[Enable \[disable\] run-time checks in integer division and modulus operations t…]'
    '--formal-domain-checks[Enable \[disable\] run-time checks to ensure that an actual array argument\s do…]'
    '--local-checks[Enable \[disable\] run-time checking of the locality of references within local…]'
    '--nil-checks[Enable \[disable\] run-time checking for accessing nil object references.]'
    '--stack-checks[Enable \[disable\] run-time checking for stack overflow.]'
    '--codegen[Enable \[disable\] generating C code and the binary executable.]'
    '--cpp-lines[Causes the compiler to emit cpp #line directives into the generated code in o…]'
    '--max-c-ident-len[Limits the length of identifiers in the generated code, except when set to 0.]'
    '--munge-user-idents[By default, chpl munges all user identifiers in the generated C code in order…]'
    '--savec[Saves the compiler-generated C code in the specified directory, creating the …]:dir'
    '--ccflags[Add the specified flags to the C compiler command line when compiling the gen…]:flags'
    {-g,--debug}'[Causes the generated C code to be compiled with debugging turned on.]'
    '--devel[.]'
    '--dynamic[Use dynamic linking when generating the final binary. If neither.]'
    '--static[default.]'
    {-I,--hdr-search-path}'[Add the specified dir\[ectories\] to the back-end C compiler\s search path for …]':dir
    '--ldflags[Add the specified flags to the back-end C compiler link line when linking the…]:flags'
    {-l,--lib-linkage}'[Specify a C library to link to on the back-end C compiler command line.]':library
    {-L,--lib-search-path}'[Add the specified dir\[ectories\] to the back-end C compiler\s search path for …]':dir
    {-O,--optimize}'[Causes the generated C code to be compiled with \[without\] optimizations turne…]'
    {-o,--output}'[Specify the name of the compiler-generated executable.]':filename
    '--llvm[Use LLVM as the code generation target rather than C.]'
    '--llvm-wide-opt[Enable \[disable\] LLVM wide pointer communication optimizations.]'
    '--mllvm[Pass an option to the LLVM optimization and transformation passes.]:option'
    '--print-commands[Prints the system commands that the compiler executes in order to compile the…]'
    '--print-passes[Prints the compiler passes during compilation and the amount of wall clock ti…]'
    '--print-passes-file[Saves the compiler passes and the amount of wall clock time required for the …]:filename'
    '--explain-call[Helps explain the function resolution process for the named function by print…]:call>:<module>:<line'
    '--explain-instantiation[Lists all of the instantiations of a function or type.]:function|type>:<module>:<line'
    '--explain-verbose[In combination with explain-call or explain-instantiation, causes the compile…]'
    '--instantiate-max[In order to avoid infinite loops when instantiating generic functions, the co…]:max'
    '--print-all-candidates[By default, function resolution errors show only a few candidates.]'
    '--print-callgraph[Print a textual call graph representing the program being compiled.]'
    '--print-callstack-on-error[Accompany certain error and warning messages with the Chapel call stack that …]'
    '--print-unused-functions[Print the names and source locations of unused functions within the user prog…]'
    {-s,--set}'[Overrides the default value of a configuration param, type, var, or const in …]'
    '--task-tracking[Enable \[disable\] the Chapel-implemented task tracking table that supports the…]'
    '--home[Specify the location of the Chapel installation directory.]:path'
    '--atomics[Specify the implementation to use for Chapel\s atomic variables.]:atomics-impl'
    '--network-atomics[Specify the network atomics implementation for all atomic variables.]:network'
    '--aux-filesys[Specify runtime support for additional file systems.]:aio-system'
    '--comm[Specify the communication implementation to use for inter-locale data transfe…]:comm-impl'
    '--comm-substrate[Specify the communication conduit for the communication implementation.]:conduit'
    '--gasnet-segment[Specify memory segment to use with GASNet.]:segment'
    '--gmp[Specify the GMP library implementation to be used by the GMP module.]:gmp-version'
    '--hwloc[Specify whether or not to use the hwloc library.]:hwloc-impl'
    '--launcher[Specify the launcher, if any, used to start job execution.]:launcher-system'
    '--locale-model[Specify the locale model to use for describing your locale architecture.]:locale-model'
    '--make[Specify the GNU compatible make utility.]:utility'
    '--mem[Specify the memory allocator used for dynamic memory management.]:mem-impl'
    '--re2[Specify the RE2 library to use.]:re2'
    '--target-arch[Specify the machine type or general architecture to use.]:architecture'
    '--target-compiler[Specify the compiler suite that should be used to build the generated C code …]:compiler'
    '--target-cpu[Specify the cpu model that the compiled executable will be specialized to whe…]:cpu'
    '--target-platform[Specify the platform on which the target executable is to be run for the purp…]:platform'
    '--tasks[Specify the tasking layer to use for implementing tasks.]:task-impl'
    '--timers[Specify a timer implementation to be used by the Time module.]:timer-impl'
    '--copyright[Print the compiler\s copyright information.]'
    {-h,--help}'[Print a list of the command line options, indicating the arguments that they …]'
    '--help-env[Print the command line option help message, listing the environment variable …]'
    '--help-settings[Print the command line option help message, listing the current setting of ea…]'
    '--license[Print the compiler\s license information.]'
    '--version[Print the version number of the compiler. ENVIRONMENT.]'
    '*:filename:_files'
)
_arguments -s $arguments
