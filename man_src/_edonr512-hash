#compdef rhash

# Autogenerated from man page /usr/share/man/man1/rhash.1.gz

local arguments

arguments=(
    {--printf,--template}'[To output all sums use the `-a\ option.]'
    {-c,--check}'[Check hash files specified by command line.]'
    {-u,--update}'[Update the hash file specified by the option.]':hash-file
    {-k,--check-embedded}'[Verify files by crc32 sum embedded in their names.]'
    '--torrent[Create a torrent file for each processed file.]'
    '(- * :)'{-h,--help}'[Help: print help screen and exit.]'
    {-V,--version}'[Version: print version and exit.]'
    {-B,--benchmark}'[Run benchmark for selected algorithm(s).]'
    {-C,--crc32}'[CRC32: calculate and print CRC32 hash sum.]'
    '--crc32c[CRC32C: calculate and print CRC32C hash sum.]'
    '--md4[MD4: calculate and print MD4 hash sum.]'
    {-M,--md5}'[MD5: calculate and print MD5 hash sum.]'
    {-H,--sha1}'[SHA1: calculate and print SHA1 hash sum.]'
    {--sha224,--sha256,--sha384,--sha512}'[Calculate specified SHA2 hash sum.]'
    {--sha3-224,--sha3-256,--sha3-384,--sha3-512}'[Calculate specified SHA3 hash sum.]'
    '--tiger[Tiger: calculate and print Tiger hash sum.]'
    {-T,--tth}'[TTH: calculate and print DC++ TTH sum.]'
    '--btih[BTIH: calculate and print BitTorrent Info Hash.]'
    {-A,--aich}'[AICH: calculate and print AICH hash.]'
    {-E,--ed2k}'[ED2K: calculate and print eDonkey 2000 hash sum.]'
    {-L,--ed2k-link}'[eDonkey link: calculate and print eDonkey link.]'
    {-W,--whirlpool}'[Whirlpool: calculate and print Whirlpool hash sum.]'
    {-G,--gost12-256}'[GOST-2012: calculate and print 256-bit GOST R 34.]'
    '--gost12-512[GOST-2012: calculate and print 512-bit GOST R 34.]'
    '--gost94[GOST-94: calculate and print GOST R 34.]'
    '--gost94-cryptopro[GOST-94-CRYPTOPRO: calculate and print CryptoPro version of the deprecated Ru…]'
    '--ripemd160[RIPEMD-160: calculate and print RIPEMD-160 hash sum.]'
    '--has160[HAS-160: calculate and print HAS-160 hash sum.]'
    {--snefru128,--snefru256}'[SNEFRU: calculate and print SNEFRU-128/256 hash sums.]'
    {--edonr256,--edonr512}'[EDON-R: calculate and print EDON-R 256/512 hash sums.]'
    {-a,--all}'[Calculate all supported hash sums.]'
    '--list-hashes[List names of all supported hashes, one per line.]'
    {-r,--recursive}'[Recursively process directories, specified by command line.]'
    '--file-list[Process given file as a file-list.]:<file>'
    {-m,--message}'[Calculate hash sums of the text message.]':text
    '--follow[Follow symbolic links when processing directories recursively.]'
    {-v,--verbose}'[Be verbose.]'
    {-P,--percents}'[Show percents, while calculating or checking sums.]'
    '--skip-ok[Don\t print OK messages for successfully verified files.]'
    {-i,--ignore-case}'[Ignore case of filenames when updating crc files.]'
    '--speed[Print per-file and the total processing speed.]'
    {-e,--embed-crc}'[Rename files by inserting crc32 sum into name.]'
    '--embed-crc-delimiter[Insert specified <delimiter> before a crc sum in the --embed-crc mode, defaul…]:<delimiter>'
    '--path-separator[Use specified path separator to display paths.]:<separator>'
    {-q,--accept}'[Set a comma-delimited list of extensions of the files to process.]':list
    '--exclude[Set a comma-delimited list of extensions of the files to exclude from process…]:<list>'
    {-t,--crc-accept}'[Set a comma-delimited list of extensions of the hash files to verify.]':list
    '--maxdepth[Descend at most <levels> (a non-negative integer) levels of directories below…]:<levels>'
    {-o,--output}'[Set the file to output calculated hashes and verification results to.]':file-path
    {-l,--log}'[Set the file to log errors and verbose information to.]':file-path
    '--openssl[Specify which hash functions should be calculated using the OpenSSL library.]:<list>'
    '--gost-reverse[Reverse bytes in hexadecimal output of the GOST hash sum.]'
    '--bt-batch[Turn on torrent batch mode (implies torrent mode).]:<file-path>'
    '--bt-private[Generate BTIH for a private BitTorrent tracker.]'
    '--bt-piece-length[Set the piece length value for torrent file.]'
    '--bt-announce[Add a tracker announce URL to the created torrent file(s).]:<announce-url>'
    '--benchmark-raw[Switch benchmark output format to be a machine-readable tab-delimited text wi…]'
    '--sfv[Print hash sums in the SFV (Simple File Verification) output format (default).]'
    {-g,--magnet}'[Print hash sums formatted as magnet links.]'
    '--bsd[Use BSD output format.]'
    '--simple[Use simple output format.]'
    '--hex[Print hash sums in hexadecimal format.]'
    '--base32[Print hash sums in Base32 format.]'
    '--base64[Print hash sums in Base64 format.]'
    '--uppercase[Print hash sums in upper case.]'
    '--lowercase[Print hash sums in lower case.]'
    '-p[Format: print format string the standard output, interpreting `\ escapes and …]:<format>'
    '*:filename:_files'
)
_arguments -s $arguments
