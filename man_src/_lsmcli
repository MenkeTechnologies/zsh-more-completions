#compdef lsmcli

# Autogenerated from man page /usr/share/man/man1/lsmcli.1.gz

local arguments

arguments=(
    '--version[Show program\s version number and exit.]'
    '(- * :)'{-h,--help}'[Show this help message and exit.]'
    {-u,--uri}'[Uniform Resource Identifier (env LSMCLI_URI).]'
    {-P,--prompt}'[Prompt for password (env LSMCLI_PASSWORD).]'
    {-H,--human}'[Print sizes in human readable format (e. g. , KiB, MiB, GiB, TiB, PiB, EiB).]'
    {-t,--terse}'[Print output in terse form with "SEP" as a record separator without header un…]'
    '--header[Include the header with terse.]'
    {-e,--enum}'[Display enumerated types as numbers instead of text.]'
    {-f,--force}'[Bypass confirmation prompt for data loss operations.]'
    {-w,--wait}'[Command timeout value in ms (default = 30s).]'
    '-b[Run the command asynchronously instead of waiting for completion.]'
    {-s,--script}'[Displaying data in script friendly way.]'
    '--type[Required. Valid values are (case insensitive):.]:TYPE'
    '--fs[Required for --type=SNAPSHOTS, list the snapshots of certain filesystem.]:FS_ID'
    '--sys[Optional. Search resources from system with SYS_ID.]:SYS_ID'
    '--pool[Optional. Search resources from pool with POOL_ID.]:POOL_ID'
    '--vol[Search resources from volume with VOL_ID.]:VOL_ID'
    '--disk[Search resources from disk with DISK_ID.]:DISK_ID'
    '--ag[Search resources from access group with AG_ID.]:AG_ID'
    '--nfs-export[Search resources from NFS export with NFS_EXPORT_ID.]:NFS_EXPORT_ID'
    '--tgt[Search resources from target port with target port ID.]:TGT_ID'
    '--job[.]:JOB_ID'
    '--name[Required. Volume name.]:NAME'
    '--size[Required. Volume size (See SIZE OPTION for allowed formats).]:SIZE'
    '--provisioning[Optional. Provisioning type. Valid values are: DEFAULT, THIN, FULL.]:THINP_TYPE'
    '--raid-type[Required.]:RAID_TYPE'
    '--strip-size[Optional. The size in bytes of strip on each disks.]:STRIP_SIZE'
    '--rep-type[Required. Valid types of replication are:.]'
    '--src-vol[Required. The ID of replication source volume.]:SRC_VOL_ID'
    '--dst-vol[Required. The ID of replication destination volume.]:DST_VOL_ID'
    '--src-start[Required. Replication source volume start block number. Must in pair with.]:SRC_START_BLK'
    {--count,--dst-start}'[If you have several non-continuous block ranges, you can define repeatly defi…]'
    '--init[Required. The first initiator ID of new access group. WWPN or iSCSI IQN.]:INIT_ID'
    '--in-user[Optional. Inbound CHAP user name.]:IN_USER'
    '--in-pass[Optional. Inbound CHAP password.]:IN_PASS'
    '--out-user[Optional. Outbound CHAP user name.]:OUT_USER'
    '--out-pass[Optional. Outbound CHAP password.]:OUT_PASS'
    '--exportpath[Optional. NFS server export path. e. g. \/foo/bar\.]:EXPORT_PATH'
    '--anonuid[Optional. The UID(User ID) to map to anonymous user.]:ANONY_UID'
    '--anongid[Optional. The GID(Group ID) to map to anonymous user.]:ANONY_GID'
    '--auth-type[Optional. NFS client authentication type.]:AUTH_TYPE'
    '--root-host[Optional. Repeatable. The host/IP has root access.]:ROOT_HOST'
    '--ro-host[Optional. Repeatable. The host/IP has read only access.]:RO_HOST'
    '--rw-host[Optional. The host/IP has read/write access.]:RW_HOST'
    '--export[Required. ID of the export to unexport.]:EXPORT_ID'
    '--src-fs[Required. The ID of the filesystem to clone.]:SRC_FS_ID'
    '--dst-name[Required. The name for newly created destination file system.]:DST_FS_NAME'
    '--backing-snapshot[Optional. Make a FS clone using a previously created snapshot.]:BE_SS_ID'
    '--snap[Required. The ID of snapshot to delete.]:SNAP_ID'
    '--file[Optional. Repeatable.]:FILE_PATH'
    '--fileas[Optional. Repeatable.]:NEW_FILE_PATH'
    '--src[Required. Repeatable. Source file to clone (relative path).]:SRC_FILE_PATH'
    '--dst[Required. Repeatable. Destination file for clone (relative path).]:DST_FILE_PATH'
    '--read-pct[The desired percentage of read cache for the targeted system.]:READ_PCT'
    '--policy[Required. Enable or Disable.]:POLICY'
    '--path[Required. Disk path, like /dev/sdb.]:DISK_PATH'
    '*:filename:_files'
)
_arguments -s $arguments
