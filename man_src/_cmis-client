#compdef cmis-client

# Autogenerated from man page /usr/share/man/man1/cmis-client.1.gz

local arguments

arguments=(
    {-v,--verbose}'[Shows a lot of information to monitor what is happening behind the scene.]'
    '--help[Show the help and exit. This is equivalent to use the help command.]'
    '--url[url://to/binding needs to point to the service document of either AtomPub or …]:url:tobinding'
    {-r,--repository}'[Operate on the repo-id CMIS repository.]':repo-id
    {-u,--username}'[Connect as login to the CMIS server. If not provided connect anonymously.]':login
    {-p,--password}'[Use secret to authenticate on the CMIS server.]':secret
    '--no-ssl-check[Disables the SSL certificate verifications.]'
    '--proxy[Use url as the HTTP proxy.]:url'
    '--proxy-username[Use login to authenticate on the HTTP proxy.]:login'
    '--proxy-password[Use secret to authenticate on the HTTP proxy.]:secret'
    '--noproxy[Proxy settings won\t apply to hostnames and domain names listed in list.]:list'
    '--oauth2-client-id[Application client id to use in the OAuth2 authentication flow.]:client_id'
    '--oauth2-client-secret[Application client secret to use in the OAuth2 authentication flow.]:client_secret'
    '--oauth2-auth-url[URL to authenticate the user in the OAuth2 authentication flow.]:url'
    '--oauth2-token-url[URL to authenticate the application in the OAuth2 authentication flow.]:url'
    '--oauth2-redirect-uri[URI where the OAuth2 authentication flow will redirect after a sucessful auth…]:uri'
    '--oauth2-scope[Requested scope to access in the OAuth2 authentication flow.]:scope'
    '--input-file[Upload path/to/file as the new content stream of the object.]:pathtofile'
    '--input-type[Set the mime type of the new content stream of the object to mime/type.]:mimetype'
    '--input-name[Set the remote content stream filename of the new content stream of the objec…]:name.ext'
    '--object-type[Set the object type of the CMIS object to be created to some:cmistype.]:some:cmistype'
    '--object-property[Set a property to be updated or added to the CMIS object.]:prop-value'
    '--major[Create a major version when performing a checkin.]'
    {-m,--message}'[Set the checking message. SS COMMANDS.]':message
    '*:filename:_files'
)
_arguments -s $arguments
