#compdef repoquery

# Autogenerated from man page /usr/share/man/man1/repoquery.1.gz

local arguments

arguments=(
    '--querytags[List valid queryformat tags and exit.]'
    '--version[Report program version and exit.]'
    '--repoid[Specify which repository to query.]:repo'
    '--enablerepo[In addition to the default set, query the given additional repository, even i…]:repo'
    '--disablerepo[Do not query the given repository, even if it is enabled in YUM configuration.]:repo'
    '--repofrompath[Specify a path or url to a repository (same path as in a baseurl) to add to t…]:repoid><pathurl'
    '--plugins[Enable YUM plugin support.]'
    {-q,--query}'[For rpmquery compatibility, doesn\t do anything.]'
    '(- * :)'{-h,--help}'[Help; display a help message and then quit.]'
    '--quiet[Run quietly: no warnings printed to stderr.]'
    '--verbose[Produce verbose output.]'
    {-C,--cache}'[Tells repoquery to run entirely from YUM cache - does not download any metada…]'
    '--tempcache[Create and use a private cache instead of the main YUM cache.]'
    {-c,--config}'[Use alternative config file (default is /etc/yum. conf).]'
    '--releasever[Pretend the current release version is the given string.]:version'
    '--installroot[Specifies an alternative installroot, relative to which all packages will be …]:root'
    '--setopt[Set any config option in yum config or repo files.]:value'
    {-i,--info}'[Show general information about package similarly to "rpm -qi".]'
    {-l,--list}'[List files in package.]'
    {-R,--requires}'[List package dependencies.]'
    '--resolve[When used with --requires, resolve capabilities to originating packages.]'
    '--provides[List capabilities package provides.]'
    '--obsoletes[List capabilities obsoleted by package.]'
    '--conflicts[List capabilities conflicting with package.]'
    '--changelog[List package changelog.]'
    '--location[Show a location where the package could be downloaded from.]'
    {-s,--source}'[Show package source RPM name.]'
    '--srpm[Operate on corresponding source RPM.]'
    '--groupmember[List the repodata groups (yumgroups. xml) belongs to (if any).]:PACKAGE'
    '--nvr[Use name-version-release output format (rpm query default).]'
    '--nevra[Use name-epoch:version-release. architecture output format (default).]'
    '--envra[Use epoch:name-version-release.]'
    {--qf,--queryformat}'[Specify custom output format for queries.]'
    '--output[Output format which can be used with --requires/--whatrequires/--obsoletes/--…]:text|ascii-tree|dot-tree'
    '--level[In combination with --output ascii-tree|dot-tree this option specifies the nu…]:int'
    {-a,--all}'[Query all available packages (for rpmquery compatibility / shorthand for rep…]'
    '--show-duplicates[Query all versions of packages.]'
    {-f,--file}'[Query package owning FILE.]':FILE
    '--whatobsoletes[Query all packages that obsolete CAPABILITY.]:CAPABILITY'
    '--whatconflicts[Query all packages that conflict with CAPABILITY.]:CAPABILITY'
    '--whatprovides[Query all packages that provide CAPABILITY.]:CAPABILITY'
    '--whatrequires[Query all packages that require CAPABILITY.]:CAPABILITY'
    '--alldeps[When used with --whatrequires, look for non-explicit dependencies in addition…]'
    '--exactdeps[When used with --whatrequires, search for dependencies only exactly as given.]'
    '--recursive[When used with --whatrequires, and --requires --resolve, query packages recur…]'
    '--archlist[Limit the query to packages of given architecture(s).]:ARCH1ARCH2...'
    '--pkgnarrow[Limit what packages are considered for the query.]:WHAT'
    '--installed[Restrict query ONLY to installed pkgs - disables all repos and only acts on r…]'
    '--grouppkgs[Specify what type of packages are queried from groups.]:WHAT'
    {-g,--group}'[Query groups instead of packages.]'
    '*:filename:_files'
)
_arguments -s $arguments
