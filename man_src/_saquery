#compdef saquery

local arguments

arguments=(
  {--p,-p}'[get PathRecord info]'
  {--N,-N}'[get NodeRecord info]'
  {--L,-L}'[return the Lids of the name specified]'
  {--l,-l}'[return the unique Lid of the name specified]'
  {--G,-G}'[return the Guids of the name specified]'
  {--O,-O}'[return name for the Lid specified]'
  {--U,-U}'[return name for the Guid specified]'
  {--s,-s}'[return the PortInfoRecords with isSM or]'
  {--g,-g}'[get multicast group info]'
  {--m,-m}'[get multicast member info (if multicast group]'
  {--x,-x}'[get LinkRecord info]'
  {--c,-c}'[get the SAs class port info]'
  {--S,-S}'[get ServiceRecord info]'
  {--I,-I}'[get InformInfoRecord (subscription) info]'
  {--list,-D}'[the node desc of the CAs]'
  '--src-to-dst[get a PathRecord for <src:dst> where src and]'
  '--sgid-to-dgid[get a PathRecord for <sgid-dgid> where sgid]'
  '--node-name-map[specify a node name map file]'
  '--smkey[SA SM_Key value for the query. If non-numeric]'
  '--slid[source LID (PathRecord)]'
  '--dlid[destination LID (PathRecord)]'
  '--mlid[multicast LID (MCMemberRecord)]'
  '--sgid[source GID (IPv6 format) (PathRecord)]'
  '--dgid[destination GID (IPv6 format) (PathRecord)]'
  '--gid[port GID (MCMemberRecord)]'
  '--mgid[multicast GID (MCMemberRecord)]'
  {--reversible,-r}'[reversible path (PathRecord)]'
  '--numb[_path, -n <val>   Number of paths (PathRecord)]'
  '--pkey[P_Key (PathRecord, MCMemberRecord). If]'
  '--qos[_class, -Q <val>   QoS Class (PathRecord)]'
  '--sl[service level (PathRecord, MCMemberRecord)]'
  {--mtu,-M}'[MTU and selector (PathRecord, MCMemberRecord)]'
  {--rate,-R}'[rate and selector (PathRecord, MCMemberRecord)]'
  '--pkt[_lifetime <val>    Packet lifetime and selector (PathRecord, MCMemberRecord)]'
  {--qkey,-q}'[Q_Key (MCMemberRecord). If non-numeric value]'
  {--tclass,-T}'[traffic Class (PathRecord, MCMemberRecord)]'
  '--flow[_label, -F <val>  Flow Label (PathRecord, MCMemberRecord)]'
  '--hop[_limit, -H <val>   Hop limit (PathRecord, MCMemberRecord)]'
  '--scope[scope (MCMemberRecord)]'
  '--join[_state, -J <val>  Join state (MCMemberRecord)]'
  '--proxy[_join, -X <val>  Proxy join (MCMemberRecord)]'
  '--service[_id <val>      ServiceID (PathRecord)]'
  {--config,-z}'[use config file, default: /etc/infiniband-diags/ibdiag.conf]'
  {--Ca,-C}'[ca name to use]'
  {--Port,-P}'[ca port number to use]'
  {--timeout,-t}'[timeout in ms]'
  '--show[_keys, -K         display security keys in output]'
  {--errors,-e}'[show send and receive errors]'
  {--verbose,-v}'[increase verbosity level]'
  {--debug,-d}'[raise debug level]'
  {--help,-h}'[help message]'
  {--version,-V}'[show version]'
  '*:filename:_files'
)

_arguments -s $arguments
