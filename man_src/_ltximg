#compdef ltximg

# Autogenerated from man page /Library/TeX/Distributions/.DefaultTeX/Contents/Man/man1/ltximg.1

local arguments

arguments=(
    '(- * :)'{-h,--help}'[Display command line help and exit.]'
    {-v,--version}'[Display current version and exit.]'
    {-V,--verbose}'[Verbose printing information.]'
    {-l,--log}'[Write \\f(CW\\*(C`. log\\*(C\ file with debug information.]'
    {-t,--tif}'[Create \\f(CW\\*(C`. tif\\*(C\ files using ghostscript.]'
    {-b,--bmp}'[Create \\f(CW\\*(C`. bmp\\*(C\ files using ghostscript.]'
    {-j,--jpg}'[Create \\f(CW\\*(C`. jpg\\*(C\ files using ghostscript.]'
    {-p,--png}'[Create \\f(CW\\*(C`. png\\*(C\ files using ghostscript.]'
    {-e,--eps}'[Create \\f(CW\\*(C`. eps\\*(C\ files using pdftops.]'
    {-s,--svg}'[Create \\f(CW\\*(C`. svg\\*(C\ files using pdftocairo.]'
    {-P,--ppm}'[Create \\f(CW\\*(C`. ppm\\*(C\ files using pdftoppm.]'
    {-g,--gray}'[Gray scale for images using ghostscript.]'
    {-f,--force}'[Capture \\f(CW\\*(C`psset\\*(C\ and \\f(CW\\*(C`tikzset\\*(C\ to extract.]'
    {-n,--noprew}'[Create images files without preview package.]'
    {-r,--runs}'[Set the number of times the compiler will run on the input file for environme…]'
    {-d,--dpi}'[Dots per inch resolution for images (default: 150).]'
    {-m,--margins}'[Set margins in bp for pdfcrop (default: 0).]'
    {-o,--output}'[Create output file.]'
    '--imgdir[Set name of directory to save images and files (default: images).]:dirname'
    '--prefix[Set prefix append to each generated files (default: fig).]:string'
    '--myverb[Add \\f(CW\\*(C`macroname\\*(C\ to verbatim inline search (default: myverb).]:macroname'
    '--clean[Removes specific block text in output file (default: doc).]:doc|pst|tkz|all|off'
    '--zip[Compress files generated in \\f(CW\\*(C`. zip\\*(C\ format.]'
    '--tar[Compress files generated in \\f(CW\\*(C`. tar. gz\\*(C\ format.]'
    '--srcenv[Create files with only code of environments.]'
    '--subenv[Create standalone files for environments.]'
    '--shell[Enable \\f(CW\\*(C`write18{SHELL COMMAND}\\*(C\.]'
    '--latex[Using \\f(CW\\*(C`latex>dvips>ps2pdf\\*(C\ for compiler input and \\f(CW\\*(C`pdfl…]'
    '--dvips[Using \\f(CW\\*(C`latex>dvips>ps2pdf\\*(C\ for compiler input and \\f(CW\\*(C`late…]'
    '--dvilua[Using \\f(CW\\*(C`dvilualatex>dvips>ps2pdf\\*(C\ for compiler input and \\f(CW\\*(…]'
    '--dvipdf[Using \\f(CW\\*(C`latex>dvipdfmx\\*(C\ for compiler input and \\f(CW\\*(C`latex>dv…]'
    '--xetex[Using \\f(CW\\*(C`xelatex\\*(C\ for compiler input and output.]'
    '--luatex[Using \\f(CW\\*(C`lualatex\\*(C\ for compiler input and output.]'
    '--arara[Use \\f(CW\\*(C`arara\\*(C\ for compiler input and output.]'
    '--latexmk[Using \\f(CW\\*(C`latexmk\\*(C\ for compiler output file.]'
    '--norun[Run script, but no create images files.]'
    '--nopdf[Don\t create a \\f(CW\\*(C`. pdf\\*(C\ image files.]'
    '--nocrop[Don\t run pdfcrop.]'
    '--extrenv[Add new environments to extract.]:env1env2...'
    '--skipenv[Skip some default environments to extract.]:env1env2...'
    '--verbenv[Add new verbatim environments.]:env1env2...'
    '--writenv[Add new verbatim write environments.]:env1env2...'
    '*:filename:_files'
)
_arguments -s $arguments
