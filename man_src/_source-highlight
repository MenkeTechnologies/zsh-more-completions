#compdef source-highlight

# Autogenerated from man page /usr/local/share/man/man1/source-highlight.1

local arguments

arguments=(
    '(- * :)'{-h,--help}'[Print help and exit.]'
    '--detailed-help[Print help, including all details and hidden options, and exit.]'
    {-V,--version}'[Print version and exit.]'
    {-i,--input}'[Input file (default=stdin).]':FILENAME
    {-o,--output}'[Output file (default=stdout, when the third invocation form is used).]':FILENAME
    {-s,--src-lang}'[source language (use --lang-list to get the complete list).]':STRING
    '--lang-list[list all the supported language and associated language definition file.]'
    '--outlang-list[list all the supported output language and associated language definition fil…]'
    {-f,--out-format}'[output format (use --outlang-list to get the complete list) (default=`html\).]':STRING
    {-d,--doc}'[create an output file that can be used as a stand alone document (e. g.]'
    '--no-doc[cancel the --doc option even if it is implied (e. g. , when css is given).]'
    {-c,--css}'[the external style sheet filename. Implies --doc.]':FILENAME
    {-T,--title}'[give a title to the output document. Implies --doc.]':STRING
    {-t,--tab}'[specify tab length. (default=`8\).]':INT
    {-H,--header}'[file to insert as header.]':FILENAME
    {-F,--footer}'[file to insert as footer.]':FILENAME
    '--style-file[specify the file containing format options (default=`default. style\).]:FILENAME'
    '--style-css-file[css syntax).]'
    '--style-defaults[options (default=`style. defaults\).]'
    '--outlang-def[output language definition file.]:FILENAME'
    '--outlang-map[output language map file (default=`outlang. map\).]:FILENAME'
    '--data-dir[directory where language definition files and language maps are searched for.]:PATH'
    '--output-dir[output directory.]:PATH'
    '--lang-def[language definition file.]:FILENAME'
    '--lang-map[language map file (default=`lang. map\).]:FILENAME'
    '--show-lang-elements[prints the language elements that are defined P in the language definition fi…]:FILENAME'
    '--infer-lang[force to infer source script language (overriding given language specificatio…]'
    {-n,--line-number}'[number all output lines, using the specified padding character (default=`0\).]':PADDING
    '--line-number-ref[number all output lines and generate an anchor,.]:PREFIX'
    '--line-range[generate only the lines in the specified range(s).]:STRING'
    '--range-separator[the optional separator to be printed among ranges (e. g. , ". ").]:STRING'
    '--range-context[number of (context) lines generated even if not in range P Mode: regexrange P…]:INT'
    '--regex-range[generate only the lines within the specified regular expressions .]:STRING'
    '--gen-references[generate references (possible values="inline", "postline", "postdoc" default…]:STRING'
    '--ctags-file[specify the file generated by ctags that will be used to generate references …]:FILENAME'
    '--ctags[how to run the ctags command.]:CMD'
    {-v,--verbose}'[verbose mode on.]'
    {-q,--quiet}'[print no progress information.]'
    '--binary-output[write output files in binary mode.]'
    '--statistics[print some statistics (i. e. , elapsed time).]'
    '--gen-version[put source-highlight version in the generated file (default=on).]'
    '--check-lang[only check the correctness of a language definition file.]:FILENAME'
    '--check-outlang[only check the correctness of an output language definition file.]:FILENAME'
    '--failsafe[if no language definition is found for the input, it is simply copied to the …]'
    {-g,--debug-langdef}'[debug a language definition.]':TYPE
    '--tag-relative[testing]'
    '--show-regex[show the regular expression automaton corresponding to a language definition …]:FILENAME'
    '*:filename:_files'
)
_arguments -s $arguments
