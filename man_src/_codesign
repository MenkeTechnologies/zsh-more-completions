#compdef codesign

# Autogenerated from man page /usr/share/man/man1/codesign.1

local arguments

arguments=(
    '--all-architectures[When verifying a code signature on code that has a universal ("fat") Mach-O b…]'
    '-a[When verifying or displaying signatures, explicitly select the Mach-O archite…]'
    '--bundle-version[When handling versioned bundles such as frameworks, explicitly specify the ve…]'
    '-d[Display information about the code at the path(s) given.]'
    '-D[When signing, designates that a detached signature should be written to the s…]'
    '--deep[When signing a bundle, specifies that nested code content such as helpers, fr…]'
    '--detached-database[When signing, specifies that a detached signature should be generated as with…]'
    '-f[When signing, causes codesign to replace any existing signature on the path(s…]'
    '-h[Constructs and prints the hosting chain of a running program.]'
    '-i[During signing, explicitly specify the unique identifier string that is embed…]'
    '-o[During signing, specifies a set of option flags to be embedded in the code si…]'
    '-P[Indicates the granularity of code signing. Pagesize must be a power of two.]'
    '-r[During signing, indicates that internal requirements should be embedded in th…]'
    '-R[During verification, indicates that the path(s) given should be verified agai…]'
    '-s[Sign the code at the path(s) given using this identity.]'
    '-v[Sets (with a numeric value) or increments the verbosity level of output.]'
    '--continue[Instructs codesign to continue processing path arguments even if processing o…]'
    '--dryrun[During signing, performs almost all signing operations, but does not actually…]'
    '--entitlements[When signing, take the file at the given path and embed its contents in the s…]'
    '--extract-certificates[When displaying a signature, extract the certificates in the embedded certifi…]'
    '--file-list[When signing or displaying a signature, codesign writes to the given path a l…]'
    '--ignore-resources[During static validation, do not validate the contents of the code\s resource…]'
    '--keychain[During signing, only search for the signing identity in the keychain file spe…]'
    '--prefix[If no explicit unique identifier is specified (using the -i option), and if t…]'
    '--preserve-metadata[When re-signing code that is already signed, reuse some information from the …]:list'
    '--strict[When validating code, apply additional restrictions beyond the defaults.]'
    '--timestamp[During signing, requests that a \\fItimestamp authority server\\fR be contacted…]'
    '--runtime-version[During signing, when the \\fIruntime\\fR OPTION FLAG is set, explicitly specify…]'
    '*:filename:_files'
)
_arguments -s $arguments
