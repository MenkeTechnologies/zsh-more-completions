#compdef udevadm

# Autogenerated from man page /usr/share/man/man8/udevadm.8.gz

local arguments

arguments=(
    '--debug[Print debug messages to standard error.]'
    '--version[Print version number.]'
    '(- * :)'{-h,--help}'[Print help text.]'
    {-q,--query}'[Query the database for the specified type of device data.]':TYPE
    {-p,--path}'[The /sys path of the device to query, e. g. \[/sys\]/class/block/sda.]':DEVPATH
    {-n,--name}'[The name of the device node or a symlink to query, e. g. \[/dev\]/sda.]':FILE
    {-r,--root}'[Print absolute paths in name or symlink query.]'
    {-a,--attribute-walk}'[Print all sysfs properties of the specified device that can be used in udev r…]'
    {-x,--export}'[Print output as key/value pairs. Values are enclosed in single quotes.]'
    {-P,--export-prefix}'[Add a prefix to the key name of exported values.]':NAME
    {-d,--device-id-of-file}'[Print major/minor numbers of the underlying device, where the file lives on.]':FILE
    {-e,--export-db}'[Export the content of the udev database.]'
    {-c,--cleanup-db}'[Cleanup the udev database.]'
    {-v,--verbose}'[Print the list of devices which will be triggered.]'
    '--dry-run[Do not actually trigger the event.]'
    {-t,--type}'[Trigger a specific type of devices. Valid types are: devices, subsystems.]':TYPE
    '--action[Type of event to be triggered. The default value is change.]:ACTION'
    {-s,--subsystem-match}'[Trigger events for devices which belong to a matching subsystem.]':SUBSYSTEM
    {-S,--subsystem-nomatch}'[Do not trigger events for devices which belong to a matching subsystem.]':SUBSYSTEM
    '--attr-match[Trigger events for devices with a matching sysfs attribute.]'
    {-A,--attr-nomatch}'[Do not trigger events for devices with a matching sysfs attribute.]'
    '--property-match[Trigger events for devices with a matching property value.]'
    {-g,--tag-match}'[Trigger events for devices with a matching tag.]':PROPERTY
    {-y,--sysname-match}'[Trigger events for devices with a matching sys device name.]':NAME
    {-b,--parent-match}'[Trigger events for all children of a given device.]':SYSPATH
    '--timeout[Maximum number of seconds to wait for the event queue to become empty.]:SECONDS'
    {-E,--exit-if-exists}'[Stop waiting if file exists.]':FILE
    '--exit[Signal and wait for systemd-udevd to exit.]'
    {-l,--log-priority}'[Set the internal log level of systemd-udevd.]':value
    '--stop-exec-queue[Signal systemd-udevd to stop executing new events.]'
    '--start-exec-queue[Signal systemd-udevd to enable the execution of events.]'
    {-R,--reload}'[Signal systemd-udevd to reload the rules files and other databases like the k…]'
    '--property[Set a global property for all events.]'
    {-m,--children-max}'[Set the maximum number of events, systemd-udevd will handle at the same time.]':value
    {-k,--kernel}'[Print the kernel uevents.]'
    {-u,--udev}'[Print the udev event after the rule processing.]'
    '--update[Compile the hardware database information located in /usr/lib/udev/hwdb.]'
    '--usr[Put the compiled database into /usr/lib/udev/hwdb. bin instead.]'
    '--test[Query the database with a modalias string, and print the retrieved properties.]:string'
    {-N,--resolve-names}'[Specify when udevadm should resolve names of users and groups.]:when:(early late never)'
    '*:filename:_files'
)
_arguments -s $arguments
