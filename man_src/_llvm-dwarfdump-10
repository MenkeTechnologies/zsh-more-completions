#compdef llvm-dwarfdump-10

local arguments

arguments=(
  '--color[- Use colors in output (default=autodetect)]'
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '--all[- Dump all debug info sections]'
  '-apple-names[- Dump the .apple_names section]'
  '-apple-namespaces[- Dump the .apple_namespaces section]'
  '-apple-objc[- Dump the .apple_objc section]'
  '-apple-types[- Dump the .apple_types section]'
  '-debug-abbrev[- Dump the .debug_abbrev section]'
  '-debug-addr[- Dump the .debug_addr section]'
  '-debug-aranges[- Dump the .debug_aranges section]'
  '-debug-cu-index[- Dump the .debug_cu_index section]'
  '-debug-frame[- Dump the .debug_frame section]'
  '-debug-gnu-pubnames[- Dump the .debug_gnu_pubnames section]'
  '-debug-gnu-pubtypes[- Dump the .debug_gnu_pubtypes section]'
  '-debug-info[- Dump the .debug_info section]'
  '-debug-line[- Dump the .debug_line section]'
  '-debug-line-str[- Dump the .debug_line_str section]'
  '-debug-loc[- Dump the .debug_loc section]'
  '-debug-loclists[- Dump the .debug_loclists section]'
  '-debug-macro[- Dump the .debug_macro section]'
  '-debug-names[- Dump the .debug_names section]'
  '-debug-pubnames[- Dump the .debug_pubnames section]'
  '-debug-pubtypes[- Dump the .debug_pubtypes section]'
  '-debug-ranges[- Dump the .debug_ranges section]'
  '-debug-rnglists[- Dump the .debug_rnglists section]'
  '-debug-str[- Dump the .debug_str section]'
  '-debug-str-offsets[- Dump the .debug_str_offsets section]'
  '-debug-tu-index[- Dump the .debug_tu_index section]'
  '-debug-types[- Dump the .debug_types section]'
  '--eh-frame[- Alias for -debug-frame]'
  '-gdb-index[- Dump the .gdb_index section]'
  '--arch[- Dump debug information for the specified CPU architecture only. Architectures may be specified by name or by number. This option can be specified multiple times, once for each desired architecture.]'
  '--diff[- Emit diff-friendly output by omitting offsets and addresses.]'
  '--find[- Search for the exact match for <name> in the accelerator tables and print the matching debug information entries. When no accelerator tables are available, the slower but more complete -name option can be used instead.]'
  '--ignore-case[- Ignore case distinctions when searching.]'
  '--lookup[- Lookup <address> in the debug information and print out any available file, function, block and line table details.]'
  '--name[- Find and print all debug info entries whose name (DW_AT_name attribute) matches the exact text in <pattern>.  When used with the the -regex option <pattern> is interpreted as a regular expression.]'
  '-o[- Redirect output to the specified file.]'
  '--parent-recurse-depth[- Only recurse to a depth of N when displaying parents of debug info entries.]'
  '--quiet[- Use with -verify to not emit to STDOUT.]'
  '--recurse-depth[- Only recurse to a depth of N when displaying children of debug info entries.]'
  '--regex[- Treat any <pattern> strings as regular expressions when searching instead of just as an exact string match.]'
  '--show-children[- Show a debug info entrys children when selectively printing entries.]'
  '--show-form[- Show DWARF form types after the DWARF attribute types.]'
  '--show-parents[- Show a debug info entrys parents when selectively printing entries.]'
  '--statistics[- Emit JSON-formatted debug info quality metrics.]'
  '--summarize-types[- Abbreviate the description of type unit entries.]'
  '--uuid[- Show the UUID for each architecture.]'
  '--verbose[- Print more low-level encoding details.]'
  '--verify[- Verify the DWARF debug info.]'
  '*:filename:_files'
)

_arguments -s $arguments
