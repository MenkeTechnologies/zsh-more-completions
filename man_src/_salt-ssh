#compdef salt-ssh

# Autogenerated from man page /usr/local/man/man1/salt-ssh.1

local arguments

arguments=(
    '--version[Print the version of Salt that is running.]'
    '--versions-report[Show program\\(aqs dependencies and version number, and then exit.]'
    '(- * :)'{-h,--help}'[Show the help message and exit.]'
    {-c,--config-dir}'[The location of the Salt configuration directory.]'
    '--hard-crash[Raise any original exception rather than exiting gracefully. Default: False.]'
    {-r,--raw,--raw-shell}'[Execute a raw shell command.]'
    '--roster[Define which roster system to use, this defines if a database backend, scanne…]'
    '--roster-file[Define an alternative location for the default roster file location.]'
    {--refresh,--refresh-cache}'[Force a refresh of the master side data cache of the target\\(aqs data.]'
    '--max-procs[Set the number of concurrent minions to communicate with.]'
    '--extra-filerefs[Pass in extra files to include in the state tarball.]:EXTRA_FILEREFS'
    '--min-extra-modules[One or comma-separated list of extra Python modulesto be included into Minima…]:MIN_EXTRA_MODS'
    '--thin-extra-modules[One or comma-separated list of extra Python modulesto be included into Thin …]:THIN_EXTRA_MODS'
    {-v,--verbose}'[Turn on command verbosity, display jid.]'
    {-s,--static}'[Return the data from minions as a group after they all return.]'
    {-w,--wipe}'[Remove the deployment of the salt files when done executing.]'
    {-W,--rand-thin-dir}'[Select a random temp dir to deploy on the remote system.]'
    {-t,--regen-thin,--thin}'[Trigger a thin tarball regeneration.]'
    '--python2-bin[Path to a python2 binary which has salt installed.]:PYTHON2_BIN'
    '--python3-bin[Path to a python3 binary which has salt installed.]:PYTHON3_BIN'
    '--jid[Pass a JID to be used instead of generating one.]:JID'
    '--priv[Specify the SSH private key file to be used for authentication.]:SSH_PRIV'
    '--priv-passwd[Specify the SSH private key file\\(aqs passphrase if need be.]:SSH_PRIV_PASSWD'
    {-i,--ignore-host-keys}'[By default ssh host keys are honored and connections will ask for approval.]'
    '--no-host-keys[Fully ignores ssh host keys which by default are honored and connections woul…]'
    '--user[Set the default user to attempt to use when authenticating.]:SSH_USER'
    '--passwd[Set the default password to attempt to use when authenticating.]'
    '--askpass[Interactively ask for the SSH password with no echo - avoids password in proc…]'
    '--key-deploy[Set this flag to attempt to deploy the authorized ssh key with all minions.]'
    '--identities-only[Use the only authentication identity files configured in the ssh_config files.]'
    '--sudo[Run command via sudo.]'
    '--scan-ports[Comma-separated list of ports to scan in the scan roster.]:SSH_SCAN_PORTS'
    '--scan-timeout[Scanning socket timeout for the scan roster.]:SSH_SCAN_TIMEOUT'
    {-l,--log-level}'[Console logging log level.]'
    '--log-file[Log file path. Default: /var/log/salt/ssh.]:LOG_FILE'
    '--log-file-level[Logfile logging log level.]:LOG_LEVEL_LOGFILE'
    {-E,--pcre}'[The target expression will be interpreted as a PCRE regular expression rather…]'
    '--out[Pass in an alternative outputter to display the return of data.]'
    {--out-indent,--output-indent}'[Print the output indented by the provided value in spaces.]'
    {--out-file,--output-file}'[Write the output to the specified file.]'
    {--out-file-append,--output-file-append}'[Append the output to the specified file.]'
    '--no-color[Disable all colored output.]'
    '--force-color[Force colored output . sp NOTE: NDENT 7. 0 NDENT 3.]'
    {--state-output,--state_output}'[Override the configured state_output value for minion output.]'
    {--state-verbose,--state_verbose}'[Override the configured state_verbose value for minion output.]'
    '*:filename:_files'
)
_arguments -s $arguments
