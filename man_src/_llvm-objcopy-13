#compdef llvm-objcopy-13

# Autogenerated from man page /usr/share/man/man1/llvm-objcopy-13.1.gz

local arguments

arguments=(
    '--add-gnu-debuglink[Add a . gnu_debuglink section for <debug-file> to the output.]:debug-file'
    '--add-section[Add a section named <section> with the contents of <file> to the output.]:file'
    {--binary-architecture,-B}'[Ignored for compatibility.]'
    {--disable-deterministic-archives,-U}'[Use real values for UIDs, GIDs and timestamps when updating archive member he…]'
    {--discard-all,-x}'[Remove most local symbols from the output.]'
    '--dump-section[Dump the contents of section <section> into the file <file>.]:file'
    {--enable-deterministic-archives,-D}'[Enable deterministic mode when copying archives, i. e.]'
    {--help,-h}'[Print a summary of command line options.]'
    '--only-keep-debug[Produce a debug file as the output that only preserves contents of sections u…]'
    {--only-section,-j}'[Remove all sections from the output, except for sections named <section>.]'
    '--redefine-sym[Rename symbols called <old> to <new> in the output.]:new'
    '--redefine-syms[Rename symbols in the output as described in the file <filename>.]:filename'
    '--regex[If specified, symbol and section names specified by other switches are treate…]'
    {--remove-section,-R}'[Remove the specified section from the output.]'
    '--set-section-alignment[Set the alignment of section <section> to <align>.]:align'
    '--set-section-flags[Set section properties in the output of section <section> based on the specif…]:flag><flag>...'
    '--strip-all-gnu[Remove all symbols, debug sections and relocations from the output.]'
    {--strip-all,-S}'[For ELF objects, remove from the output all symbols and non-alloc sections no…]'
    {--strip-debug,-g}'[Remove all debug sections from the output.]'
    {--strip-symbol,-N}'[Remove all symbols named <symbol> from the output.]'
    '--strip-symbols[Remove all symbols whose names appear in the file <filename>, from the output.]:filename'
    '--strip-unneeded-symbol[Remove from the output all symbols named <symbol> that are local or undefined…]:symbol'
    '--strip-unneeded-symbols[Remove all symbols whose names appear in the file <filename>, from the output…]:filename'
    '--strip-unneeded[Remove from the output all local or undefined symbols that are not required b…]'
    {--version,-V}'[Display the version of the llvm-objcopy executable.]'
    {--wildcard,-w}'[Allow wildcard syntax for symbol-related flags.]'
    '--add-symbol[Add a new symbol called <name> to the output symbol table, in the section nam…]:section>:<value><flags'
    '--allow-broken-links[Allow llvm-objcopy to remove sections even if it would leave invalid section …]'
    {--change-start,--adjust-start}'[Add <incr> to the programâs start address.]'
    '--compress-debug-sections[Compress DWARF debug sections in the output, using the specified style.]:style'
    '--decompress-debug-sections[Decompress any compressed DWARF debug sections in the output.]'
    {--discard-locals,-X}'[Remove local symbols starting with â. Lâ from the output.]'
    '--extract-dwo[Remove all sections that are not DWARF . dwo sections from the output.]'
    '--extract-main-partition[Extract the main partition from the output.]'
    '--extract-partition[Extract the named partition from the output.]:name'
    '--globalize-symbol[Mark any defined symbols named <symbol> as global symbols in the output.]:symbol'
    '--globalize-symbols[Read a list of names from the file <filename> and mark defined symbols with t…]:filename'
    {--input-target,-I}'[Read the input as the specified format.]'
    '--keep-file-symbols[Keep symbols of type STT_FILE, even if they would otherwise be stripped.]'
    '--keep-global-symbol[Make all symbols local in the output, except for symbols with the name <symbo…]:symbol'
    '--keep-global-symbols[Make all symbols local in the output, except for symbols named in the file <f…]:filename'
    '--keep-section[When removing sections from the output, do not remove sections named <section…]:section'
    {--keep-symbol,-K}'[When removing symbols from the output, do not remove symbols named <symbol>.]'
    '--keep-symbols[When removing symbols from the output do not remove symbols named in the file…]:filename'
    '--localize-hidden[Make all symbols with hidden or internal visibility local in the output.]'
    {--localize-symbol,-L}'[Mark any defined non-common symbol named <symbol> as a local symbol in the ou…]'
    '--localize-symbols[Read a list of names from the file <filename> and mark defined non-common sym…]:filename'
    '--new-symbol-visibility[Specify the visibility of the symbols automatically created when using binary…]:visibility'
    {--output-target,-O}'[Write the output as the specified format.]'
    '--prefix-alloc-sections[Add <prefix> to the front of the names of all allocatable sections in the out…]:prefix'
    '--prefix-symbols[Add <prefix> to the front of every symbol name in the output.]:prefix'
    {--preserve-dates,-p}'[Preserve access and modification timestamps in the output.]'
    '--rename-section[Rename sections called <old> to <new> in the output, and apply any specified …]:new><flag>...'
    '--set-start-addr[Set the start address of the output to <addr>.]:addr'
    '--split-dwo[Equivalent to running llvm-objcopy with %--extract-dwo and <dwo-file> as the …]:dwo-file'
    '--strip-dwo[Remove all DWARF . dwo sections from the output.]'
    '--strip-non-alloc[Remove from the output all non-allocatable sections that are not within segme…]'
    '--strip-sections[Remove from the output all section headers and all section data not within se…]'
    {--target,-F}'[Equivalent to %--input-target and %--output-target for the specified format.]'
    {--weaken-symbol,-W}'[Mark any global symbol named <symbol> as a weak symbol in the output.]'
    '--weaken-symbols[Read a list of names from the file <filename> and mark global symbols with th…]:filename'
    '--weaken[Mark all defined global symbols as weak in the output.]'
    '--keep-undefined[Keep undefined symbols, even if they would otherwise be stripped.]'
    '*:filename:_files'
)
_arguments -s $arguments
