#compdef soapsuds

# Autogenerated from man page /usr/local/share/man/man1/soapsuds.1

local arguments

arguments=(
    '--types[or can extract the types from an assembly specified with.]'
    '--inputassemblyfile[In this last case, soapsuds will include schemas for all serializable classes…]'
    '--gc[option) or it can directly generate an assembly that implements the proxy (wi…]'
    '--outputassemblyfile[option).]'
    {--urltoschema:url,--url:url}'[Url from which to retrieve the WSDL document.]'
    '--types:type1[Specifies types for which to generate a schema or proxy.]'
    '--serviceendpoint[option is used.]'
    {--inputassemblyfile:file,--ia:file}'[Assembly that contains the types to export.]'
    {--inputschemafile:schena,--is:schema}'[Schema from which to generate proxy classes.]'
    {--inputdirectory:directory,--id:directory}'[Directory where DLLs are located.]'
    {--serviceendpoint:url,--se:url}'[Url of the service to be placed in the WSDL document.]'
    {--outputassemblyfile:file,--oa:file}'[Generates the proxy code and compiles it into an assembly with the provided n…]'
    {--outputschemafile:file,--os:file}'[Generates a WSDL document that represents the provided types.]'
    '--generatecode[Generates proxy source code for the provided WSDL document or types.]'
    {--outputdirectory:directory,--od:directory}'[Directory where generated files will be placed.]'
    {--proxynamespace:namespace,--pn:namespace}'[Namespace of the generated proxy.]'
    {--nowrappedproxy,--nowp}'[Do not generate a wrapped proxy.]'
    {--wrappedproxy,--wp}'[Generate a wrapped proxy.]'
    {--strongnamefile:file,--sn:file}'[Strong name file. GENERAL OPTIONS The following options are available:.]'
    '--nologo[Supress the startup logo.]'
    {--u:username,--user:username}'[The user name to use when connecting to the server.]'
    {--p:password,--password:password}'[The password to use when connecting to the server.]'
    {--d:domain,--domain:domain}'[The domain to use when connecting to the server.]'
    {--httpproxyname:name,--hpn:name}'[Name of the http proxy.]'
    {--httpproxyport:port,--hpp:port}'[Port of the http proxy.]'
    '*:filename:_files'
)
_arguments -s $arguments
