#compdef llvm-symbolizer-13

# Autogenerated from man page /usr/share/man/man1/llvm-symbolizer-13.1.gz

local arguments

arguments=(
    '--adjust-vma[Add the specified offset to object file addresses when performing lookups.]:offset'
    {--basenames,-s}'[Print just the fileâs name without any directories, instead of the absolute…]'
    {--demangle,-C}'[Print demangled function names, if the names are mangled (e. g.]'
    '--dwp[Use the specified DWP file at <path> for any CUs that have split DWARF debug …]:path'
    '--fallback-debug-path[When a separate file contains debug data, and is referenced by a GNU debug li…]:path'
    {--functions,-f}'[Specify the way function names are printed (omit function name, print short f…]'
    {--help,-h}'[Show help and usage for this command.]'
    {--inlining,--inlines,-i}'[If a source code location is in an inlined function, prints all the inlined f…]'
    '--no-inlines[Donât print inlined frames.]'
    '--no-demangle[Donât print demangled function names.]'
    {--obj,--exe,-e}'[Path to object file to be symbolized.]'
    '--output-style[Specify the preferred output style. Defaults to LLVM.]:LLVM|GNU|JSON'
    {--pretty-print,-p}'[Print human readable output.]'
    {--print-address,--addresses,-a}'[Print address before the source code location. Defaults to false. NDENT 7.]'
    '--print-source-context-lines[Print N lines of source context for each symbolized address. NDENT 7.]:N'
    '--relativenames[Print the fileâs path relative to the compilation directory, instead of the…]'
    '--verbose[Print verbose address, line and column information. NDENT 7. 0 NDENT 3. 5 .]'
    {--version,-v}'[Print version information for the tool.]'
    '--dia[Use the Windows DIA SDK for symbolization.]'
    '--default-arch[If a binary contains object files for multiple architectures (e. g.]:arch'
    '--dsym-hint[If the debug info for a binary isnât present in the default location, look …]:pathtofile.dSYM'
    '*:filename:_files'
)
_arguments -s $arguments
