#compdef ebtables-legacy

# Autogenerated from man page /usr/share/man/man8/ebtables-legacy.8.gz

local arguments

arguments=(
    '-t[CONTINUE means the next rule has to be checked. This can be handy, f. e.]:option).'
    '--table[.]'
    {-L,-Z}'[are combined, the commands.]'
    {-N,-P}'[are combined, or when.]'
    '--atomic-file[is used.]'
    {-A,--append}'[Append a rule to the end of the selected chain.]'
    {-D,--delete}'[Delete the specified rule or rules from the selected chain.]'
    '--Ln[to list the rules with their rule number).]'
    '-I[command.]'
    {-C,--change-counters}'[Change the counters of the specified rule or rules from the selected chain.]'
    '--insert[Insert the specified rule into the selected chain at the specified rule numbe…]'
    '--policy[Set the policy for the chain to the given target.]'
    {-F,--flush}'[Flush the selected chain.]'
    '--zero[Set the counters of the selected chain to zero.]'
    '--list[List all rules in the selected chain.]'
    '--Lx[.]:option.'
    '--Lc[.]'
    '--Lmac2[.]'
    '--new-chain[Create a new user-defined chain with the given name.]'
    {-X,--delete-chain}'[Delete the specified user-defined chain.]'
    {-E,--rename-chain}'[Rename the specified chain to a new name.]'
    '--init-table[Replace the current table data by the initial table data.]'
    '--atomic-init[Copy the kernel\s initial data of the table to the specified file.]'
    '--atomic-save[Copy the kernel\s current data of the table to the specified file.]'
    '--atomic-commit[Replace the kernel table data with the data contained in the specified file.]'
    {-V,--version}'[Show the version of the ebtables userspace program.]'
    '(- * :)'{-h,--help}'[Give a brief description of the command syntax.]'
    {-j,--jump}'[The target of the rule.]'
    {-M,--modprobe}'[When talking to the kernel, use this program to try to automatically load mis…]':program
    '--concurrent[Use a file lock to support concurrent scripts updating the ebtables kernel ta…]'
    {-p,--protocol}'[The protocol that was responsible for creating the frame.]'
    '--proto[is an alias for this option.]'
    {-i,--in-interface}'[The interface (bridge port) via which a frame is received (this option is use…]'
    '--in-if[is an alias for this option.]'
    '--logical-in[The (logical) bridge interface via which a frame is received (this option is …]'
    {-o,--out-interface}'[The interface (bridge port) via which a frame is going to be sent (this optio…]'
    '--out-if[is an alias for this option.]'
    '--logical-out[The (logical) bridge interface via which a frame is going to be sent (this op…]'
    {-s,--source}'[The source MAC address.]'
    '--src[is an alias for this option.]'
    {-d,--destination}'[The destination MAC address. See.]'
    '--dst[is an alias for this option.]'
    {-c,--set-counter}'[If used with.]'
    '-m[These extensions deal with functionality supported by kernel modules suppleme…]'
    '--802_3-sap[DSAP and SSAP are two one byte 802. 3 fields.]'
    '--802_3-type[If the 802.]'
    '--among-dst[Compare the MAC destination to the given list.]'
    '--among-src[Compare the MAC source to the given list.]'
    '--among-dst-file[Same as.]'
    '--among-src-file[Same as.]'
    '--arp-opcode[The (R)ARP opcode (decimal or a string, for more details see ebtables -h arp …]'
    '--arp-htype[The hardware type, this can be a decimal or the string Ethernet (which sets t…]'
    '--arp-ptype[The protocol type for which the (r)arp is used (hexadecimal or the string IPv…]'
    '--arp-ip-src[The (R)ARP IP source address specification.]'
    '--arp-ip-dst[The (R)ARP IP destination address specification.]'
    '--arp-mac-src[The (R)ARP MAC source address specification.]'
    '--arp-mac-dst[The (R)ARP MAC destination address specification.]'
    '--ip-source[The source IP address. The flag.]'
    '--ip-src[is an alias for this option.]'
    '--ip-destination[The destination IP address. The flag.]'
    '--ip-dst[is an alias for this option.]'
    '--ip-tos[The IP type of service, in hexadecimal numbers. IPv4 .]'
    '--ip-protocol[The IP protocol. The flag.]'
    '--ip-proto[is an alias for this option.]'
    '--ip-source-port[The source port or port range for the IP protocols 6 (TCP), 17 (UDP), 33 (DCC…]'
    '--ip-sport[is an alias for this option.]'
    '--ip-destination-port[The destination port or port range for ip protocols 6 (TCP), 17 (UDP), 33 (DC…]'
    '--ip-dport[is an alias for this option. ip6 Specify IPv6 fields.]'
    '--ip6-source[The source IPv6 address. The flag.]'
    '--ip6-src[is an alias for this option.]'
    '--ip6-destination[The destination IPv6 address. The flag.]'
    '--ip6-dst[is an alias for this option.]'
    '--ip6-tclass[The IPv6 traffic class, in hexadecimal numbers.]'
    '--ip6-protocol[The IP protocol. The flag.]'
    '--ip6-proto[is an alias for this option.]'
    '--ip6-source-port[The source port or port range for the IPv6 protocols 6 (TCP), 17 (UDP), 33 (D…]'
    '--ip6-sport[is an alias for this option.]'
    '--ip6-destination-port[The destination port or port range for IPv6 protocols 6 (TCP), 17 (UDP), 33 (…]'
    '--ip6-dport[is an alias for this option.]'
    '--ip6-icmp-type[Specify ipv6-icmp type and code to match.]'
    '--log[watcher to give limited logging, for example.]'
    '--limit[Maximum average matching rate: specified as a number, with an optional /secon…]:value'
    '--limit-burst[Maximum initial number of packets to match: this number gets recharged by one…]:number'
    '--mark[Matches frames with the given unsigned mark value.]'
    '--pkttype-type[Matches on the Ethernet "class" of the frame, which is determined by the gene…]'
    '--stp-type[The BPDU type (0-255), recognized non-numerical types are config , denoting a…]'
    '--stp-flags[The BPDU flag (0-255), recognized non-numerical flags are topology-change , d…]'
    '--stp-root-prio[The root priority (0-65535) range.]'
    '--stp-root-addr[The root mac address, see the option.]'
    '--stp-root-cost[The root path cost (0-4294967295) range.]'
    '--stp-sender-prio[The BPDU\s sender priority (0-65535) range.]'
    '--stp-sender-addr[The BPDU\s sender mac address, see the option.]'
    '--stp-port[The port identifier (0-65535) range.]'
    '--stp-msg-age[The message age timer (0-65535) range.]'
    '--stp-max-age[The max age timer (0-65535) range.]'
    '--stp-hello-time[The hello time timer (0-65535) range.]'
    '--stp-forward-delay[The forward delay timer (0-65535) range.]'
    '--string-algo[The pattern matching strategy. (bm = Boyer-Moore, kmp = Knuth-Pratt-Morris).]:algorithm'
    '--string-from[The lowest offset from which a match can start. (default: 0).]:offset'
    '--string-to[The highest offset from which a match can start. (default: size of frame).]:offset'
    '--string[Matches the given pattern.]'
    '--string-hex[Matches the given pattern in hex notation, e. g.]'
    '--string-icase[Ignore case when searching. vlan Specify 802.]'
    '--vlan-id[The VLAN identifier field (VID). Decimal number from 0 to 4095.]'
    '--vlan-prio[The user priority field, a decimal number from 0 to 7.]'
    '--vlan-encap[The encapsulated Ethernet frame type/length.]'
    '--log-level[.]:level'
    '--log-prefix[.]:text'
    '--log-ip[.]'
    '--log-ip6[.]'
    '--log-arp[.]'
    '--nflog[.]'
    '--nflog-group[.]:nlgroup'
    '--nflog-prefix[.]:prefix'
    '--nflog-range[.]:size'
    '--nflog-threshold[.]:size'
    '--ulog[.]'
    '--ulog-prefix[.]:text'
    '--ulog-nlgroup[.]:group'
    '--ulog-cprange[.]:range'
    '--ulog-qthreshold[.]:threshold'
    '--arpreply-mac[Specifies the MAC address to reply with: the Ethernet source MAC and the ARP …]:address'
    '--arpreply-target[Specifies the standard target.]:target'
    '--to-destination[.]:address'
    '--to-dst[is an alias for this option.]'
    '--dnat-target[.]:target'
    '--mark-set[.]:value'
    '--mark-or[.]:value'
    '--mark-and[.]:value'
    '--mark-xor[.]:value'
    '--mark-target[.]:target'
    '--redirect-target[.]:target'
    '--to-source[.]:address'
    '--to-src[is an alias for this option.]'
    '--snat-target[.]:target'
    '--snat-arp[.]'
    '*:filename:_files'
)
_arguments -s $arguments
