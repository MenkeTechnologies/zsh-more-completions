#compdef lli-3

# Autogenerated from man page /usr/share/man/man1/lli-3.5.1.gz

local arguments

arguments=(
    '--fake-argv0[Override the argv\[0\] value passed into the executing program.]:executable'
    '--force-interpreter[If set to true, use the interpreter even if a just-in-time compiler is availa…]:{falsetrue}'
    '--help[Print a summary of command line options.]'
    '--load[Causes lli to load the plugin (shared object) named pluginfilename and use it…]:pluginfilename'
    '--stats[Print statistics from the code-generation passes.]'
    '--time-passes[Record the amount of time needed for each code-generation pass and print it t…]'
    '--version[Print out the version of lli and exit without doing anything else.]'
    '--mtriple[Override the target triple specified in the input bitcode file with the speci…]:triple'
    '--march[Specify the architecture for which to generate assembly, overriding the targe…]:arch'
    '--mcpu[Specify a specific chip in the current architecture to generate code for.]:cpuname'
    {--mattr,--a3}'[Override or control specific attributes of the target, such as whether SIMD o…]':a1+a2-a3...
    '--disable-excess-fp-precision[Disable optimizations that may increase floating point precision.]'
    '--enable-no-infs-fp-math[Enable optimizations that assume no Inf values.]'
    '--enable-no-nans-fp-math[Enable optimizations that assume no NAN values.]'
    '--enable-unsafe-fp-math[Causes lli to enable optimizations that may decrease floating point precision.]'
    '--soft-float[Causes lli to generate software floating point library calls instead of equiv…]'
    '--code-model[Choose the code model from: default: Target default code model small: Small c…]:model'
    '--disable-post-RA-scheduler[Disable scheduling after register allocation.]'
    '--disable-spill-fusing[Disable fusing of spill code into instructions.]'
    '--jit-enable-eh[Exception handling should be enabled in the just-in-time compiler.]'
    '--join-liveintervals[Coalesce copies (default=true).]'
    '--nozero-initialized-in-bss[.]'
    '--pre-RA-sched[Instruction schedulers available (before register allocation): =default: Best…]:scheduler'
    '--regalloc[Register allocator to use (default=linearscan) =bigblock: Big-block register …]:allocator'
    '--relocation-model[Choose relocation model from: =default: Target default relocation model =stat…]:model'
    '--spiller[Spiller to use (default=local) =simple: simple spiller =local: local spiller.]'
    '--x86-asm-syntax[Choose style of code to emit from X86 backend: =att: Emit AT&T-style assembly…]:syntax'
    '*:filename:_files'
)
_arguments -s $arguments
