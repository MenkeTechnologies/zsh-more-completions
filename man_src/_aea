#compdef aea

# Autogenerated from man page /usr/share/man/man1/aea.1

local arguments

arguments=(
    '-v[Increase verbosity. Default is silent operation.]'
    '-h[Print usage and exit.]'
    '--iinput_file[Input file. Default is stdin.]'
    '--ooutput_file[Output file. Default is stdout.]'
    '--profileprofile[br Archive profile, one of the following (both index and id are allowed): .]'
    '--aalgorithm[Compression algorithm used when creating archives.]'
    '--bblock_size[Block size used for compression+encryption, a number with optional b, k, m, g…]'
    '--tworker_threads[Number of worker threads.]'
    '--checksumchecksum_mode[Block checksum mode, one of none, murmur64, sha256.]'
    '--keykey_file[File containing or receiving the symmetric encryption key.]'
    '--key-value<key>[Symmetric encryption key, encoded either as hex:. , or base64:.]'
    '--key-gen[When creating a new archive, generate a new random high entropy symmetric key…]'
    '--passwordpassword_file[File containing or receiving the encryption password.]'
    '--password-value<password>[Encryption password.]'
    '--password-gen[When creating a new archive, generate a new random high entropy password, and…]'
    '--auth-data-key<string>[Define the key for the next -auth-data or -auth-data-value option.]'
    '--auth-datadata_file[Insert the contents of data_file in the container as authentication data.]'
    '--auth-data-value<data>[Insert the contents of data (encoded either as hex:. , or base64:.]'
    '--sign-pubkey_file[File containing the signature public key.]'
    '--sign-privkey_file[File containing the signature private key. Used to sign a container.]'
    '--recipient-pubkey_file[File containing the recipient public key.]'
    '--recipient-privkey_file[File containing the recipient private key.]'
    '--master-keykey_file[When creating a new container, if this option is given, the file will receive…]'
    '-i[Input file. Default is stdin.]:input_file'
    '-o[Output file. Default is stdout.]:output_file'
    '--profile[.]:profile'
    '-a[Compression algorithm used when creating archives.]:algorithm'
    '-b[Block size used for compression+encryption, a number with optional b, k, m, g…]:block_size'
    '-t[Number of worker threads.]:worker_threads'
    '--checksum[Block checksum mode, one of none, murmur64, sha256.]:checksum_mode'
    '--key[File containing or receiving the symmetric encryption key.]:key_file'
    '--key-value[Symmetric encryption key, encoded either as hex:. , or base64:.]:key'
    '--password[File containing or receiving the encryption password.]:password_file'
    '--password-value[Encryption password.]:password'
    '--auth-data-key[Define the key for the next -auth-data or -auth-data-value option.]:string'
    '--auth-data-value[.]'
    '--auth-data[Insert the contents of data_file in the container as authentication data.]:data_file'
    '--sign-pub[File containing the signature public key.]:key_file'
    '--sign-priv[File containing the signature private key. Used to sign a container.]:key_file'
    '--recipient-pub[File containing the recipient public key.]:key_file'
    '--recipient-priv[File containing the recipient private key.]:key_file'
    '--master-key[When creating a new container, if this option is given, the file will receive…]:key_file'
    '--signature-key[When creating an new signed container, if this option is given, the file will…]:key_file'
    '*:filename:_files'
)
_arguments -s $arguments
