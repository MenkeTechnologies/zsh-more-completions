#compdef h2xs5

# Autogenerated from man page /usr/share/man/man1/h2xs5.30.1

local arguments

arguments=(
    {-A,--omit-autoload}'[Omit all autoload facilities.]'
    {-B,--beta-version}'[Use an alpha/beta style version number. Causes version number to be \\*(L"0.]'
    {-C,--omit-changes}'[Omits creation of the Changes file, and adds a \\s-1HISTORY\\s0 section to the …]'
    {-F,--cpp-flags}'[Additional flags to specify to C preprocessor when scanning header for functi…]':addflags
    {-M,--func-mask}'[selects functions/macros to process.]'
    {-O,--overwrite-ok}'[Allows a pre-existing extension directory to be overwritten.]'
    {-P,--omit-pod}'[Omit the autogenerated stub \\s-1POD\\s0 section.]'
    {-X,--omit-XS}'[Omit the \\s-1XS\\s0 portion. Used to generate a skeleton pure Perl module.]'
    {-a,--gen-accessors}'[Generate an accessor method for each element of structs and unions.]'
    {-b,--compat-version}'[Generates a .]':version
    {-c,--omit-constant}'[Omit \\f(CW\\*(C`constant()\\*(C\ from the .]'
    {-d,--debugging}'[Turn on debugging messages.]'
    {-e,--omit-enums}'[If regular expression is not given, skip all constants that are defined in a …]'
    {-f,--force}'[Allows an extension to be created for a header even if that header is not fou…]'
    {-g,--global}'[Include code for safely storing static data in the . xs file.]'
    {-h,-?,--help}'[Print the usage, help and version for this h2xs and exit.]'
    {-k,--omit-const-func}'[For function arguments declared as \\f(CW\\*(C`const\\*(C\, omit the const attri…]'
    {-m,--gen-tied-var}'[Experimental: for each variable declared in the header file(s), declare a per…]'
    {-n,--name}'[Specifies a name to be used for the extension, e. g. , -n\\s-1RPC::DCE\\s0.]':module_name
    {-o,--opaque-re}'[Use \\*(L"opaque\\*(R" data type for the C types matched by the regular express…]'
    {-p,--remove-prefix}'[Specify a prefix which should be removed from the Perl function names, e. g.]':prefix
    {-s,--const-subs}'[Create a perl subroutine for the specified macros rather than autoload with t…]':sub1sub2
    {-t,--default-type}'[Specify the internal type that the constant() mechanism uses for macros.]':type
    '--use-new-tests[When --compat-version (-b) is present the generated tests will use \\f(CW\\*(C`…]'
    '--use-old-tests[Will force the generation of test code that uses the older \\f(CW\\*(C`Test\\*(C…]'
    '--skip-exporter[Do not use \\f(CW\\*(C`Exporter\\*(C\ and/or export any symbol.]'
    '--skip-ppport[Do not use \\f(CW\\*(C`Devel::PPPort\\*(C\: no portability to older version.]'
    '--skip-autoloader[Do not use the module \\f(CW\\*(C`AutoLoader\\*(C\; but keep the constant() func…]'
    '--skip-strict[Do not use the pragma \\f(CW\\*(C`strict\\*(C\.]'
    '--skip-warnings[Do not use the pragma \\f(CW\\*(C`warnings\\*(C\.]'
    {-v,--version}'[Specify a version number for this extension.]':version
    '*:filename:_files'
)
_arguments -s $arguments
