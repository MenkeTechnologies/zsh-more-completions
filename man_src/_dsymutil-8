#compdef dsymutil-8

# Autogenerated from man page /usr/share/man/man1/dsymutil-8.1.gz

local arguments

arguments=(
    '--arch[Link DWARF debug information only for specified CPU architecture types.]:<arch>'
    '--dump-debug-map[Dump the executableâs debug-map (the list of the object files containing th…]'
    {-f,--flat}'[Produce a flat dSYM file. A .]'
    {-z,--minimize}'[When used when creating a dSYM file, this option will suppress the emission o…]'
    '--no-odr[Do not use ODR (One Definition Rule) for uniquing C++ types.]'
    '--no-output[Do the link in memory, but do not emit the result file.]'
    '--no-swiftmodule-timestamp[Donât check the timestamp for swiftmodule files.]'
    {-j,--num-threads}'[Specifies the maximum number (n) of simultaneous threads to use when linking …]'
    '-o[Specifies an alternate path to place the dSYM bundle.]:<filename>'
    '--oso-prepend-path[Specifies a path to prepend to all debug symbol object file paths.]:<path>'
    '--papertrail[When running dsymutil as part of your build system, it can be desirable for w…]'
    {-s,--symtab}'[Dumps the symbol table found in executable or object file(s) and exits.]'
    '--toolchain[Embed the toolchain in the dSYM bundleâs property list.]'
    {-u,--update}'[Update an existing dSYM file to contain the latest accelerator tables and oth…]'
    {-v,--verbose}'[Display verbose information when linking.]'
    '--version[Display the version of the tool.]'
    '-y[Treat executable as a YAML debug-map rather than an executable.]'
    '*:filename:_files'
)
_arguments -s $arguments
