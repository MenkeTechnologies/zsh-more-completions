#compdef llvm-sim

local arguments

arguments=(
  '--color[- Use colors in output (default=autodetect)]'
  '--aarch64-neon-syntax[- Choose style of NEON code to emit from AArch64 backend:]'
  '--aarch64-use-aa[- Enable the use of AA during codegen.]'
  '--abort-on-max-devirt-iterations-reached[- Abort when the max iterations for devirtualization CGSCC repeat pass is reached]'
  '--allow-ginsert-as-artifact[- Allow G_INSERT to be considered an artifact. Hack around AMDGPU test infinite loops.]'
  '--amdgpu-atomic-optimizer-strategy[- Select DPP or Iterative strategy for scan]'
  '--amdgpu-bypass-slow-div[- Skip 64-bit divide for dynamic 32-bit values]'
  '--amdgpu-disable-loop-alignment[- Do not align and prefetch loops]'
  '--amdgpu-dpp-combine[- Enable DPP combiner]'
  '--amdgpu-dump-hsa-metadata[- Dump AMDGPU HSA Metadata]'
  '--amdgpu-enable-merge-m0[- Merge and hoist M0 initializations]'
  '--amdgpu-enable-power-sched[- Enable scheduling to minimize mAI power bursts]'
  '--amdgpu-kernarg-preload-count[- How many kernel arguments to preload onto SGPRs]'
  '--amdgpu-promote-alloca-to-vector-limit[- Maximum byte size to consider promote alloca to vector]'
  '--amdgpu-sdwa-peephole[- Enable SDWA peepholer]'
  '--amdgpu-use-aa-in-codegen[- Enable the use of AA during codegen.]'
  '--amdgpu-verify-hsa-metadata[- Verify AMDGPU HSA Metadata]'
  '--amdgpu-vgpr-index-mode[- Use GPR indexing mode instead of movrel for vector indexing]'
  '--arm-add-build-attributes[-]'
  '--arm-implicit-it[- Allow conditional instructions outdside of an IT block]'
  '--asm-show-inst[- Emit internal instruction representation to assembly file]'
  '--atomic-counter-update-promoted[- Do counter update using atomic fetch add  for promoted counters only]'
  '--atomic-first-counter[- Use atomic fetch add for first counter in a function (usually the entry counter)]'
  '--bounds-checking-single-trap[- Use one trap block per function]'
  '--bounds-checking-unique-traps[- Always use one trap per check]'
  '--bpf-stack-size[- Specify the BPF stack size limit]'
  '--cfg-hide-cold-paths[- Hide blocks with relative frequency below the given value]'
  '--cfg-hide-deoptimize-paths[-]'
  '--cfg-hide-unreachable-paths[-]'
  '--cost-kind[- Target cost kind]'
  '--cs-profile-generate[- Perform context sensitive PGO instrumentation]'
  '--cs-profile-path[- Context sensitive profile file path]'
  '--debug-info-correlate[- Use debug info to correlate profiles. (Deprecated, use -profile-correlate=debug-info)]'
  '--debugify-func-limit[- Set max number of processed functions per pass.]'
  '--debugify-level[- Kind of debug info to add]'
  '--debugify-quiet[- Suppress verbose debugify output]'
  '--disable-auto-upgrade-debug-info[- Disable autoupgrade of debug info]'
  '--disable-i2p-p2i-opt[- Disables inttoptr/ptrtoint roundtrip optimization]'
  '--disable-promote-alloca-to-lds[- Disable promote alloca to LDS]'
  '--disable-promote-alloca-to-vector[- Disable promote alloca to vector]'
  '--do-counter-promotion[- Do counter register promotion]'
  '--dot-cfg-mssa[name for generated dot file>          - file name for generated dot file]'
  '--dwarf-version[- Dwarf version]'
  '--dwarf64[- Generate debugging info in the 64-bit DWARF format]'
  '--emit-compact-unwind-non-canonical[- Whether to try to emit Compact Unwind for non canonical entries.]'
  '--emit-dwarf-unwind[- Whether to emit DWARF EH frame entries.]'
  '--emscripten-cxx-exceptions-allowed[- The list of function names in which Emscripten-style exception handling is enabled (see emscripten EMSCRIPTEN_CATCHING_ALLOWED options)]'
  '--enable-cse-in-irtranslator[- Should enable CSE in irtranslator]'
  '--enable-cse-in-legalizer[- Should enable CSE in Legalizer]'
  '--enable-emscripten-cxx-exceptions[- WebAssembly Emscripten-style exception handling]'
  '--enable-emscripten-sjlj[- WebAssembly Emscripten-style setjmp/longjmp handling]'
  '--enable-gvn-hoist[- Enable the GVN hoisting pass (default = off)]'
  '--enable-gvn-memdep[-]'
  '--enable-gvn-sink[- Enable the GVN sinking pass (default = off)]'
  '--enable-load-in-loop-pre[-]'
  '--enable-load-pre[-]'
  '--enable-loop-simplifycfg-term-folding[-]'
  '--enable-name-compression[- Enable name/filename string compression]'
  '--enable-split-backedge-in-load-pre[-]'
  '--enable-split-loopiv-heuristic[- Enable loop iv regalloc heuristic]'
  '--experimental-debug-variable-locations[- Use experimental new value-tracking variable locations]'
  '--experimental-debuginfo-iterators[- Enable communicating debuginfo positions through iterators, eliminating intrinsics]'
  '--fatal-warnings[- Treat warnings as errors]'
  '--force-tail-folding-style[- Force the tail folding style]'
  '--fs-profile-debug-bw-threshold[- Only show debug message if the source branch weight is greater  than this value.]'
  '--fs-profile-debug-prob-diff-threshold[- Only show debug message if the branch probility is greater than this value (in percentage).]'
  '--generate-merged-base-profiles[- When generating nested context-sensitive profiles, always generate extra base profile for function with all its context profiles merged into it.]'
  '--gpsize[- Global Pointer Addressing Size.  The default size is 8.]'
  '--hash-based-counter-split[- Rename counter variable of a comdat function based on cfg hash]'
  '--hexagon-rdf-limit[-]'
  '--hot-cold-split[- Enable hot-cold splitting pass]'
  '--import-all-index[- Import all external functions in index.]'
  '--incremental-linker-compatible[- When used with filetype=obj, emit an object file which can be used with an incremental linker]'
  '--instcombine-code-sinking[- Enable code sinking]'
  '--instcombine-guard-widening-window[- How wide an instruction window to bypass looking for another guard]'
  '--instcombine-max-num-phis[- Maximum number phis to handle in intptr/ptrint folding]'
  '--instcombine-max-sink-users[- Maximum number of undroppable users for instruction sinking]'
  '--instcombine-maxarray-size[- Maximum array size considered when doing a combine]'
  '--instcombine-negator-enabled[- Should we attempt to sink negations?]'
  '--instcombine-negator-max-depth[- What is the maximal lookup depth when trying to check for viability of negation sinking.]'
  '--instrprof-atomic-counter-update-all[- Make all profile counter updates atomic (for testing only)]'
  '--internalize-public-api-file[- A file containing list of symbol names to preserve]'
  '--internalize-public-api-list[- A list of symbol names to preserve]'
  '--iterative-counter-promotion[- Allow counter promotion across the whole loop nest.]'
  '--lto-aix-system-assembler[- Path to a system assembler, picked up on AIX only]'
  '--lto-embed-bitcode[- Embed LLVM bitcode in object files produced by LTO]'
  '--lto-pass-remarks-filter[- Only record optimization remarks from passes whose names match the given regular expression]'
  '--lto-pass-remarks-format[- The format used for serializing remarks (default: YAML)]'
  '--lto-pass-remarks-output[- Output filename for pass remarks]'
  '--matrix-default-layout[- Sets the default matrix layout]'
  '--matrix-print-after-transpose-opt[-]'
  '--max-counter-promotions[- Max number of allowed counter promotions]'
  '--max-counter-promotions-per-loop[- Max number counter promotions per loop to avoid increasing register pressure too much]'
  '--mc-relax-all[- When used with filetype=obj, relax all fixups in the emitted object file]'
  '--mcabac[- tbd]'
  '--merror-missing-parenthesis[- Error for missing parenthesis around predicate registers]'
  '--merror-noncontigious-register[- Error for register names that arent contigious]'
  '--mhvx[- Enable Hexagon Vector eXtensions]'
  '--mhvx[- Enable Hexagon Vector eXtensions]'
  '--mips-compact-branches[- MIPS Specific: Compact branch policy.]'
  '--mips16-constant-islands[- Enable mips16 constant islands.]'
  '--mips16-hard-float[- Enable mips16 hard float.]'
  '--mir-strip-debugify-only[- Should mir-strip-debug only strip debug info from debugified modules by default]'
  '--misexpect-tolerance[- Prevents emiting diagnostics when profile counts are within N% of the threshold..]'
  '--mno-compound[- Disable looking for compound instructions for Hexagon]'
  '--mno-fixup[- Disable fixing up resolved relocations for Hexagon]'
  '--mno-ldc1-sdc1[- Expand double precision loads and stores to their single precision counterparts]'
  '--mno-pairing[- Disable looking for duplex instructions for Hexagon]'
  '--mwarn-missing-parenthesis[- Warn for missing parenthesis around predicate registers]'
  '--mwarn-noncontigious-register[- Warn for register names that arent contigious]'
  '--mwarn-sign-mismatch[- Warn for mismatching a signed and unsigned value]'
  '--no-deprecated-warn[- Suppress all deprecated warnings]'
  '--no-discriminators[- Disable generation of discriminator information.]'
  '--no-type-check[- Suppress type errors (Wasm)]'
  '--no-warn[- Suppress all warnings]'
  '--nvptx-sched4reg[- NVPTX Specific: schedule for register pressue]'
  '-o[- Output Filename]'
  '--object-size-offset-visitor-max-visit-instructions[- Maximum number of instructions for ObjectSizeOffsetVisitor to look at]'
  '--pgo-block-coverage[- Use this option to enable basic block coverage instrumentation]'
  '--pgo-temporal-instrumentation[- Use this option to enable temporal instrumentation]'
  '--pgo-view-block-coverage-graph[- Create a dot file of CFGs with block coverage inference information]'
  '--poison-checking-function-local[- Check that returns are non-poison (for testing)]'
  '--print-pipeline-passes[- Print a -passes compatible string describing the pipeline (best-effort only).]'
  '--profile-correlate[- Use debug info or binary file to correlate profiles.]'
  '--r600-ir-structurize[- Use StructurizeCFG IR pass]'
  '--riscv-add-build-attributes[-]'
  '--riscv-use-aa[- Enable the use of AA during codegen.]'
  '--runtime-counter-relocation[- Enable relocating counters at runtime.]'
  '--safepoint-ir-verifier-print-only[-]'
  '--sample-profile-check-record-coverage[- Emit a warning if less than N% of records in the input profile are matched to the IR.]'
  '--sample-profile-check-sample-coverage[- Emit a warning if less than N% of samples in the input profile are matched to the IR.]'
  '--sample-profile-max-propagate-iterations[- Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.]'
  '--skip-ret-exit-block[- Suppress counter promotion if exit blocks contain ret.]'
  '--speculative-counter-promotion-max-exiting[- The max number of exiting blocks of a loop to allow  speculative counter promotion]'
  '--speculative-counter-promotion-to-loop[- When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.]'
  '--summary-file[- The summary file to use for function importing.]'
  '--sve-tail-folding[- Control the use of vectorisation using tail-folding for SVE where the option is specified in the form (Initial)\[+(Flag1|Flag2|...)\]:]'
  '--tail-predication[- MVE tail-predication pass options]'
  '--thinlto-assume-merged[- Assume the input has already undergone ThinLTO function importing and the other pre-optimization pipeline changes.]'
  '--threads[-]'
  '--type-based-intrinsic-cost[- Calculate intrinsics cost based only on argument types]'
  '--verify-region-info[- Verify region info (time consuming)]'
  '--vp-counters-per-site[- The average number of profile counters allocated per value profiling site.]'
  '--vp-static-alloc[- Do static counter allocation for value profiler]'
  '--wasm-enable-eh[- WebAssembly exception handling]'
  '--wasm-enable-sjlj[- WebAssembly setjmp/longjmp handling]'
  '--x86-align-branch[- Specify types of branches to align (plus separated list of types):]'
  '--x86-align-branch-boundary[- Control how the assembler should align branches with NOP. If the boundarys size is not 0, it should be a power of 2 and no less than 32. Branches will be aligned to prevent from being across or against the boundary of specified size. The default value 0 does not align branches.]'
  '--x86-branches-within-32B-boundaries[- Align selected instructions to mitigate negative performance impact of Intels micro code update for errata skx102.  May break assumptions about labels corresponding to particular instructions, and should be used with caution.]'
  '--x86-pad-max-prefix-size[- Maximum number of prefixes to use for padding]'
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '*:filename:_files'
)

_arguments -s $arguments
