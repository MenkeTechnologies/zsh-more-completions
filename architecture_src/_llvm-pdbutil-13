#compdef llvm-pdbutil-13

# Autogenerated from man page /usr/share/man/man1/llvm-pdbutil-13.1.gz

local arguments

arguments=(
    '--exclude-compilands[When dumping compilands, compiland source-file contributions, or per-compilan…]:string'
    '--exclude-symbols[When dumping global, public, or per-compiland symbols, this option instructs …]:string'
    '--exclude-types[When dumping types, this option instructs llvm-pdbutil to omit any types that…]:string'
    '--include-compilands[When dumping compilands, compiland source-file contributions, or per-compilan…]:string'
    '--include-symbols[When dumping global, public, or per-compiland symbols, limit the initial sear…]:string'
    '--include-types[When dumping types, limit the initial search to only those types that match t…]:string'
    '--min-class-padding[Only display types that have at least the specified amount of alignment paddi…]:uint'
    '--min-class-padding-imm[Only display types that have at least the specified amount of alignment paddi…]:uint'
    '--min-type-size[Only display types T where sizeof(T) is greater than or equal to the specifie…]:uint'
    '--no-compiler-generated[Donât show compiler generated types and symbols.]'
    '--no-enum-definitions[When dumping an enum, donât show the full enum (e. g.]'
    '--no-system-libs[Donât show symbols from system libraries.]'
    '--all[Implies all other options in this category.]'
    '--class-definitions[Displays class definitions in the specified format.]:format'
    '--class-order[Displays classes in the specified order.]'
    '--class-recurse-depth[When dumping class definitions, stop after recursing the specified number of …]:uint'
    '--classes[Display classes.]'
    '--compilands[Display compilands (e. g. object files).]'
    '--enums[Display enums.]'
    '--externals[Dump external (e. g. exported) symbols.]'
    '--globals[Dump global symbols.]'
    '--lines[Dump the mappings between source lines and code addresses.]'
    '--module-syms[Display symbols (variables, functions, etc) for each compiland.]'
    '--sym-types[Type of symbols to dump when -globals, -externals, or -module-syms is specifi…]:types'
    '--symbol-order[For symbols dumped via the -module-syms, -globals, or -externals options, sor…]:order'
    '--typedefs[Display typedef types.]'
    '--types[Display all types (implies -classes, -enums, -typedefs).]'
    '--color-output[Force color output on or off.]'
    '--load-address[When displaying relative virtual addresses, assume the process is loaded at t…]:uint'
    '--streams[dump a summary of all of the streams in the PDB file.]'
    '--stream-blocks[In conjunction with %-streams, add information to the output about what block…]'
    '--summary[Dump MSF and PDB header information.]'
    '--modi[For all options that dump information from each module/compiland, limit to th…]:uint'
    '--files[Dump the source files that contribute to each displayed module.]'
    '--il[Dump inlinee line information (DEBUG_S_INLINEELINES CodeView subsection).]'
    '-l[Dump line information (DEBUG_S_LINES CodeView subsection).]'
    '--modules[Dump compiland information.]'
    '--xme[Dump cross module exports (DEBUG_S_CROSSSCOPEEXPORTS CodeView subsection).]'
    '--xmi[Dump cross module imports (DEBUG_S_CROSSSCOPEIMPORTS CodeView subsection).]'
    '--global-extras[dump additional information about the globals, such as hash buckets and hash …]'
    '--publics[dump public symbol records.]'
    '--public-extras[dump additional information about the publics, such as hash buckets and hash …]'
    '--symbols[dump symbols (functions, variables, etc) for each module dumped.]'
    '--sym-data[For each symbol record dumped as a result of the %-symbols option, display th…]'
    '--type-extras[Dump additional information from the TPI stream, such as hashes and the type …]'
    '--type-data[For each type record dumped, display the full bytes of the record in binary a…]'
    '--type-index[Only dump types with the specified type index.]:uint'
    '--ids[Dump CodeView type records from IPI stream.]'
    '--id-extras[Dump additional information from the IPI stream, such as hashes and the type …]'
    '--id-data[For each ID record dumped, display the full bytes of the record in binary as …]'
    '--id-index[only dump ID records with the specified hexadecimal type index.]:uint'
    '--dependents[When used in conjunction with %-type-index or %-id-index, dumps the entire de…]'
    '--section-contribs[Dump section contributions.]'
    '--section-headers[Dump image section headers.]'
    '--section-map[Dump section map.]'
    '--string-table[Dump PDB string table.]'
    '--block-range[Dump binary data from specified range of MSF file blocks.]:start-end'
    '--byte-range[Dump binary data from specified range of bytes in the file.]:start-end'
    '--fpm[Dump the MSF free page map.]'
    '--stream-data[Dump binary data from the specified streams. Format is SN\[:Start\]\[@Size\].]:string'
    '--name-map[Dump bytes of PDB Name Map.]'
    '--ec[Dump the edit and continue map substream of the DBI stream.]'
    '--sc[Dump section contributions substream of the DBI stream.]'
    '--sm[Dump the section map from the DBI stream.]'
    '--type-server[Dump the type server map from the DBI stream.]'
    '--mod[Limit all options in this category to the specified module index.]:uint'
    '--chunks[Dump the bytes of each moduleâs C13 debug subsection.]'
    '--split-chunks[When specified with %-chunks, split the C13 debug subsection into a separate …]'
    '--syms[Dump the symbol record substream from each module.]'
    '--id[Dump the record from the IPI stream with the given type index.]:uint'
    '--type[Dump the record from the TPI stream with the given type index.]:uint'
    '--pdb[Write the resulting PDB to the specified file. merge.]:file-name'
    '*:filename:_files'
)
_arguments -s $arguments
