#compdef llvm-objdump-13

local arguments

arguments=(
  '--adjust-vma[increase the displayed address by the specified offset]'
  '--all-headers[display all available header information]'
  '--arch-name[target arch to disassemble for, see --version for available targets]'
  '--archive-headers[display archive header information]'
  '-a[alias for --archive-headers]'
  '-C[alias for --demangle]'
  '--debug-vars-indent[distance to indent the source-level variable display, relative to the start of the disassembly]'
  '--debug-vars[print the locations (in registers or memory) of source-level variables alongside disassembly]'
  '--demangle[demangle symbol names]'
  '--disassemble-all[display assembler mnemonics for the machine instructions]'
  '--disassemble-symbols[list of symbols to disassemble. Accept demangled names when --demangle is specified, otherwise accept mangled names]'
  '--disassemble-zeroes[do not skip blocks of zeroes when disassembling]'
  '--disassembler-options[pass target specific disassembler options]'
  '--disassemble[display assembler mnemonics for the machine instructions]'
  '--dwarf[dump of dwarf debug sections]'
  '--dynamic-reloc[display the dynamic relocation entries in the file]'
  '--dynamic-syms[display the contents of the dynamic symbol table]'
  '-D[alias for --disassemble-all]'
  '-d[alias for --disassemble]'
  '--fault-map-section[display contents of faultmap section]'
  '--file-headers[display the contents of the overall file header]'
  '--full-contents[display the content of each section]'
  '-f[alias for --file-headers]'
  '--headers[alias for --section-headers]'
  '--help[display available options (--help-hidden for more)]'
  '-h[alias for --section-headers]'
  '-j[alias for --section]'
  '--line-numbers[display source line numbers with disassembly. Implies disassemble object]'
  '-l[alias for --line-numbers]'
  '--macho[use MachO specific object file parser]'
  '--mattr[1,+a2,-a3,...  Target specific attributes (--mattr=help for details)]'
  '--mcpu[target a specific cpu type (--mcpu=help for details)]'
  '-M[alias for --disassembler-options]'
  '-m[alias for --macho]'
  '--no-leading-addr[print no leading address]'
  '--no-print-imm-hex[do not use hex format for immediate values (default)]'
  '--no-show-raw-insn[when disassembling instructions, do not print the instruction bytes.]'
  '--prefix-strip[strip out initial directories from absolute paths. No effect without --prefix]'
  '--prefix[add prefix to absolute paths]'
  '--print-imm-hex[use hex format for immediate values]'
  '--private-headers[display format specific file headers]'
  '-p[alias for --private-headers]'
  '--raw-clang-ast[dump the raw binary contents of the clang AST section]'
  '--reloc[display the relocation entries in the file]'
  '-R[alias for --dynamic-reloc]'
  '-r[alias for --reloc]'
  '--section-headers[display summaries of the headers for each section.]'
  '--section[operate on the specified sections only. With --macho dump segment,section]'
  '--show-lma[display LMA column when dumping ELF section headers]'
  '--source[display source inlined with disassembly. Implies disassemble object]'
  '--start-address[disassemble beginning at address]'
  '--stop-address[stop disassembly at address]'
  '--symbol-description[add symbol description for disassembly. This option is for XCOFF files only.]'
  '--symbolize-operands[symbolize instruction operands when disassembling]'
  '--syms[display the symbol table]'
  '-S[alias for --source]'
  '-s[alias for --full-contents]'
  '--triple[target triple to disassemble for, see --version for available targets]'
  '-T[alias for --dynamic-syms]'
  '-t[alias for --syms]'
  '--unwind-info[display unwind information]'
  '-u[alias for --unwind-info]'
  '--version[display the version of this program]'
  '-v[alias for --version]'
  '--wide[ignored for compatibility with GNU objdump]'
  '--x86-asm-syntax[emit AT&T-style disassembly]'
  '--x86-asm-syntax[emit Intel-style disassembly]'
  '-x[alias for --all-headers]'
  '-z[alias for --disassemble-zeroes]'
  '--arch[architecture(s) from a Mach-O file to dump]'
  '--archive-member-offsets[print the offset to each archive member for Mach-O archives (requires --macho and --archive-headers)]'
  '--bind[display mach-o binding info]'
  '--data-in-code[print the data in code table for Mach-O objects (requires --macho)]'
  '--dis-symname[disassemble just this symbols instructions (requires --macho)]'
  '--dsym[use .dSYM file for debug info]'
  '--dylib-id[print the shared librarys id for the dylib Mach-O file (requires --macho)]'
  '--dylibs-used[print the shared libraries used for linked Mach-O files (requires --macho)]'
  '--exports-trie[display mach-o exported symbols]'
  '--full-leading-addr[print full leading address]'
  '--function-starts[print the function starts table for Mach-O objects (requires --macho)]'
  '-g[print line information from debug info if available]'
  '--indirect-symbols[print indirect symbol table for Mach-O objects (requires --macho)]'
  '--info-plist[print the info plist section as strings for Mach-O objects (requires --macho)]'
  '--lazy-bind[display mach-o lazy binding info]'
  '--link-opt-hints[print the linker optimization hints for Mach-O objects (requires --macho)]'
  '--no-leading-headers[print no leading headers]'
  '--no-symbolic-operands[not symbolic operands when disassembling (requires --macho)]'
  '--non-verbose[print the info for Mach-O objects in non-verbose or numeric form (requires --macho)]'
  '--objc-meta-data[print the Objective-C runtime meta data for Mach-O files (requires --macho)]'
  '--private-header[display only the first format specific file header]'
  '--rebase[display mach-o rebasing info]'
  '--rpaths[print the runtime search paths for the Mach-O file (requires --macho)]'
  '--universal-headers[print Mach-O universal headers (requires --macho)]'
  '--weak-bind[display mach-o weak binding info]'
  '*:filename:_files'
)

_arguments -s $arguments
