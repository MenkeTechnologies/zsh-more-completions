#compdef x86_64-w64-mingw32-dlltool

local arguments

arguments=(
  {-m,--machine}'[create as DLL for <machine>. \[default: i386:x86-64\]]'
  {-e,--output-exp}'[generate an export file.]'
  {-l,--output-lib}'[generate an interface library.]'
  {-y,--output-delaylib}'[create a delay-import library.]'
  {-a,--add-indirect}'[add dll indirects to export file.]'
  {-D,--dllname}'[name of input dll to put into interface lib.]'
  {-d,--input-def}'[name of .def file to be read in.]'
  {-z,--output-def}'[name of .def file to be created.]'
  '--export-all-symbols[export all symbols to .def]'
  '--no-export-all-symbols[only export listed symbols]'
  '--exclude-symbols[dont export <list>]'
  '--no-default-excludes[clear default exclude symbols]'
  {-b,--base-file}'[read linker generated base file.]'
  {-x,--no-idata4}'[dont generate idata$4 section.]'
  {-c,--no-idata5}'[dont generate idata$5 section.]'
  '--use-nul-prefixed-import-tables[zero prefixed idata$4 and idata$5.]'
  {-U,--add-underscore}'[add underscores to all symbols in interface library.]'
  '--add-stdcall-underscore[underscores to stdcall symbols in interface library.]'
  '--no-leading-underscore[symbols shouldnt be prefixed by an underscore.]'
  '--leading-underscore[all symbols should be prefixed by an underscore.]'
  {-k,--kill-at}'[kill @<n> from exported names.]'
  {-A,--add-stdcall-alias}'[add aliases without @<n>.]'
  {-p,--ext-prefix-alias}'[add aliases with <prefix>.]'
  {-S,--as}'[use <name> for assembler.]'
  {-f,--as-flags}'[pass <flags> to the assembler.]'
  {-C,--compat-implib}'[create backward compatible import library.]'
  {-n,--no-delete}'[keep temp files (repeat for extra preservation).]'
  {-t,--temp-prefix}'[use <prefix> to construct temp file names.]'
  {-I,--identify}'[report the name of the DLL associated with <implib>.]'
  '--identify-strict[causes --identify to report error when multiple DLLs.]'
  {-v,--verbose}'[be verbose.]'
  {-V,--version}'[display the program version.]'
  '(- * :)'{-h,--help}'[display this information.]'
  '*:filename:_files'
)

_arguments -s $arguments
