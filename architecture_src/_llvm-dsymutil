#compdef llvm-dsymutil

local arguments

arguments=(
  '-arch[Link DWARF debug information only for specified CPU architecture]'
  '-dump-debug-map[Parse and dump the debug map to standard output. Not DWARF link will take place.]'
  '-flat[Produce a flat dSYM file (not a bundle).]'
  '-help[Display available options (-help-hidden for more)]'
  '-minimize[When used when creating a dSYM file, this option will suppress]'
  '-no-odr[Do not use ODR (One Definition Rule) for type uniquing.]'
  '-no-output[Do the link in memory, but do not emit the result file.]'
  '-no-swiftmodule-timestamp[Dont check timestamp for swiftmodule files.]'
  '-num-threads[Specifies the maximum number (n) of simultaneous threads to use]'
  '-o[Specify the output file. default: <input file>.dwarf]'
  '-oso-prepend-path[Specify a directory to prepend to the paths of object files.]'
  '-papertrail[Embed warnings in the linked DWARF debug info.]'
  '-symbol-map[Updates the existing dsyms inplace using symbol map specified.]'
  '-symtab[Dumps the symbol table found in executable or object file(s) and]'
  '-toolchain[Embed toolchain information in dSYM bundle.]'
  '-update[Updates existing dSYM files to contain the latest accelerator]'
  '-verbose[Verbosity level]'
  '-verify[Verify the linked DWARF debug info.]'
  '-version[Display the version of this program]'
  '-y[Treat the input file is a YAML debug map rather than a binary.]'
  '*:filename:_files'
)

_arguments -s $arguments
