#compdef llvm-exegesis-11

local arguments

arguments=(
  '--color[- Use colors in output (default=autodetect)]'
  '--debugify-level[- Kind of debug info to add]'
  '--debugify-quiet[- Suppress verbose debugify output]'
  '--enable-cse-in-irtranslator[- Should enable CSE in irtranslator]'
  '--enable-cse-in-legalizer[- Should enable CSE in Legalizer]'
  '--enable-name-compression[- Enable name/filename string compression]'
  '--mir-strip-debugify-only[- Should mir-strip-debug only strip debug info from debugified modules by default]'
  '--x86-align-branch[- Specify types of branches to align (plus separated list of types):]'
  '--x86-align-branch-boundary[- Control how the assembler should align branches with NOP. If the boundarys size is not 0, it should be a power of 2 and no less than 32. Branches will be aligned to prevent from being across or against the boundary of specified size. The default value 0 does not align branches.]'
  '--x86-branches-within-32B-boundaries[- Align selected instructions to mitigate negative performance impact of Intels micro code update for errata skx102.  May break assumptions about labels corresponding to particular instructions, and should be used with caution.]'
  '--x86-pad-max-prefix-size[- Maximum number of prefixes to use for padding]'
  '--help[- Display available options (--help-hidden for more)]'
  '--help-list[- Display list of available options (--help-list-hidden for more)]'
  '--version[- Display the version of this program]'
  '--analysis-clustering[- the clustering algorithm to use]'
  '--analysis-clustering-epsilon[- epsilon for benchmark point clustering]'
  '--analysis-clusters-output-file[-]'
  '--analysis-display-unstable-clusters[- if there is more than one benchmark for an opcode, said benchmarks may end up not being clustered into the same cluster if the measured performance characteristics are different. by default all such opcodes are filtered out. this flag will instead show only such unstable opcodes]'
  '--analysis-inconsistencies-output-file[-]'
  '--analysis-inconsistency-epsilon[- epsilon for detection of when the cluster is different from the LLVM schedule profile values]'
  '--analysis-numpoints[- minimum number of points in an analysis cluster (dbscan only)]'
  '--dump-object-to-disk[- dumps the generated benchmark object to disk and prints a message to access it]'
  '--ignore-invalid-sched-class[- ignore instructions that do not define a sched class]'
  '--max-configs-per-opcode[- allow to snippet generator to generate at most that many configs]'
  '--num-repetitions[- number of time to repeat the asm snippet]'
  '--opcode-index[- opcode to measure, by index, or -1 to measure all opcodes]'
  '--opcode-name[- comma-separated list of opcodes to measure, by name]'
  '--repetition-mode[- how to repeat the instruction snippet]'
  '--snippets-file[- code snippets to measure]'
  '--benchmarks-file[- File to read (analysis mode) or write (latency/uops/inverse_throughput modes) benchmark results. “-” uses stdin/stdout.]'
  '--mcpu[- cpu name to use for pfm counters, leave empty to autodetect]'
  '--mode[- the mode to run]'
  '--result-aggregation-mode[- How to aggregate multi-values result]'
  '*:filename:_files'
)

_arguments -s $arguments
